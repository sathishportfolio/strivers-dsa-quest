import{$ as Va,$a as Ot,$b as yn,A as Rt,Aa as _l,Ab as Pl,B as Qt,Ba as ni,Bb as ie,Bc as xt,C as Ci,Ca as Se,Cb as re,Cc as Xe,D as ja,Da as mn,Db as q,Dc as tc,E as De,Ea as Si,Eb as Bl,F as ln,Fa as Di,Fb as ee,Fc as Be,G as cl,Ga as vl,Gb as oe,Gc as Ct,H as cn,Ha as wl,Hb as x,Hc as et,I as Xt,Ia as kl,Ib as C,Ic as ic,J as qt,Ja as xl,Jb as Nl,Jc as nc,K as Wa,Ka as Cl,Kb as Hl,L as dl,La as Sl,Lb as Re,M as hl,Ma as Dl,Mb as te,N as ul,Na as Ue,Nb as Qe,O as Ua,Oa as Il,Ob as Pe,P as fo,Pa as pn,Pb as Ll,Q as _e,Qa as g,Qb as Ka,R as ve,Ra as c,Rb as Za,S as j,Sa as fn,Sb as $a,T as ml,Ta as Oe,Tb as W,U as ge,Ua as Al,Ub as G,V as fe,Va as Ga,Vb as gn,W as Le,Wa as bo,Wb as bn,X as S,Xa as yo,Xb as zl,Y as P,Ya as ze,Yb as vo,Z as pl,Za as Ml,Zb as wo,_ as w,_a as Ya,_b as jl,a as _,aa as p,ab as Tl,ac as Ja,b as me,ba as b,bb as Z,bc as Wl,ca as dn,cb as le,cc as de,d as ke,da as V,db as El,dc as ai,e as sl,ea as B,eb as Rl,ec as Ul,f as rt,fa as k,fb as R,fc as M,g as La,ga as hn,gb as ql,gc as vt,h as rn,ha as fl,hb as _o,hc as wt,i as D,ia as ei,ib as Fe,ic as lt,j as Ee,ja as bt,jb as X,jc as Vl,k as mt,ka as be,kb as F,kc as Ii,l as He,la as J,lb as oi,lc as Gl,m as T,ma as Q,mb as z,mc as Yl,n as Zt,na as un,nb as st,nc as L,o as $t,oa as gl,ob as Ol,oc as Ai,p as ll,pa as ye,pb as $,pc as Kl,q as E,qa as $e,qb as m,qc as ko,r as sn,ra as xe,rb as f,rc as Zl,s as Ze,sa as bl,sb as ae,sc as $l,t as mo,ta as N,tb as yt,tc as Jl,u as Jt,ua as I,ub as _t,uc as kt,v as po,va as ti,vb as je,vc as Ql,w as pt,wa as A,wb as Ie,wc as Xl,x as Ce,xa as ii,xb as Je,xc as Qa,y as ce,ya as yl,yb as Fl,yc as ec,z as za,za as go,zb as H}from"./chunk-XZEBDMQ3.js";var er=class{};var Mi=class i{constructor(n){this.normalizedNames=new Map,this.lazyUpdate=null,n?typeof n=="string"?this.lazyInit=()=>{this.headers=new Map,n.split(`
`).forEach(e=>{let t=e.indexOf(":");if(t>0){let o=e.slice(0,t),a=o.toLowerCase(),r=e.slice(t+1).trim();this.maybeSetNormalizedName(o,a),this.headers.has(a)?this.headers.get(a).push(r):this.headers.set(a,[r])}})}:typeof Headers<"u"&&n instanceof Headers?(this.headers=new Map,n.forEach((e,t)=>{this.setHeaderEntries(t,e)})):this.lazyInit=()=>{this.headers=new Map,Object.entries(n).forEach(([e,t])=>{this.setHeaderEntries(e,t)})}:this.headers=new Map}has(n){return this.init(),this.headers.has(n.toLowerCase())}get(n){this.init();let e=this.headers.get(n.toLowerCase());return e&&e.length>0?e[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(n){return this.init(),this.headers.get(n.toLowerCase())||null}append(n,e){return this.clone({name:n,value:e,op:"a"})}set(n,e){return this.clone({name:n,value:e,op:"s"})}delete(n,e){return this.clone({name:n,value:e,op:"d"})}maybeSetNormalizedName(n,e){this.normalizedNames.has(e)||this.normalizedNames.set(e,n)}init(){this.lazyInit&&(this.lazyInit instanceof i?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(n=>this.applyUpdate(n)),this.lazyUpdate=null))}copyFrom(n){n.init(),Array.from(n.headers.keys()).forEach(e=>{this.headers.set(e,n.headers.get(e)),this.normalizedNames.set(e,n.normalizedNames.get(e))})}clone(n){let e=new i;return e.lazyInit=this.lazyInit&&this.lazyInit instanceof i?this.lazyInit:this,e.lazyUpdate=(this.lazyUpdate||[]).concat([n]),e}applyUpdate(n){let e=n.name.toLowerCase();switch(n.op){case"a":case"s":let t=n.value;if(typeof t=="string"&&(t=[t]),t.length===0)return;this.maybeSetNormalizedName(n.name,e);let o=(n.op==="a"?this.headers.get(e):void 0)||[];o.push(...t),this.headers.set(e,o);break;case"d":let a=n.value;if(!a)this.headers.delete(e),this.normalizedNames.delete(e);else{let r=this.headers.get(e);if(!r)return;r=r.filter(s=>a.indexOf(s)===-1),r.length===0?(this.headers.delete(e),this.normalizedNames.delete(e)):this.headers.set(e,r)}break}}setHeaderEntries(n,e){let t=(Array.isArray(e)?e:[e]).map(a=>a.toString()),o=n.toLowerCase();this.headers.set(o,t),this.maybeSetNormalizedName(n,o)}forEach(n){this.init(),Array.from(this.normalizedNames.keys()).forEach(e=>n(this.normalizedNames.get(e),this.headers.get(e)))}};var tr=class{encodeKey(n){return oc(n)}encodeValue(n){return oc(n)}decodeKey(n){return decodeURIComponent(n)}decodeValue(n){return decodeURIComponent(n)}};function Nu(i,n){let e=new Map;return i.length>0&&i.replace(/^\?/,"").split("&").forEach(o=>{let a=o.indexOf("="),[r,s]=a==-1?[n.decodeKey(o),""]:[n.decodeKey(o.slice(0,a)),n.decodeValue(o.slice(a+1))],l=e.get(r)||[];l.push(s),e.set(r,l)}),e}var Hu=/%(\d[a-f0-9])/gi,Lu={40:"@","3A":":",24:"$","2C":",","3B":";","3D":"=","3F":"?","2F":"/"};function oc(i){return encodeURIComponent(i).replace(Hu,(n,e)=>Lu[e]??n)}function xo(i){return`${i}`}var Ft=class i{constructor(n={}){if(this.updates=null,this.cloneFrom=null,this.encoder=n.encoder||new tr,n.fromString){if(n.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=Nu(n.fromString,this.encoder)}else n.fromObject?(this.map=new Map,Object.keys(n.fromObject).forEach(e=>{let t=n.fromObject[e],o=Array.isArray(t)?t.map(xo):[xo(t)];this.map.set(e,o)})):this.map=null}has(n){return this.init(),this.map.has(n)}get(n){this.init();let e=this.map.get(n);return e?e[0]:null}getAll(n){return this.init(),this.map.get(n)||null}keys(){return this.init(),Array.from(this.map.keys())}append(n,e){return this.clone({param:n,value:e,op:"a"})}appendAll(n){let e=[];return Object.keys(n).forEach(t=>{let o=n[t];Array.isArray(o)?o.forEach(a=>{e.push({param:t,value:a,op:"a"})}):e.push({param:t,value:o,op:"a"})}),this.clone(e)}set(n,e){return this.clone({param:n,value:e,op:"s"})}delete(n,e){return this.clone({param:n,value:e,op:"d"})}toString(){return this.init(),this.keys().map(n=>{let e=this.encoder.encodeKey(n);return this.map.get(n).map(t=>e+"="+this.encoder.encodeValue(t)).join("&")}).filter(n=>n!=="").join("&")}clone(n){let e=new i({encoder:this.encoder});return e.cloneFrom=this.cloneFrom||this,e.updates=(this.updates||[]).concat(n),e}init(){this.map===null&&(this.map=new Map),this.cloneFrom!==null&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(n=>this.map.set(n,this.cloneFrom.map.get(n))),this.updates.forEach(n=>{switch(n.op){case"a":case"s":let e=(n.op==="a"?this.map.get(n.param):void 0)||[];e.push(xo(n.value)),this.map.set(n.param,e);break;case"d":if(n.value!==void 0){let t=this.map.get(n.param)||[],o=t.indexOf(xo(n.value));o!==-1&&t.splice(o,1),t.length>0?this.map.set(n.param,t):this.map.delete(n.param)}else{this.map.delete(n.param);break}}}),this.cloneFrom=this.updates=null)}};var ir=class{constructor(){this.map=new Map}set(n,e){return this.map.set(n,e),this}get(n){return this.map.has(n)||this.map.set(n,n.defaultValue()),this.map.get(n)}delete(n){return this.map.delete(n),this}has(n){return this.map.has(n)}keys(){return this.map.keys()}};function zu(i){switch(i){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}function ac(i){return typeof ArrayBuffer<"u"&&i instanceof ArrayBuffer}function rc(i){return typeof Blob<"u"&&i instanceof Blob}function sc(i){return typeof FormData<"u"&&i instanceof FormData}function ju(i){return typeof URLSearchParams<"u"&&i instanceof URLSearchParams}var _n=class i{constructor(n,e,t,o){this.url=e,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=n.toUpperCase();let a;if(zu(this.method)||o?(this.body=t!==void 0?t:null,a=o):a=t,a&&(this.reportProgress=!!a.reportProgress,this.withCredentials=!!a.withCredentials,a.responseType&&(this.responseType=a.responseType),a.headers&&(this.headers=a.headers),a.context&&(this.context=a.context),a.params&&(this.params=a.params),this.transferCache=a.transferCache),this.headers??=new Mi,this.context??=new ir,!this.params)this.params=new Ft,this.urlWithParams=e;else{let r=this.params.toString();if(r.length===0)this.urlWithParams=e;else{let s=e.indexOf("?"),l=s===-1?"?":s<e.length-1?"&":"";this.urlWithParams=e+l+r}}}serializeBody(){return this.body===null?null:typeof this.body=="string"||ac(this.body)||rc(this.body)||sc(this.body)||ju(this.body)?this.body:this.body instanceof Ft?this.body.toString():typeof this.body=="object"||typeof this.body=="boolean"||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return this.body===null||sc(this.body)?null:rc(this.body)?this.body.type||null:ac(this.body)?null:typeof this.body=="string"?"text/plain":this.body instanceof Ft?"application/x-www-form-urlencoded;charset=UTF-8":typeof this.body=="object"||typeof this.body=="number"||typeof this.body=="boolean"?"application/json":null}clone(n={}){let e=n.method||this.method,t=n.url||this.url,o=n.responseType||this.responseType,a=n.transferCache??this.transferCache,r=n.body!==void 0?n.body:this.body,s=n.withCredentials??this.withCredentials,l=n.reportProgress??this.reportProgress,d=n.headers||this.headers,h=n.params||this.params,u=n.context??this.context;return n.setHeaders!==void 0&&(d=Object.keys(n.setHeaders).reduce((v,y)=>v.set(y,n.setHeaders[y]),d)),n.setParams&&(h=Object.keys(n.setParams).reduce((v,y)=>v.set(y,n.setParams[y]),h)),new i(e,t,r,{params:h,headers:d,context:u,reportProgress:l,responseType:o,withCredentials:s,transferCache:a})}},lc=function(i){return i[i.Sent=0]="Sent",i[i.UploadProgress=1]="UploadProgress",i[i.ResponseHeader=2]="ResponseHeader",i[i.DownloadProgress=3]="DownloadProgress",i[i.Response=4]="Response",i[i.User=5]="User",i}(lc||{}),nr=class{constructor(n,e=200,t="OK"){this.headers=n.headers||new Mi,this.status=n.status!==void 0?n.status:e,this.statusText=n.statusText||t,this.url=n.url||null,this.ok=this.status>=200&&this.status<300}};var or=class i extends nr{constructor(n={}){super(n),this.type=lc.Response,this.body=n.body!==void 0?n.body:null}clone(n={}){return new i({body:n.body!==void 0?n.body:this.body,headers:n.headers||this.headers,status:n.status!==void 0?n.status:this.status,statusText:n.statusText||this.statusText,url:n.url||this.url||void 0})}};function Xa(i,n){return{body:n,headers:i.headers,context:i.context,observe:i.observe,params:i.params,reportProgress:i.reportProgress,responseType:i.responseType,withCredentials:i.withCredentials,transferCache:i.transferCache}}var cc=(()=>{class i{constructor(e){this.handler=e}request(e,t,o={}){let a;if(e instanceof _n)a=e;else{let l;o.headers instanceof Mi?l=o.headers:l=new Mi(o.headers);let d;o.params&&(o.params instanceof Ft?d=o.params:d=new Ft({fromObject:o.params})),a=new _n(e,t,o.body!==void 0?o.body:null,{headers:l,context:o.context,params:d,reportProgress:o.reportProgress,responseType:o.responseType||"json",withCredentials:o.withCredentials,transferCache:o.transferCache})}let r=T(a).pipe(Qt(l=>this.handler.handle(l)));if(e instanceof _n||o.observe==="events")return r;let s=r.pipe(ce(l=>l instanceof or));switch(o.observe||"body"){case"body":switch(a.responseType){case"arraybuffer":return s.pipe(E(l=>{if(l.body!==null&&!(l.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return l.body}));case"blob":return s.pipe(E(l=>{if(l.body!==null&&!(l.body instanceof Blob))throw new Error("Response is not a Blob.");return l.body}));case"text":return s.pipe(E(l=>{if(l.body!==null&&typeof l.body!="string")throw new Error("Response is not a string.");return l.body}));case"json":default:return s.pipe(E(l=>l.body))}case"response":return s;default:throw new Error(`Unreachable: unhandled observe type ${o.observe}}`)}}delete(e,t={}){return this.request("DELETE",e,t)}get(e,t={}){return this.request("GET",e,t)}head(e,t={}){return this.request("HEAD",e,t)}jsonp(e,t){return this.request("JSONP",e,{params:new Ft().append(t,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(e,t={}){return this.request("OPTIONS",e,t)}patch(e,t,o={}){return this.request("PATCH",e,Xa(o,t))}post(e,t,o={}){return this.request("POST",e,Xa(o,t))}put(e,t,o={}){return this.request("PUT",e,Xa(o,t))}static{this.\u0275fac=function(t){return new(t||i)(p(er))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac})}}return i})();var sr=class extends Yl{constructor(){super(...arguments),this.supportsDOMEvents=!0}},lr=class i extends sr{static makeCurrent(){Gl(new i)}onAndCancel(n,e,t){return n.addEventListener(e,t),()=>{n.removeEventListener(e,t)}}dispatchEvent(n,e){n.dispatchEvent(e)}remove(n){n.remove()}createElement(n,e){return e=e||this.getDefaultDocument(),e.createElement(n)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(n){return n.nodeType===Node.ELEMENT_NODE}isShadowRoot(n){return n instanceof DocumentFragment}getGlobalEventTarget(n,e){return e==="window"?window:e==="document"?n:e==="body"?n.body:null}getBaseHref(n){let e=Vu();return e==null?null:Gu(e)}resetBaseElement(){vn=null}getUserAgent(){return window.navigator.userAgent}getCookie(n){return Kl(document.cookie,n)}},vn=null;function Vu(){return vn=vn||document.querySelector("base"),vn?vn.getAttribute("href"):null}function Gu(i){return new URL(i,document.baseURI).pathname}var Yu=(()=>{class i{build(){return new XMLHttpRequest}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac})}}return i})(),cr=new w(""),mc=(()=>{class i{constructor(e,t){this._zone=t,this._eventNameToPlugin=new Map,e.forEach(o=>{o.manager=this}),this._plugins=e.slice().reverse()}addEventListener(e,t,o){return this._findPluginFor(t).addEventListener(e,t,o)}getZone(){return this._zone}_findPluginFor(e){let t=this._eventNameToPlugin.get(e);if(t)return t;if(t=this._plugins.find(a=>a.supports(e)),!t)throw new fe(5101,!1);return this._eventNameToPlugin.set(e,t),t}static{this.\u0275fac=function(t){return new(t||i)(p(cr),p(I))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac})}}return i})(),Co=class{constructor(n){this._doc=n}},ar="ng-app-id",pc=(()=>{class i{constructor(e,t,o,a={}){this.doc=e,this.appId=t,this.nonce=o,this.platformId=a,this.styleRef=new Map,this.hostNodes=new Set,this.styleNodesInDOM=this.collectServerRenderedStyles(),this.platformIsServer=Qa(a),this.resetHostNodes()}addStyles(e){for(let t of e)this.changeUsageCount(t,1)===1&&this.onStyleAdded(t)}removeStyles(e){for(let t of e)this.changeUsageCount(t,-1)<=0&&this.onStyleRemoved(t)}ngOnDestroy(){let e=this.styleNodesInDOM;e&&(e.forEach(t=>t.remove()),e.clear());for(let t of this.getAllStyles())this.onStyleRemoved(t);this.resetHostNodes()}addHost(e){this.hostNodes.add(e);for(let t of this.getAllStyles())this.addStyleToHost(e,t)}removeHost(e){this.hostNodes.delete(e)}getAllStyles(){return this.styleRef.keys()}onStyleAdded(e){for(let t of this.hostNodes)this.addStyleToHost(t,e)}onStyleRemoved(e){let t=this.styleRef;t.get(e)?.elements?.forEach(o=>o.remove()),t.delete(e)}collectServerRenderedStyles(){let e=this.doc.head?.querySelectorAll(`style[${ar}="${this.appId}"]`);if(e?.length){let t=new Map;return e.forEach(o=>{o.textContent!=null&&t.set(o.textContent,o)}),t}return null}changeUsageCount(e,t){let o=this.styleRef;if(o.has(e)){let a=o.get(e);return a.usage+=t,a.usage}return o.set(e,{usage:t,elements:[]}),t}getStyleElement(e,t){let o=this.styleNodesInDOM,a=o?.get(t);if(a?.parentNode===e)return o.delete(t),a.removeAttribute(ar),a;{let r=this.doc.createElement("style");return this.nonce&&r.setAttribute("nonce",this.nonce),r.textContent=t,this.platformIsServer&&r.setAttribute(ar,this.appId),e.appendChild(r),r}}addStyleToHost(e,t){let o=this.getStyleElement(e,t),a=this.styleRef,r=a.get(t)?.elements;r?r.push(o):a.set(t,{elements:[o],usage:1})}resetHostNodes(){let e=this.hostNodes;e.clear(),e.add(this.doc.head)}static{this.\u0275fac=function(t){return new(t||i)(p(L),p(go),p(mn,8),p(ni))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac})}}return i})(),rr={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",math:"http://www.w3.org/1998/Math/MathML"},ur=/%COMP%/g,fc="%COMP%",Ku=`_nghost-${fc}`,Zu=`_ngcontent-${fc}`,$u=!0,Ju=new w("",{providedIn:"root",factory:()=>$u});function Qu(i){return Zu.replace(ur,i)}function Xu(i){return Ku.replace(ur,i)}function gc(i,n){return n.map(e=>e.replace(ur,i))}var So=(()=>{class i{constructor(e,t,o,a,r,s,l,d=null){this.eventManager=e,this.sharedStylesHost=t,this.appId=o,this.removeStylesOnCompDestroy=a,this.doc=r,this.platformId=s,this.ngZone=l,this.nonce=d,this.rendererByCompId=new Map,this.platformIsServer=Qa(s),this.defaultRenderer=new wn(e,r,l,this.platformIsServer)}createRenderer(e,t){if(!e||!t)return this.defaultRenderer;this.platformIsServer&&t.encapsulation===dn.ShadowDom&&(t=me(_({},t),{encapsulation:dn.Emulated}));let o=this.getOrCreateRenderer(e,t);return o instanceof Do?o.applyToHost(e):o instanceof kn&&o.applyStyles(),o}getOrCreateRenderer(e,t){let o=this.rendererByCompId,a=o.get(t.id);if(!a){let r=this.doc,s=this.ngZone,l=this.eventManager,d=this.sharedStylesHost,h=this.removeStylesOnCompDestroy,u=this.platformIsServer;switch(t.encapsulation){case dn.Emulated:a=new Do(l,d,t,this.appId,h,r,s,u);break;case dn.ShadowDom:return new dr(l,d,e,t,r,s,this.nonce,u);default:a=new kn(l,d,t,h,r,s,u);break}o.set(t.id,a)}return a}ngOnDestroy(){this.rendererByCompId.clear()}static{this.\u0275fac=function(t){return new(t||i)(p(mc),p(pc),p(go),p(Ju),p(L),p(ni),p(I),p(mn))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac})}}return i})(),wn=class{constructor(n,e,t,o){this.eventManager=n,this.doc=e,this.ngZone=t,this.platformIsServer=o,this.data=Object.create(null),this.throwOnSyntheticProps=!0,this.destroyNode=null}destroy(){}createElement(n,e){return e?this.doc.createElementNS(rr[e]||e,n):this.doc.createElement(n)}createComment(n){return this.doc.createComment(n)}createText(n){return this.doc.createTextNode(n)}appendChild(n,e){(dc(n)?n.content:n).appendChild(e)}insertBefore(n,e,t){n&&(dc(n)?n.content:n).insertBefore(e,t)}removeChild(n,e){e.remove()}selectRootElement(n,e){let t=typeof n=="string"?this.doc.querySelector(n):n;if(!t)throw new fe(-5104,!1);return e||(t.textContent=""),t}parentNode(n){return n.parentNode}nextSibling(n){return n.nextSibling}setAttribute(n,e,t,o){if(o){e=o+":"+e;let a=rr[o];a?n.setAttributeNS(a,e,t):n.setAttribute(e,t)}else n.setAttribute(e,t)}removeAttribute(n,e,t){if(t){let o=rr[t];o?n.removeAttributeNS(o,e):n.removeAttribute(`${t}:${e}`)}else n.removeAttribute(e)}addClass(n,e){n.classList.add(e)}removeClass(n,e){n.classList.remove(e)}setStyle(n,e,t,o){o&(pn.DashCase|pn.Important)?n.style.setProperty(e,t,o&pn.Important?"important":""):n.style[e]=t}removeStyle(n,e,t){t&pn.DashCase?n.style.removeProperty(e):n.style[e]=""}setProperty(n,e,t){n!=null&&(n[e]=t)}setValue(n,e){n.nodeValue=e}listen(n,e,t){if(typeof n=="string"&&(n=Ii().getGlobalEventTarget(this.doc,n),!n))throw new Error(`Unsupported event target ${n} for event ${e}`);return this.eventManager.addEventListener(n,e,this.decoratePreventDefault(t))}decoratePreventDefault(n){return e=>{if(e==="__ngUnwrap__")return n;(this.platformIsServer?this.ngZone.runGuarded(()=>n(e)):n(e))===!1&&e.preventDefault()}}};function dc(i){return i.tagName==="TEMPLATE"&&i.content!==void 0}var dr=class extends wn{constructor(n,e,t,o,a,r,s,l){super(n,a,r,l),this.sharedStylesHost=e,this.hostEl=t,this.shadowRoot=t.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);let d=gc(o.id,o.styles);for(let h of d){let u=document.createElement("style");s&&u.setAttribute("nonce",s),u.textContent=h,this.shadowRoot.appendChild(u)}}nodeOrShadowRoot(n){return n===this.hostEl?this.shadowRoot:n}appendChild(n,e){return super.appendChild(this.nodeOrShadowRoot(n),e)}insertBefore(n,e,t){return super.insertBefore(this.nodeOrShadowRoot(n),e,t)}removeChild(n,e){return super.removeChild(null,e)}parentNode(n){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(n)))}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}},kn=class extends wn{constructor(n,e,t,o,a,r,s,l){super(n,a,r,s),this.sharedStylesHost=e,this.removeStylesOnCompDestroy=o,this.styles=l?gc(l,t.styles):t.styles}applyStyles(){this.sharedStylesHost.addStyles(this.styles)}destroy(){this.removeStylesOnCompDestroy&&this.sharedStylesHost.removeStyles(this.styles)}},Do=class extends kn{constructor(n,e,t,o,a,r,s,l){let d=o+"-"+t.id;super(n,e,t,a,r,s,l,d),this.contentAttr=Qu(d),this.hostAttr=Xu(d)}applyToHost(n){this.applyStyles(),this.setAttribute(n,this.hostAttr,"")}createElement(n,e){let t=super.createElement(n,e);return super.setAttribute(t,this.contentAttr,""),t}},em=(()=>{class i extends Co{constructor(e){super(e)}supports(e){return!0}addEventListener(e,t,o){return e.addEventListener(t,o,!1),()=>this.removeEventListener(e,t,o)}removeEventListener(e,t,o){return e.removeEventListener(t,o)}static{this.\u0275fac=function(t){return new(t||i)(p(L))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac})}}return i})(),hc=["alt","control","meta","shift"],tm={"\b":"Backspace","	":"Tab","\x7F":"Delete","\x1B":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},im={alt:i=>i.altKey,control:i=>i.ctrlKey,meta:i=>i.metaKey,shift:i=>i.shiftKey},nm=(()=>{class i extends Co{constructor(e){super(e)}supports(e){return i.parseEventName(e)!=null}addEventListener(e,t,o){let a=i.parseEventName(t),r=i.eventCallback(a.fullKey,o,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Ii().onAndCancel(e,a.domEventName,r))}static parseEventName(e){let t=e.toLowerCase().split("."),o=t.shift();if(t.length===0||!(o==="keydown"||o==="keyup"))return null;let a=i._normalizeKey(t.pop()),r="",s=t.indexOf("code");if(s>-1&&(t.splice(s,1),r="code."),hc.forEach(d=>{let h=t.indexOf(d);h>-1&&(t.splice(h,1),r+=d+".")}),r+=a,t.length!=0||a.length===0)return null;let l={};return l.domEventName=o,l.fullKey=r,l}static matchEventFullKeyCode(e,t){let o=tm[e.key]||e.key,a="";return t.indexOf("code.")>-1&&(o=e.code,a="code."),o==null||!o?!1:(o=o.toLowerCase(),o===" "?o="space":o==="."&&(o="dot"),hc.forEach(r=>{if(r!==o){let s=im[r];s(e)&&(a+=r+".")}}),a+=o,a===t)}static eventCallback(e,t,o){return a=>{i.matchEventFullKeyCode(a,e)&&o.runGuarded(()=>t(a))}}static _normalizeKey(e){return e==="esc"?"escape":e}static{this.\u0275fac=function(t){return new(t||i)(p(L))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac})}}return i})();function bc(i,n){return Ul(_({rootComponent:i},om(n)))}function om(i){return{appProviders:[...cm,...i?.providers??[]],platformProviders:lm}}function am(){lr.makeCurrent()}function rm(){return new ti}function sm(){return yl(document),document}var lm=[{provide:ni,useValue:Ql},{provide:_l,useValue:am,multi:!0},{provide:L,useFactory:sm,deps:[]}];var cm=[{provide:fl,useValue:"root"},{provide:ti,useFactory:rm,deps:[]},{provide:cr,useClass:em,multi:!0,deps:[L,I,ni]},{provide:cr,useClass:nm,multi:!0,deps:[L]},So,pc,mc,{provide:bo,useExisting:So},{provide:ec,useClass:Yu,deps:[]},[]];var yc=(()=>{class i{constructor(e){this._doc=e}getTitle(){return this._doc.title}setTitle(e){this._doc.title=e||""}static{this.\u0275fac=function(t){return new(t||i)(p(L))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var mr=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:function(t){let o=null;return t?o=new(t||i):o=p(dm),o},providedIn:"root"})}}return i})(),dm=(()=>{class i extends mr{constructor(e){super(),this._doc=e}sanitize(e,t){if(t==null)return null;switch(e){case Ue.NONE:return t;case Ue.HTML:return Di(t,"HTML")?Si(t):Dl(this._doc,String(t)).toString();case Ue.STYLE:return Di(t,"Style")?Si(t):t;case Ue.SCRIPT:if(Di(t,"Script"))return Si(t);throw new fe(5200,!1);case Ue.URL:return Di(t,"URL")?Si(t):Sl(String(t));case Ue.RESOURCE_URL:if(Di(t,"ResourceURL"))return Si(t);throw new fe(5201,!1);default:throw new fe(5202,!1)}}bypassSecurityTrustHtml(e){return vl(e)}bypassSecurityTrustStyle(e){return wl(e)}bypassSecurityTrustScript(e){return kl(e)}bypassSecurityTrustUrl(e){return xl(e)}bypassSecurityTrustResourceUrl(e){return Cl(e)}static{this.\u0275fac=function(t){return new(t||i)(p(L))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var Y="primary",Hn=Symbol("RouteTitle"),yr=class{constructor(n){this.params=n||{}}has(n){return Object.prototype.hasOwnProperty.call(this.params,n)}get(n){if(this.has(n)){let e=this.params[n];return Array.isArray(e)?e[0]:e}return null}getAll(n){if(this.has(n)){let e=this.params[n];return Array.isArray(e)?e:[e]}return[]}get keys(){return Object.keys(this.params)}};function Fi(i){return new yr(i)}function um(i,n,e){let t=e.path.split("/");if(t.length>i.length||e.pathMatch==="full"&&(n.hasChildren()||t.length<i.length))return null;let o={};for(let a=0;a<t.length;a++){let r=t[a],s=i[a];if(r[0]===":")o[r.substring(1)]=s;else if(r!==s.path)return null}return{consumed:i.slice(0,t.length),posParams:o}}function mm(i,n){if(i.length!==n.length)return!1;for(let e=0;e<i.length;++e)if(!ft(i[e],n[e]))return!1;return!0}function ft(i,n){let e=i?_r(i):void 0,t=n?_r(n):void 0;if(!e||!t||e.length!=t.length)return!1;let o;for(let a=0;a<e.length;a++)if(o=e[a],!Ic(i[o],n[o]))return!1;return!0}function _r(i){return[...Object.keys(i),...Object.getOwnPropertySymbols(i)]}function Ic(i,n){if(Array.isArray(i)&&Array.isArray(n)){if(i.length!==n.length)return!1;let e=[...i].sort(),t=[...n].sort();return e.every((o,a)=>t[a]===o)}else return i===n}function Ac(i){return i.length>0?i[i.length-1]:null}function Pt(i){return $t(i)?i:wo(i)?He(Promise.resolve(i)):T(i)}var pm={exact:Tc,subset:Ec},Mc={exact:fm,subset:gm,ignored:()=>!0};function vc(i,n,e){return pm[e.paths](i.root,n.root,e.matrixParams)&&Mc[e.queryParams](i.queryParams,n.queryParams)&&!(e.fragment==="exact"&&i.fragment!==n.fragment)}function fm(i,n){return ft(i,n)}function Tc(i,n,e){if(!si(i.segments,n.segments)||!Mo(i.segments,n.segments,e)||i.numberOfChildren!==n.numberOfChildren)return!1;for(let t in n.children)if(!i.children[t]||!Tc(i.children[t],n.children[t],e))return!1;return!0}function gm(i,n){return Object.keys(n).length<=Object.keys(i).length&&Object.keys(n).every(e=>Ic(i[e],n[e]))}function Ec(i,n,e){return Rc(i,n,n.segments,e)}function Rc(i,n,e,t){if(i.segments.length>e.length){let o=i.segments.slice(0,e.length);return!(!si(o,e)||n.hasChildren()||!Mo(o,e,t))}else if(i.segments.length===e.length){if(!si(i.segments,e)||!Mo(i.segments,e,t))return!1;for(let o in n.children)if(!i.children[o]||!Ec(i.children[o],n.children[o],t))return!1;return!0}else{let o=e.slice(0,i.segments.length),a=e.slice(i.segments.length);return!si(i.segments,o)||!Mo(i.segments,o,t)||!i.children[Y]?!1:Rc(i.children[Y],n,a,t)}}function Mo(i,n,e){return n.every((t,o)=>Mc[e](i[o].parameters,t.parameters))}var Dt=class{constructor(n=new he([],{}),e={},t=null){this.root=n,this.queryParams=e,this.fragment=t}get queryParamMap(){return this._queryParamMap??=Fi(this.queryParams),this._queryParamMap}toString(){return _m.serialize(this)}},he=class{constructor(n,e){this.segments=n,this.children=e,this.parent=null,Object.values(e).forEach(t=>t.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return To(this)}},ri=class{constructor(n,e){this.path=n,this.parameters=e}get parameterMap(){return this._parameterMap??=Fi(this.parameters),this._parameterMap}toString(){return Oc(this)}};function bm(i,n){return si(i,n)&&i.every((e,t)=>ft(e.parameters,n[t].parameters))}function si(i,n){return i.length!==n.length?!1:i.every((e,t)=>e.path===n[t].path)}function ym(i,n){let e=[];return Object.entries(i.children).forEach(([t,o])=>{t===Y&&(e=e.concat(n(o,t)))}),Object.entries(i.children).forEach(([t,o])=>{t!==Y&&(e=e.concat(n(o,t)))}),e}var Vr=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:()=>new Mn,providedIn:"root"})}}return i})(),Mn=class{parse(n){let e=new wr(n);return new Dt(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(n){let e=`/${xn(n.root,!0)}`,t=km(n.queryParams),o=typeof n.fragment=="string"?`#${vm(n.fragment)}`:"";return`${e}${t}${o}`}},_m=new Mn;function To(i){return i.segments.map(n=>Oc(n)).join("/")}function xn(i,n){if(!i.hasChildren())return To(i);if(n){let e=i.children[Y]?xn(i.children[Y],!1):"",t=[];return Object.entries(i.children).forEach(([o,a])=>{o!==Y&&t.push(`${o}:${xn(a,!1)}`)}),t.length>0?`${e}(${t.join("//")})`:e}else{let e=ym(i,(t,o)=>o===Y?[xn(i.children[Y],!1)]:[`${o}:${xn(t,!1)}`]);return Object.keys(i.children).length===1&&i.children[Y]!=null?`${To(i)}/${e[0]}`:`${To(i)}/(${e.join("//")})`}}function qc(i){return encodeURIComponent(i).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function Io(i){return qc(i).replace(/%3B/gi,";")}function vm(i){return encodeURI(i)}function vr(i){return qc(i).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function Eo(i){return decodeURIComponent(i)}function wc(i){return Eo(i.replace(/\+/g,"%20"))}function Oc(i){return`${vr(i.path)}${wm(i.parameters)}`}function wm(i){return Object.entries(i).map(([n,e])=>`;${vr(n)}=${vr(e)}`).join("")}function km(i){let n=Object.entries(i).map(([e,t])=>Array.isArray(t)?t.map(o=>`${Io(e)}=${Io(o)}`).join("&"):`${Io(e)}=${Io(t)}`).filter(e=>e);return n.length?`?${n.join("&")}`:""}var xm=/^[^\/()?;#]+/;function pr(i){let n=i.match(xm);return n?n[0]:""}var Cm=/^[^\/()?;=#]+/;function Sm(i){let n=i.match(Cm);return n?n[0]:""}var Dm=/^[^=?&#]+/;function Im(i){let n=i.match(Dm);return n?n[0]:""}var Am=/^[^&#]+/;function Mm(i){let n=i.match(Am);return n?n[0]:""}var wr=class{constructor(n){this.url=n,this.remaining=n}parseRootSegment(){return this.consumeOptional("/"),this.remaining===""||this.peekStartsWith("?")||this.peekStartsWith("#")?new he([],{}):new he([],this.parseChildren())}parseQueryParams(){let n={};if(this.consumeOptional("?"))do this.parseQueryParam(n);while(this.consumeOptional("&"));return n}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(this.remaining==="")return{};this.consumeOptional("/");let n=[];for(this.peekStartsWith("(")||n.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),n.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let t={};return this.peekStartsWith("(")&&(t=this.parseParens(!1)),(n.length>0||Object.keys(e).length>0)&&(t[Y]=new he(n,e)),t}parseSegment(){let n=pr(this.remaining);if(n===""&&this.peekStartsWith(";"))throw new fe(4009,!1);return this.capture(n),new ri(Eo(n),this.parseMatrixParams())}parseMatrixParams(){let n={};for(;this.consumeOptional(";");)this.parseParam(n);return n}parseParam(n){let e=Sm(this.remaining);if(!e)return;this.capture(e);let t="";if(this.consumeOptional("=")){let o=pr(this.remaining);o&&(t=o,this.capture(t))}n[Eo(e)]=Eo(t)}parseQueryParam(n){let e=Im(this.remaining);if(!e)return;this.capture(e);let t="";if(this.consumeOptional("=")){let r=Mm(this.remaining);r&&(t=r,this.capture(t))}let o=wc(e),a=wc(t);if(n.hasOwnProperty(o)){let r=n[o];Array.isArray(r)||(r=[r],n[o]=r),r.push(a)}else n[o]=a}parseParens(n){let e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){let t=pr(this.remaining),o=this.remaining[t.length];if(o!=="/"&&o!==")"&&o!==";")throw new fe(4010,!1);let a;t.indexOf(":")>-1?(a=t.slice(0,t.indexOf(":")),this.capture(a),this.capture(":")):n&&(a=Y);let r=this.parseChildren();e[a]=Object.keys(r).length===1?r[Y]:new he([],r),this.consumeOptional("//")}return e}peekStartsWith(n){return this.remaining.startsWith(n)}consumeOptional(n){return this.peekStartsWith(n)?(this.remaining=this.remaining.substring(n.length),!0):!1}capture(n){if(!this.consumeOptional(n))throw new fe(4011,!1)}};function Fc(i){return i.segments.length>0?new he([],{[Y]:i}):i}function Pc(i){let n={};for(let[t,o]of Object.entries(i.children)){let a=Pc(o);if(t===Y&&a.segments.length===0&&a.hasChildren())for(let[r,s]of Object.entries(a.children))n[r]=s;else(a.segments.length>0||a.hasChildren())&&(n[t]=a)}let e=new he(i.segments,n);return Tm(e)}function Tm(i){if(i.numberOfChildren===1&&i.children[Y]){let n=i.children[Y];return new he(i.segments.concat(n.segments),n.children)}return i}function Tn(i){return i instanceof Dt}function Em(i,n,e=null,t=null){let o=Bc(i);return Nc(o,n,e,t)}function Bc(i){let n;function e(a){let r={};for(let l of a.children){let d=e(l);r[l.outlet]=d}let s=new he(a.url,r);return a===i&&(n=s),s}let t=e(i.root),o=Fc(t);return n??o}function Nc(i,n,e,t){let o=i;for(;o.parent;)o=o.parent;if(n.length===0)return fr(o,o,o,e,t);let a=Rm(n);if(a.toRoot())return fr(o,o,new he([],{}),e,t);let r=qm(a,o,i),s=r.processChildren?Dn(r.segmentGroup,r.index,a.commands):Lc(r.segmentGroup,r.index,a.commands);return fr(o,r.segmentGroup,s,e,t)}function Ro(i){return typeof i=="object"&&i!=null&&!i.outlets&&!i.segmentPath}function En(i){return typeof i=="object"&&i!=null&&i.outlets}function fr(i,n,e,t,o){let a={};t&&Object.entries(t).forEach(([l,d])=>{a[l]=Array.isArray(d)?d.map(h=>`${h}`):`${d}`});let r;i===n?r=e:r=Hc(i,n,e);let s=Fc(Pc(r));return new Dt(s,a,o)}function Hc(i,n,e){let t={};return Object.entries(i.children).forEach(([o,a])=>{a===n?t[o]=e:t[o]=Hc(a,n,e)}),new he(i.segments,t)}var qo=class{constructor(n,e,t){if(this.isAbsolute=n,this.numberOfDoubleDots=e,this.commands=t,n&&t.length>0&&Ro(t[0]))throw new fe(4003,!1);let o=t.find(En);if(o&&o!==Ac(t))throw new fe(4004,!1)}toRoot(){return this.isAbsolute&&this.commands.length===1&&this.commands[0]=="/"}};function Rm(i){if(typeof i[0]=="string"&&i.length===1&&i[0]==="/")return new qo(!0,0,i);let n=0,e=!1,t=i.reduce((o,a,r)=>{if(typeof a=="object"&&a!=null){if(a.outlets){let s={};return Object.entries(a.outlets).forEach(([l,d])=>{s[l]=typeof d=="string"?d.split("/"):d}),[...o,{outlets:s}]}if(a.segmentPath)return[...o,a.segmentPath]}return typeof a!="string"?[...o,a]:r===0?(a.split("/").forEach((s,l)=>{l==0&&s==="."||(l==0&&s===""?e=!0:s===".."?n++:s!=""&&o.push(s))}),o):[...o,a]},[]);return new qo(e,n,t)}var Ri=class{constructor(n,e,t){this.segmentGroup=n,this.processChildren=e,this.index=t}};function qm(i,n,e){if(i.isAbsolute)return new Ri(n,!0,0);if(!e)return new Ri(n,!1,NaN);if(e.parent===null)return new Ri(e,!0,0);let t=Ro(i.commands[0])?0:1,o=e.segments.length-1+t;return Om(e,o,i.numberOfDoubleDots)}function Om(i,n,e){let t=i,o=n,a=e;for(;a>o;){if(a-=o,t=t.parent,!t)throw new fe(4005,!1);o=t.segments.length}return new Ri(t,!1,o-a)}function Fm(i){return En(i[0])?i[0].outlets:{[Y]:i}}function Lc(i,n,e){if(i??=new he([],{}),i.segments.length===0&&i.hasChildren())return Dn(i,n,e);let t=Pm(i,n,e),o=e.slice(t.commandIndex);if(t.match&&t.pathIndex<i.segments.length){let a=new he(i.segments.slice(0,t.pathIndex),{});return a.children[Y]=new he(i.segments.slice(t.pathIndex),i.children),Dn(a,0,o)}else return t.match&&o.length===0?new he(i.segments,{}):t.match&&!i.hasChildren()?kr(i,n,e):t.match?Dn(i,0,o):kr(i,n,e)}function Dn(i,n,e){if(e.length===0)return new he(i.segments,{});{let t=Fm(e),o={};if(Object.keys(t).some(a=>a!==Y)&&i.children[Y]&&i.numberOfChildren===1&&i.children[Y].segments.length===0){let a=Dn(i.children[Y],n,e);return new he(i.segments,a.children)}return Object.entries(t).forEach(([a,r])=>{typeof r=="string"&&(r=[r]),r!==null&&(o[a]=Lc(i.children[a],n,r))}),Object.entries(i.children).forEach(([a,r])=>{t[a]===void 0&&(o[a]=r)}),new he(i.segments,o)}}function Pm(i,n,e){let t=0,o=n,a={match:!1,pathIndex:0,commandIndex:0};for(;o<i.segments.length;){if(t>=e.length)return a;let r=i.segments[o],s=e[t];if(En(s))break;let l=`${s}`,d=t<e.length-1?e[t+1]:null;if(o>0&&l===void 0)break;if(l&&d&&typeof d=="object"&&d.outlets===void 0){if(!xc(l,d,r))return a;t+=2}else{if(!xc(l,{},r))return a;t++}o++}return{match:!0,pathIndex:o,commandIndex:t}}function kr(i,n,e){let t=i.segments.slice(0,n),o=0;for(;o<e.length;){let a=e[o];if(En(a)){let l=Bm(a.outlets);return new he(t,l)}if(o===0&&Ro(e[0])){let l=i.segments[n];t.push(new ri(l.path,kc(e[0]))),o++;continue}let r=En(a)?a.outlets[Y]:`${a}`,s=o<e.length-1?e[o+1]:null;r&&s&&Ro(s)?(t.push(new ri(r,kc(s))),o+=2):(t.push(new ri(r,{})),o++)}return new he(t,{})}function Bm(i){let n={};return Object.entries(i).forEach(([e,t])=>{typeof t=="string"&&(t=[t]),t!==null&&(n[e]=kr(new he([],{}),0,t))}),n}function kc(i){let n={};return Object.entries(i).forEach(([e,t])=>n[e]=`${t}`),n}function xc(i,n,e){return i==e.path&&ft(n,e.parameters)}var In="imperative",Te=function(i){return i[i.NavigationStart=0]="NavigationStart",i[i.NavigationEnd=1]="NavigationEnd",i[i.NavigationCancel=2]="NavigationCancel",i[i.NavigationError=3]="NavigationError",i[i.RoutesRecognized=4]="RoutesRecognized",i[i.ResolveStart=5]="ResolveStart",i[i.ResolveEnd=6]="ResolveEnd",i[i.GuardsCheckStart=7]="GuardsCheckStart",i[i.GuardsCheckEnd=8]="GuardsCheckEnd",i[i.RouteConfigLoadStart=9]="RouteConfigLoadStart",i[i.RouteConfigLoadEnd=10]="RouteConfigLoadEnd",i[i.ChildActivationStart=11]="ChildActivationStart",i[i.ChildActivationEnd=12]="ChildActivationEnd",i[i.ActivationStart=13]="ActivationStart",i[i.ActivationEnd=14]="ActivationEnd",i[i.Scroll=15]="Scroll",i[i.NavigationSkipped=16]="NavigationSkipped",i}(Te||{}),tt=class{constructor(n,e){this.id=n,this.url=e}},Rn=class extends tt{constructor(n,e,t="imperative",o=null){super(n,e),this.type=Te.NavigationStart,this.navigationTrigger=t,this.restoredState=o}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}},li=class extends tt{constructor(n,e,t){super(n,e),this.urlAfterRedirects=t,this.type=Te.NavigationEnd}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}},Ge=function(i){return i[i.Redirect=0]="Redirect",i[i.SupersededByNewNavigation=1]="SupersededByNewNavigation",i[i.NoDataFromResolver=2]="NoDataFromResolver",i[i.GuardRejected=3]="GuardRejected",i}(Ge||{}),xr=function(i){return i[i.IgnoredSameUrlNavigation=0]="IgnoredSameUrlNavigation",i[i.IgnoredByUrlHandlingStrategy=1]="IgnoredByUrlHandlingStrategy",i}(xr||{}),St=class extends tt{constructor(n,e,t,o){super(n,e),this.reason=t,this.code=o,this.type=Te.NavigationCancel}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}},ci=class extends tt{constructor(n,e,t,o){super(n,e),this.reason=t,this.code=o,this.type=Te.NavigationSkipped}},qn=class extends tt{constructor(n,e,t,o){super(n,e),this.error=t,this.target=o,this.type=Te.NavigationError}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}},Oo=class extends tt{constructor(n,e,t,o){super(n,e),this.urlAfterRedirects=t,this.state=o,this.type=Te.RoutesRecognized}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},Cr=class extends tt{constructor(n,e,t,o){super(n,e),this.urlAfterRedirects=t,this.state=o,this.type=Te.GuardsCheckStart}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},Sr=class extends tt{constructor(n,e,t,o,a){super(n,e),this.urlAfterRedirects=t,this.state=o,this.shouldActivate=a,this.type=Te.GuardsCheckEnd}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}},Dr=class extends tt{constructor(n,e,t,o){super(n,e),this.urlAfterRedirects=t,this.state=o,this.type=Te.ResolveStart}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},Ir=class extends tt{constructor(n,e,t,o){super(n,e),this.urlAfterRedirects=t,this.state=o,this.type=Te.ResolveEnd}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},Ar=class{constructor(n){this.route=n,this.type=Te.RouteConfigLoadStart}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}},Mr=class{constructor(n){this.route=n,this.type=Te.RouteConfigLoadEnd}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}},Tr=class{constructor(n){this.snapshot=n,this.type=Te.ChildActivationStart}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}},Er=class{constructor(n){this.snapshot=n,this.type=Te.ChildActivationEnd}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}},Rr=class{constructor(n){this.snapshot=n,this.type=Te.ActivationStart}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}},qr=class{constructor(n){this.snapshot=n,this.type=Te.ActivationEnd}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}};var On=class{},Pi=class{constructor(n,e){this.url=n,this.navigationBehaviorOptions=e}};function Nm(i,n){return i.providers&&!i._injector&&(i._injector=Rl(i.providers,n,`Route: ${i.path}`)),i._injector??n}function ct(i){return i.outlet||Y}function Hm(i,n){let e=i.filter(t=>ct(t)===n);return e.push(...i.filter(t=>ct(t)!==n)),e}function Ln(i){if(!i)return null;if(i.routeConfig?._injector)return i.routeConfig._injector;for(let n=i.parent;n;n=n.parent){let e=n.routeConfig;if(e?._loadedInjector)return e._loadedInjector;if(e?._injector)return e._injector}return null}var Or=class{get injector(){return Ln(this.route?.snapshot)??this.rootInjector}set injector(n){}constructor(n){this.rootInjector=n,this.outlet=null,this.route=null,this.children=new zo(this.rootInjector),this.attachRef=null}},zo=(()=>{class i{constructor(e){this.rootInjector=e,this.contexts=new Map}onChildOutletCreated(e,t){let o=this.getOrCreateContext(e);o.outlet=t,this.contexts.set(e,o)}onChildOutletDestroyed(e){let t=this.getContext(e);t&&(t.outlet=null,t.attachRef=null)}onOutletDeactivated(){let e=this.contexts;return this.contexts=new Map,e}onOutletReAttached(e){this.contexts=e}getOrCreateContext(e){let t=this.getContext(e);return t||(t=new Or(this.rootInjector),this.contexts.set(e,t)),t}getContext(e){return this.contexts.get(e)||null}static{this.\u0275fac=function(t){return new(t||i)(p(ei))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Fo=class{constructor(n){this._root=n}get root(){return this._root.value}parent(n){let e=this.pathFromRoot(n);return e.length>1?e[e.length-2]:null}children(n){let e=Fr(n,this._root);return e?e.children.map(t=>t.value):[]}firstChild(n){let e=Fr(n,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(n){let e=Pr(n,this._root);return e.length<2?[]:e[e.length-2].children.map(o=>o.value).filter(o=>o!==n)}pathFromRoot(n){return Pr(n,this._root).map(e=>e.value)}};function Fr(i,n){if(i===n.value)return n;for(let e of n.children){let t=Fr(i,e);if(t)return t}return null}function Pr(i,n){if(i===n.value)return[n];for(let e of n.children){let t=Pr(i,e);if(t.length)return t.unshift(n),t}return[]}var Ve=class{constructor(n,e){this.value=n,this.children=e}toString(){return`TreeNode(${this.value})`}};function Ei(i){let n={};return i&&i.children.forEach(e=>n[e.value.outlet]=e),n}var Po=class extends Fo{constructor(n,e){super(n),this.snapshot=e,Gr(this,n)}toString(){return this.snapshot.toString()}};function zc(i){let n=Lm(i),e=new Ee([new ri("",{})]),t=new Ee({}),o=new Ee({}),a=new Ee({}),r=new Ee(""),s=new Bi(e,t,a,r,o,Y,i,n.root);return s.snapshot=n.root,new Po(new Ve(s,[]),n)}function Lm(i){let n={},e={},t={},o="",a=new qi([],n,t,o,e,Y,i,null,{});return new No("",new Ve(a,[]))}var Bi=class{constructor(n,e,t,o,a,r,s,l){this.urlSubject=n,this.paramsSubject=e,this.queryParamsSubject=t,this.fragmentSubject=o,this.dataSubject=a,this.outlet=r,this.component=s,this._futureSnapshot=l,this.title=this.dataSubject?.pipe(E(d=>d[Hn]))??T(void 0),this.url=n,this.params=e,this.queryParams=t,this.fragment=o,this.data=a}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap??=this.params.pipe(E(n=>Fi(n))),this._paramMap}get queryParamMap(){return this._queryParamMap??=this.queryParams.pipe(E(n=>Fi(n))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}};function Bo(i,n,e="emptyOnly"){let t,{routeConfig:o}=i;return n!==null&&(e==="always"||o?.path===""||!n.component&&!n.routeConfig?.loadComponent)?t={params:_(_({},n.params),i.params),data:_(_({},n.data),i.data),resolve:_(_(_(_({},i.data),n.data),o?.data),i._resolvedData)}:t={params:_({},i.params),data:_({},i.data),resolve:_(_({},i.data),i._resolvedData??{})},o&&Wc(o)&&(t.resolve[Hn]=o.title),t}var qi=class{get title(){return this.data?.[Hn]}constructor(n,e,t,o,a,r,s,l,d){this.url=n,this.params=e,this.queryParams=t,this.fragment=o,this.data=a,this.outlet=r,this.component=s,this.routeConfig=l,this._resolve=d}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap??=Fi(this.params),this._paramMap}get queryParamMap(){return this._queryParamMap??=Fi(this.queryParams),this._queryParamMap}toString(){let n=this.url.map(t=>t.toString()).join("/"),e=this.routeConfig?this.routeConfig.path:"";return`Route(url:'${n}', path:'${e}')`}},No=class extends Fo{constructor(n,e){super(e),this.url=n,Gr(this,e)}toString(){return jc(this._root)}};function Gr(i,n){n.value._routerState=i,n.children.forEach(e=>Gr(i,e))}function jc(i){let n=i.children.length>0?` { ${i.children.map(jc).join(", ")} } `:"";return`${i.value}${n}`}function gr(i){if(i.snapshot){let n=i.snapshot,e=i._futureSnapshot;i.snapshot=e,ft(n.queryParams,e.queryParams)||i.queryParamsSubject.next(e.queryParams),n.fragment!==e.fragment&&i.fragmentSubject.next(e.fragment),ft(n.params,e.params)||i.paramsSubject.next(e.params),mm(n.url,e.url)||i.urlSubject.next(e.url),ft(n.data,e.data)||i.dataSubject.next(e.data)}else i.snapshot=i._futureSnapshot,i.dataSubject.next(i._futureSnapshot.data)}function Br(i,n){let e=ft(i.params,n.params)&&bm(i.url,n.url),t=!i.parent!=!n.parent;return e&&!t&&(!i.parent||Br(i.parent,n.parent))}function Wc(i){return typeof i.title=="string"||i.title===null}var zm=(()=>{class i{constructor(){this.activated=null,this._activatedRoute=null,this.name=Y,this.activateEvents=new N,this.deactivateEvents=new N,this.attachEvents=new N,this.detachEvents=new N,this.parentContexts=b(zo),this.location=b(ze),this.changeDetector=b(de),this.inputBinder=b(Yr,{optional:!0}),this.supportsBindingToComponentInputs=!0}get activatedComponentRef(){return this.activated}ngOnChanges(e){if(e.name){let{firstChange:t,previousValue:o}=e.name;if(t)return;this.isTrackedInParentContexts(o)&&(this.deactivate(),this.parentContexts.onChildOutletDestroyed(o)),this.initializeOutletWithName()}}ngOnDestroy(){this.isTrackedInParentContexts(this.name)&&this.parentContexts.onChildOutletDestroyed(this.name),this.inputBinder?.unsubscribeFromRouteData(this)}isTrackedInParentContexts(e){return this.parentContexts.getContext(e)?.outlet===this}ngOnInit(){this.initializeOutletWithName()}initializeOutletWithName(){if(this.parentContexts.onChildOutletCreated(this.name,this),this.activated)return;let e=this.parentContexts.getContext(this.name);e?.route&&(e.attachRef?this.attach(e.attachRef,e.route):this.activateWith(e.route,e.injector))}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new fe(4012,!1);return this.activated.instance}get activatedRoute(){if(!this.activated)throw new fe(4012,!1);return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new fe(4012,!1);this.location.detach();let e=this.activated;return this.activated=null,this._activatedRoute=null,this.detachEvents.emit(e.instance),e}attach(e,t){this.activated=e,this._activatedRoute=t,this.location.insert(e.hostView),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.attachEvents.emit(e.instance)}deactivate(){if(this.activated){let e=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(e)}}activateWith(e,t){if(this.isActivated)throw new fe(4013,!1);this._activatedRoute=e;let o=this.location,r=e.snapshot.component,s=this.parentContexts.getOrCreateContext(this.name).children,l=new Nr(e,s,o.injector);this.activated=o.createComponent(r,{index:o.length,injector:l,environmentInjector:t}),this.changeDetector.markForCheck(),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.activateEvents.emit(this.activated.instance)}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275dir=k({type:i,selectors:[["router-outlet"]],inputs:{name:"name"},outputs:{activateEvents:"activate",deactivateEvents:"deactivate",attachEvents:"attach",detachEvents:"detach"},exportAs:["outlet"],standalone:!0,features:[be]})}}return i})(),Nr=class i{__ngOutletInjector(n){return new i(this.route,this.childContexts,n)}constructor(n,e,t){this.route=n,this.childContexts=e,this.parent=t}get(n,e){return n===Bi?this.route:n===zo?this.childContexts:this.parent.get(n,e)}},Yr=new w("");function jm(i,n,e){let t=Fn(i,n._root,e?e._root:void 0);return new Po(t,n)}function Fn(i,n,e){if(e&&i.shouldReuseRoute(n.value,e.value.snapshot)){let t=e.value;t._futureSnapshot=n.value;let o=Wm(i,n,e);return new Ve(t,o)}else{if(i.shouldAttach(n.value)){let a=i.retrieve(n.value);if(a!==null){let r=a.route;return r.value._futureSnapshot=n.value,r.children=n.children.map(s=>Fn(i,s)),r}}let t=Um(n.value),o=n.children.map(a=>Fn(i,a));return new Ve(t,o)}}function Wm(i,n,e){return n.children.map(t=>{for(let o of e.children)if(i.shouldReuseRoute(t.value,o.value.snapshot))return Fn(i,t,o);return Fn(i,t)})}function Um(i){return new Bi(new Ee(i.url),new Ee(i.params),new Ee(i.queryParams),new Ee(i.fragment),new Ee(i.data),i.outlet,i.component,i)}var Pn=class{constructor(n,e){this.redirectTo=n,this.navigationBehaviorOptions=e}},Uc="ngNavigationCancelingError";function Ho(i,n){let{redirectTo:e,navigationBehaviorOptions:t}=Tn(n)?{redirectTo:n,navigationBehaviorOptions:void 0}:n,o=Vc(!1,Ge.Redirect);return o.url=e,o.navigationBehaviorOptions=t,o}function Vc(i,n){let e=new Error(`NavigationCancelingError: ${i||""}`);return e[Uc]=!0,e.cancellationCode=n,e}function Vm(i){return Gc(i)&&Tn(i.url)}function Gc(i){return!!i&&i[Uc]}var Gm=(i,n,e,t)=>E(o=>(new Hr(n,o.targetRouterState,o.currentRouterState,e,t).activate(i),o)),Hr=class{constructor(n,e,t,o,a){this.routeReuseStrategy=n,this.futureState=e,this.currState=t,this.forwardEvent=o,this.inputBindingEnabled=a}activate(n){let e=this.futureState._root,t=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,t,n),gr(this.futureState.root),this.activateChildRoutes(e,t,n)}deactivateChildRoutes(n,e,t){let o=Ei(e);n.children.forEach(a=>{let r=a.value.outlet;this.deactivateRoutes(a,o[r],t),delete o[r]}),Object.values(o).forEach(a=>{this.deactivateRouteAndItsChildren(a,t)})}deactivateRoutes(n,e,t){let o=n.value,a=e?e.value:null;if(o===a)if(o.component){let r=t.getContext(o.outlet);r&&this.deactivateChildRoutes(n,e,r.children)}else this.deactivateChildRoutes(n,e,t);else a&&this.deactivateRouteAndItsChildren(e,t)}deactivateRouteAndItsChildren(n,e){n.value.component&&this.routeReuseStrategy.shouldDetach(n.value.snapshot)?this.detachAndStoreRouteSubtree(n,e):this.deactivateRouteAndOutlet(n,e)}detachAndStoreRouteSubtree(n,e){let t=e.getContext(n.value.outlet),o=t&&n.value.component?t.children:e,a=Ei(n);for(let r of Object.values(a))this.deactivateRouteAndItsChildren(r,o);if(t&&t.outlet){let r=t.outlet.detach(),s=t.children.onOutletDeactivated();this.routeReuseStrategy.store(n.value.snapshot,{componentRef:r,route:n,contexts:s})}}deactivateRouteAndOutlet(n,e){let t=e.getContext(n.value.outlet),o=t&&n.value.component?t.children:e,a=Ei(n);for(let r of Object.values(a))this.deactivateRouteAndItsChildren(r,o);t&&(t.outlet&&(t.outlet.deactivate(),t.children.onOutletDeactivated()),t.attachRef=null,t.route=null)}activateChildRoutes(n,e,t){let o=Ei(e);n.children.forEach(a=>{this.activateRoutes(a,o[a.value.outlet],t),this.forwardEvent(new qr(a.value.snapshot))}),n.children.length&&this.forwardEvent(new Er(n.value.snapshot))}activateRoutes(n,e,t){let o=n.value,a=e?e.value:null;if(gr(o),o===a)if(o.component){let r=t.getOrCreateContext(o.outlet);this.activateChildRoutes(n,e,r.children)}else this.activateChildRoutes(n,e,t);else if(o.component){let r=t.getOrCreateContext(o.outlet);if(this.routeReuseStrategy.shouldAttach(o.snapshot)){let s=this.routeReuseStrategy.retrieve(o.snapshot);this.routeReuseStrategy.store(o.snapshot,null),r.children.onOutletReAttached(s.contexts),r.attachRef=s.componentRef,r.route=s.route.value,r.outlet&&r.outlet.attach(s.componentRef,s.route.value),gr(s.route.value),this.activateChildRoutes(n,null,r.children)}else r.attachRef=null,r.route=o,r.outlet&&r.outlet.activateWith(o,r.injector),this.activateChildRoutes(n,null,r.children)}else this.activateChildRoutes(n,null,t)}},Lo=class{constructor(n){this.path=n,this.route=this.path[this.path.length-1]}},Oi=class{constructor(n,e){this.component=n,this.route=e}};function Ym(i,n,e){let t=i._root,o=n?n._root:null;return Cn(t,o,e,[t.value])}function Km(i){let n=i.routeConfig?i.routeConfig.canActivateChild:null;return!n||n.length===0?null:{node:i,guards:n}}function Hi(i,n){let e=Symbol(),t=n.get(i,e);return t===e?typeof i=="function"&&!pl(i)?i:n.get(i):t}function Cn(i,n,e,t,o={canDeactivateChecks:[],canActivateChecks:[]}){let a=Ei(n);return i.children.forEach(r=>{Zm(r,a[r.value.outlet],e,t.concat([r.value]),o),delete a[r.value.outlet]}),Object.entries(a).forEach(([r,s])=>An(s,e.getContext(r),o)),o}function Zm(i,n,e,t,o={canDeactivateChecks:[],canActivateChecks:[]}){let a=i.value,r=n?n.value:null,s=e?e.getContext(i.value.outlet):null;if(r&&a.routeConfig===r.routeConfig){let l=$m(r,a,a.routeConfig.runGuardsAndResolvers);l?o.canActivateChecks.push(new Lo(t)):(a.data=r.data,a._resolvedData=r._resolvedData),a.component?Cn(i,n,s?s.children:null,t,o):Cn(i,n,e,t,o),l&&s&&s.outlet&&s.outlet.isActivated&&o.canDeactivateChecks.push(new Oi(s.outlet.component,r))}else r&&An(n,s,o),o.canActivateChecks.push(new Lo(t)),a.component?Cn(i,null,s?s.children:null,t,o):Cn(i,null,e,t,o);return o}function $m(i,n,e){if(typeof e=="function")return e(i,n);switch(e){case"pathParamsChange":return!si(i.url,n.url);case"pathParamsOrQueryParamsChange":return!si(i.url,n.url)||!ft(i.queryParams,n.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!Br(i,n)||!ft(i.queryParams,n.queryParams);case"paramsChange":default:return!Br(i,n)}}function An(i,n,e){let t=Ei(i),o=i.value;Object.entries(t).forEach(([a,r])=>{o.component?n?An(r,n.children.getContext(a),e):An(r,null,e):An(r,n,e)}),o.component?n&&n.outlet&&n.outlet.isActivated?e.canDeactivateChecks.push(new Oi(n.outlet.component,o)):e.canDeactivateChecks.push(new Oi(null,o)):e.canDeactivateChecks.push(new Oi(null,o))}function zn(i){return typeof i=="function"}function Jm(i){return typeof i=="boolean"}function Qm(i){return i&&zn(i.canLoad)}function Xm(i){return i&&zn(i.canActivate)}function ep(i){return i&&zn(i.canActivateChild)}function tp(i){return i&&zn(i.canDeactivate)}function ip(i){return i&&zn(i.canMatch)}function Yc(i){return i instanceof ll||i?.name==="EmptyError"}var Ao=Symbol("INITIAL_VALUE");function Ni(){return ve(i=>sn(i.map(n=>n.pipe(De(1),_e(Ao)))).pipe(E(n=>{for(let e of n)if(e!==!0){if(e===Ao)return Ao;if(e===!1||np(e))return e}return!0}),ce(n=>n!==Ao),De(1)))}function np(i){return Tn(i)||i instanceof Pn}function op(i,n){return Ze(e=>{let{targetSnapshot:t,currentSnapshot:o,guards:{canActivateChecks:a,canDeactivateChecks:r}}=e;return r.length===0&&a.length===0?T(me(_({},e),{guardsResult:!0})):ap(r,t,o,i).pipe(Ze(s=>s&&Jm(s)?rp(t,a,i,n):T(s)),E(s=>me(_({},e),{guardsResult:s})))})}function ap(i,n,e,t){return He(i).pipe(Ze(o=>hp(o.component,o.route,e,n,t)),qt(o=>o!==!0,!0))}function rp(i,n,e,t){return He(n).pipe(Qt(o=>mo(lp(o.route.parent,t),sp(o.route,t),dp(i,o.path,e),cp(i,o.route,e))),qt(o=>o!==!0,!0))}function sp(i,n){return i!==null&&n&&n(new Rr(i)),T(!0)}function lp(i,n){return i!==null&&n&&n(new Tr(i)),T(!0)}function cp(i,n,e){let t=n.routeConfig?n.routeConfig.canActivate:null;if(!t||t.length===0)return T(!0);let o=t.map(a=>Jt(()=>{let r=Ln(n)??e,s=Hi(a,r),l=Xm(s)?s.canActivate(n,i):bt(r,()=>s(n,i));return Pt(l).pipe(qt())}));return T(o).pipe(Ni())}function dp(i,n,e){let t=n[n.length-1],a=n.slice(0,n.length-1).reverse().map(r=>Km(r)).filter(r=>r!==null).map(r=>Jt(()=>{let s=r.guards.map(l=>{let d=Ln(r.node)??e,h=Hi(l,d),u=ep(h)?h.canActivateChild(t,i):bt(d,()=>h(t,i));return Pt(u).pipe(qt())});return T(s).pipe(Ni())}));return T(a).pipe(Ni())}function hp(i,n,e,t,o){let a=n&&n.routeConfig?n.routeConfig.canDeactivate:null;if(!a||a.length===0)return T(!0);let r=a.map(s=>{let l=Ln(n)??o,d=Hi(s,l),h=tp(d)?d.canDeactivate(i,n,e,t):bt(l,()=>d(i,n,e,t));return Pt(h).pipe(qt())});return T(r).pipe(Ni())}function up(i,n,e,t){let o=n.canLoad;if(o===void 0||o.length===0)return T(!0);let a=o.map(r=>{let s=Hi(r,i),l=Qm(s)?s.canLoad(n,e):bt(i,()=>s(n,e));return Pt(l)});return T(a).pipe(Ni(),Kc(t))}function Kc(i){return sl(ge(n=>{if(typeof n!="boolean")throw Ho(i,n)}),E(n=>n===!0))}function mp(i,n,e,t){let o=n.canMatch;if(!o||o.length===0)return T(!0);let a=o.map(r=>{let s=Hi(r,i),l=ip(s)?s.canMatch(n,e):bt(i,()=>s(n,e));return Pt(l)});return T(a).pipe(Ni(),Kc(t))}var Bn=class{constructor(n){this.segmentGroup=n||null}},Nn=class extends Error{constructor(n){super(),this.urlTree=n}};function Ti(i){return Zt(new Bn(i))}function pp(i){return Zt(new fe(4e3,!1))}function fp(i){return Zt(Vc(!1,Ge.GuardRejected))}var Lr=class{constructor(n,e){this.urlSerializer=n,this.urlTree=e}lineralizeSegments(n,e){let t=[],o=e.root;for(;;){if(t=t.concat(o.segments),o.numberOfChildren===0)return T(t);if(o.numberOfChildren>1||!o.children[Y])return pp(`${n.redirectTo}`);o=o.children[Y]}}applyRedirectCommands(n,e,t,o,a){if(typeof e!="string"){let s=e,{queryParams:l,fragment:d,routeConfig:h,url:u,outlet:v,params:y,data:O,title:U}=o,K=bt(a,()=>s({params:y,data:O,queryParams:l,fragment:d,routeConfig:h,url:u,outlet:v,title:U}));if(K instanceof Dt)throw new Nn(K);e=K}let r=this.applyRedirectCreateUrlTree(e,this.urlSerializer.parse(e),n,t);if(e[0]==="/")throw new Nn(r);return r}applyRedirectCreateUrlTree(n,e,t,o){let a=this.createSegmentGroup(n,e.root,t,o);return new Dt(a,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(n,e){let t={};return Object.entries(n).forEach(([o,a])=>{if(typeof a=="string"&&a[0]===":"){let s=a.substring(1);t[o]=e[s]}else t[o]=a}),t}createSegmentGroup(n,e,t,o){let a=this.createSegments(n,e.segments,t,o),r={};return Object.entries(e.children).forEach(([s,l])=>{r[s]=this.createSegmentGroup(n,l,t,o)}),new he(a,r)}createSegments(n,e,t,o){return e.map(a=>a.path[0]===":"?this.findPosParam(n,a,o):this.findOrReturn(a,t))}findPosParam(n,e,t){let o=t[e.path.substring(1)];if(!o)throw new fe(4001,!1);return o}findOrReturn(n,e){let t=0;for(let o of e){if(o.path===n.path)return e.splice(t),o;t++}return n}},zr={matched:!1,consumedSegments:[],remainingSegments:[],parameters:{},positionalParamSegments:{}};function gp(i,n,e,t,o){let a=Zc(i,n,e);return a.matched?(t=Nm(n,t),mp(t,n,e,o).pipe(E(r=>r===!0?a:_({},zr)))):T(a)}function Zc(i,n,e){if(n.path==="**")return bp(e);if(n.path==="")return n.pathMatch==="full"&&(i.hasChildren()||e.length>0)?_({},zr):{matched:!0,consumedSegments:[],remainingSegments:e,parameters:{},positionalParamSegments:{}};let o=(n.matcher||um)(e,i,n);if(!o)return _({},zr);let a={};Object.entries(o.posParams??{}).forEach(([s,l])=>{a[s]=l.path});let r=o.consumed.length>0?_(_({},a),o.consumed[o.consumed.length-1].parameters):a;return{matched:!0,consumedSegments:o.consumed,remainingSegments:e.slice(o.consumed.length),parameters:r,positionalParamSegments:o.posParams??{}}}function bp(i){return{matched:!0,parameters:i.length>0?Ac(i).parameters:{},consumedSegments:i,remainingSegments:[],positionalParamSegments:{}}}function Cc(i,n,e,t){return e.length>0&&vp(i,e,t)?{segmentGroup:new he(n,_p(t,new he(e,i.children))),slicedSegments:[]}:e.length===0&&wp(i,e,t)?{segmentGroup:new he(i.segments,yp(i,e,t,i.children)),slicedSegments:e}:{segmentGroup:new he(i.segments,i.children),slicedSegments:e}}function yp(i,n,e,t){let o={};for(let a of e)if(jo(i,n,a)&&!t[ct(a)]){let r=new he([],{});o[ct(a)]=r}return _(_({},t),o)}function _p(i,n){let e={};e[Y]=n;for(let t of i)if(t.path===""&&ct(t)!==Y){let o=new he([],{});e[ct(t)]=o}return e}function vp(i,n,e){return e.some(t=>jo(i,n,t)&&ct(t)!==Y)}function wp(i,n,e){return e.some(t=>jo(i,n,t))}function jo(i,n,e){return(i.hasChildren()||n.length>0)&&e.pathMatch==="full"?!1:e.path===""}function kp(i,n,e){return n.length===0&&!i.children[e]}var jr=class{};function xp(i,n,e,t,o,a,r="emptyOnly"){return new Wr(i,n,e,t,o,r,a).recognize()}var Cp=31,Wr=class{constructor(n,e,t,o,a,r,s){this.injector=n,this.configLoader=e,this.rootComponentType=t,this.config=o,this.urlTree=a,this.paramsInheritanceStrategy=r,this.urlSerializer=s,this.applyRedirects=new Lr(this.urlSerializer,this.urlTree),this.absoluteRedirectCount=0,this.allowRedirects=!0}noMatchError(n){return new fe(4002,`'${n.segmentGroup}'`)}recognize(){let n=Cc(this.urlTree.root,[],[],this.config).segmentGroup;return this.match(n).pipe(E(({children:e,rootSnapshot:t})=>{let o=new Ve(t,e),a=new No("",o),r=Em(t,[],this.urlTree.queryParams,this.urlTree.fragment);return r.queryParams=this.urlTree.queryParams,a.url=this.urlSerializer.serialize(r),{state:a,tree:r}}))}match(n){let e=new qi([],Object.freeze({}),Object.freeze(_({},this.urlTree.queryParams)),this.urlTree.fragment,Object.freeze({}),Y,this.rootComponentType,null,{});return this.processSegmentGroup(this.injector,this.config,n,Y,e).pipe(E(t=>({children:t,rootSnapshot:e})),Rt(t=>{if(t instanceof Nn)return this.urlTree=t.urlTree,this.match(t.urlTree.root);throw t instanceof Bn?this.noMatchError(t):t}))}processSegmentGroup(n,e,t,o,a){return t.segments.length===0&&t.hasChildren()?this.processChildren(n,e,t,a):this.processSegment(n,e,t,t.segments,o,!0,a).pipe(E(r=>r instanceof Ve?[r]:[]))}processChildren(n,e,t,o){let a=[];for(let r of Object.keys(t.children))r==="primary"?a.unshift(r):a.push(r);return He(a).pipe(Qt(r=>{let s=t.children[r],l=Hm(e,r);return this.processSegmentGroup(n,l,s,r,o)}),hl((r,s)=>(r.push(...s),r)),ja(null),dl(),Ze(r=>{if(r===null)return Ti(t);let s=$c(r);return Sp(s),T(s)}))}processSegment(n,e,t,o,a,r,s){return He(e).pipe(Qt(l=>this.processSegmentAgainstRoute(l._injector??n,e,l,t,o,a,r,s).pipe(Rt(d=>{if(d instanceof Bn)return T(null);throw d}))),qt(l=>!!l),Rt(l=>{if(Yc(l))return kp(t,o,a)?T(new jr):Ti(t);throw l}))}processSegmentAgainstRoute(n,e,t,o,a,r,s,l){return ct(t)!==r&&(r===Y||!jo(o,a,t))?Ti(o):t.redirectTo===void 0?this.matchSegmentAgainstRoute(n,o,t,a,r,l):this.allowRedirects&&s?this.expandSegmentAgainstRouteUsingRedirect(n,o,e,t,a,r,l):Ti(o)}expandSegmentAgainstRouteUsingRedirect(n,e,t,o,a,r,s){let{matched:l,parameters:d,consumedSegments:h,positionalParamSegments:u,remainingSegments:v}=Zc(e,o,a);if(!l)return Ti(e);typeof o.redirectTo=="string"&&o.redirectTo[0]==="/"&&(this.absoluteRedirectCount++,this.absoluteRedirectCount>Cp&&(this.allowRedirects=!1));let y=new qi(a,d,Object.freeze(_({},this.urlTree.queryParams)),this.urlTree.fragment,Sc(o),ct(o),o.component??o._loadedComponent??null,o,Dc(o)),O=Bo(y,s,this.paramsInheritanceStrategy);y.params=Object.freeze(O.params),y.data=Object.freeze(O.data);let U=this.applyRedirects.applyRedirectCommands(h,o.redirectTo,u,y,n);return this.applyRedirects.lineralizeSegments(o,U).pipe(Ze(K=>this.processSegment(n,t,e,K.concat(v),r,!1,s)))}matchSegmentAgainstRoute(n,e,t,o,a,r){let s=gp(e,t,o,n,this.urlSerializer);return t.path==="**"&&(e.children={}),s.pipe(ve(l=>l.matched?(n=t._injector??n,this.getChildConfig(n,t,o).pipe(ve(({routes:d})=>{let h=t._loadedInjector??n,{parameters:u,consumedSegments:v,remainingSegments:y}=l,O=new qi(v,u,Object.freeze(_({},this.urlTree.queryParams)),this.urlTree.fragment,Sc(t),ct(t),t.component??t._loadedComponent??null,t,Dc(t)),U=Bo(O,r,this.paramsInheritanceStrategy);O.params=Object.freeze(U.params),O.data=Object.freeze(U.data);let{segmentGroup:K,slicedSegments:ue}=Cc(e,v,y,d);if(ue.length===0&&K.hasChildren())return this.processChildren(h,d,K,O).pipe(E(Kt=>new Ve(O,Kt)));if(d.length===0&&ue.length===0)return T(new Ve(O,[]));let Et=ct(t)===a;return this.processSegment(h,d,K,ue,Et?Y:a,!0,O).pipe(E(Kt=>new Ve(O,Kt instanceof Ve?[Kt]:[])))}))):Ti(e)))}getChildConfig(n,e,t){return e.children?T({routes:e.children,injector:n}):e.loadChildren?e._loadedRoutes!==void 0?T({routes:e._loadedRoutes,injector:e._loadedInjector}):up(n,e,t,this.urlSerializer).pipe(Ze(o=>o?this.configLoader.loadChildren(n,e).pipe(ge(a=>{e._loadedRoutes=a.routes,e._loadedInjector=a.injector})):fp(e))):T({routes:[],injector:n})}};function Sp(i){i.sort((n,e)=>n.value.outlet===Y?-1:e.value.outlet===Y?1:n.value.outlet.localeCompare(e.value.outlet))}function Dp(i){let n=i.value.routeConfig;return n&&n.path===""}function $c(i){let n=[],e=new Set;for(let t of i){if(!Dp(t)){n.push(t);continue}let o=n.find(a=>t.value.routeConfig===a.value.routeConfig);o!==void 0?(o.children.push(...t.children),e.add(o)):n.push(t)}for(let t of e){let o=$c(t.children);n.push(new Ve(t.value,o))}return n.filter(t=>!e.has(t))}function Sc(i){return i.data||{}}function Dc(i){return i.resolve||{}}function Ip(i,n,e,t,o,a){return Ze(r=>xp(i,n,e,t,r.extractedUrl,o,a).pipe(E(({state:s,tree:l})=>me(_({},r),{targetSnapshot:s,urlAfterRedirects:l}))))}function Ap(i,n){return Ze(e=>{let{targetSnapshot:t,guards:{canActivateChecks:o}}=e;if(!o.length)return T(e);let a=new Set(o.map(l=>l.route)),r=new Set;for(let l of a)if(!r.has(l))for(let d of Jc(l))r.add(d);let s=0;return He(r).pipe(Qt(l=>a.has(l)?Mp(l,t,i,n):(l.data=Bo(l,l.parent,i).resolve,T(void 0))),ge(()=>s++),Wa(1),Ze(l=>s===r.size?T(e):mt))})}function Jc(i){let n=i.children.map(e=>Jc(e)).flat();return[i,...n]}function Mp(i,n,e,t){let o=i.routeConfig,a=i._resolve;return o?.title!==void 0&&!Wc(o)&&(a[Hn]=o.title),Tp(a,i,n,t).pipe(E(r=>(i._resolvedData=r,i.data=Bo(i,i.parent,e).resolve,null)))}function Tp(i,n,e,t){let o=_r(i);if(o.length===0)return T({});let a={};return He(o).pipe(Ze(r=>Ep(i[r],n,e,t).pipe(qt(),ge(s=>{if(s instanceof Pn)throw Ho(new Mn,s);a[r]=s}))),Wa(1),ln(a),Rt(r=>Yc(r)?mt:Zt(r)))}function Ep(i,n,e,t){let o=Ln(n)??t,a=Hi(i,o),r=a.resolve?a.resolve(n,e):bt(o,()=>a(n,e));return Pt(r)}function br(i){return ve(n=>{let e=i(n);return e?He(e).pipe(E(()=>n)):T(n)})}var Qc=(()=>{class i{buildTitle(e){let t,o=e.root;for(;o!==void 0;)t=this.getResolvedTitleForRoute(o)??t,o=o.children.find(a=>a.outlet===Y);return t}getResolvedTitleForRoute(e){return e.data[Hn]}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:()=>b(Rp),providedIn:"root"})}}return i})(),Rp=(()=>{class i extends Qc{constructor(e){super(),this.title=e}updateTitle(e){let t=this.buildTitle(e);t!==void 0&&this.title.setTitle(t)}static{this.\u0275fac=function(t){return new(t||i)(p(yc))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Kr=new w("",{providedIn:"root",factory:()=>({})}),qp=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275cmp=V({type:i,selectors:[["ng-component"]],standalone:!0,features:[G],decls:1,vars:0,template:function(t,o){t&1&&ae(0,"router-outlet")},dependencies:[zm],encapsulation:2})}}return i})();function Zr(i){let n=i.children&&i.children.map(Zr),e=n?me(_({},i),{children:n}):_({},i);return!e.component&&!e.loadComponent&&(n||e.loadChildren)&&e.outlet&&e.outlet!==Y&&(e.component=qp),e}var $r=new w(""),Op=(()=>{class i{constructor(){this.componentLoaders=new WeakMap,this.childrenLoaders=new WeakMap,this.compiler=b(Ja)}loadComponent(e){if(this.componentLoaders.get(e))return this.componentLoaders.get(e);if(e._loadedComponent)return T(e._loadedComponent);this.onLoadStartListener&&this.onLoadStartListener(e);let t=Pt(e.loadComponent()).pipe(E(Xc),ge(a=>{this.onLoadEndListener&&this.onLoadEndListener(e),e._loadedComponent=a}),Xt(()=>{this.componentLoaders.delete(e)})),o=new rn(t,()=>new D).pipe(La());return this.componentLoaders.set(e,o),o}loadChildren(e,t){if(this.childrenLoaders.get(t))return this.childrenLoaders.get(t);if(t._loadedRoutes)return T({routes:t._loadedRoutes,injector:t._loadedInjector});this.onLoadStartListener&&this.onLoadStartListener(t);let a=Fp(t,this.compiler,e,this.onLoadEndListener).pipe(Xt(()=>{this.childrenLoaders.delete(t)})),r=new rn(a,()=>new D).pipe(La());return this.childrenLoaders.set(t,r),r}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();function Fp(i,n,e,t){return Pt(i.loadChildren()).pipe(E(Xc),Ze(o=>o instanceof El||Array.isArray(o)?T(o):He(n.compileModuleAsync(o))),E(o=>{t&&t(i);let a,r,s=!1;return Array.isArray(o)?(r=o,s=!0):(a=o.create(e).injector,r=a.get($r,[],{optional:!0,self:!0}).flat()),{routes:r.map(Zr),injector:a}}))}function Pp(i){return i&&typeof i=="object"&&"default"in i}function Xc(i){return Pp(i)?i.default:i}var Jr=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:()=>b(Bp),providedIn:"root"})}}return i})(),Bp=(()=>{class i{shouldProcessUrl(e){return!0}extract(e){return e}merge(e,t){return e}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Np=new w("");var Hp=new w(""),Lp=(()=>{class i{get hasRequestedNavigation(){return this.navigationId!==0}constructor(){this.currentNavigation=null,this.currentTransition=null,this.lastSuccessfulNavigation=null,this.events=new D,this.transitionAbortSubject=new D,this.configLoader=b(Op),this.environmentInjector=b(ei),this.urlSerializer=b(Vr),this.rootContexts=b(zo),this.location=b(Ai),this.inputBindingEnabled=b(Yr,{optional:!0})!==null,this.titleStrategy=b(Qc),this.options=b(Kr,{optional:!0})||{},this.paramsInheritanceStrategy=this.options.paramsInheritanceStrategy||"emptyOnly",this.urlHandlingStrategy=b(Jr),this.createViewTransition=b(Np,{optional:!0}),this.navigationErrorHandler=b(Hp,{optional:!0}),this.navigationId=0,this.afterPreactivation=()=>T(void 0),this.rootComponentType=null;let e=o=>this.events.next(new Ar(o)),t=o=>this.events.next(new Mr(o));this.configLoader.onLoadEndListener=t,this.configLoader.onLoadStartListener=e}complete(){this.transitions?.complete()}handleNavigationRequest(e){let t=++this.navigationId;this.transitions?.next(me(_(_({},this.transitions.value),e),{id:t}))}setupNavigations(e,t,o){return this.transitions=new Ee({id:0,currentUrlTree:t,currentRawUrl:t,extractedUrl:this.urlHandlingStrategy.extract(t),urlAfterRedirects:this.urlHandlingStrategy.extract(t),rawUrl:t,extras:{},resolve:()=>{},reject:()=>{},promise:Promise.resolve(!0),source:In,restoredState:null,currentSnapshot:o.snapshot,targetSnapshot:null,currentRouterState:o,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.transitions.pipe(ce(a=>a.id!==0),E(a=>me(_({},a),{extractedUrl:this.urlHandlingStrategy.extract(a.rawUrl)})),ve(a=>{let r=!1,s=!1;return T(a).pipe(ve(l=>{if(this.navigationId>a.id)return this.cancelNavigationTransition(a,"",Ge.SupersededByNewNavigation),mt;this.currentTransition=a,this.currentNavigation={id:l.id,initialUrl:l.rawUrl,extractedUrl:l.extractedUrl,targetBrowserUrl:typeof l.extras.browserUrl=="string"?this.urlSerializer.parse(l.extras.browserUrl):l.extras.browserUrl,trigger:l.source,extras:l.extras,previousNavigation:this.lastSuccessfulNavigation?me(_({},this.lastSuccessfulNavigation),{previousNavigation:null}):null};let d=!e.navigated||this.isUpdatingInternalState()||this.isUpdatedBrowserUrl(),h=l.extras.onSameUrlNavigation??e.onSameUrlNavigation;if(!d&&h!=="reload"){let u="";return this.events.next(new ci(l.id,this.urlSerializer.serialize(l.rawUrl),u,xr.IgnoredSameUrlNavigation)),l.resolve(!1),mt}if(this.urlHandlingStrategy.shouldProcessUrl(l.rawUrl))return T(l).pipe(ve(u=>{let v=this.transitions?.getValue();return this.events.next(new Rn(u.id,this.urlSerializer.serialize(u.extractedUrl),u.source,u.restoredState)),v!==this.transitions?.getValue()?mt:Promise.resolve(u)}),Ip(this.environmentInjector,this.configLoader,this.rootComponentType,e.config,this.urlSerializer,this.paramsInheritanceStrategy),ge(u=>{a.targetSnapshot=u.targetSnapshot,a.urlAfterRedirects=u.urlAfterRedirects,this.currentNavigation=me(_({},this.currentNavigation),{finalUrl:u.urlAfterRedirects});let v=new Oo(u.id,this.urlSerializer.serialize(u.extractedUrl),this.urlSerializer.serialize(u.urlAfterRedirects),u.targetSnapshot);this.events.next(v)}));if(d&&this.urlHandlingStrategy.shouldProcessUrl(l.currentRawUrl)){let{id:u,extractedUrl:v,source:y,restoredState:O,extras:U}=l,K=new Rn(u,this.urlSerializer.serialize(v),y,O);this.events.next(K);let ue=zc(this.rootComponentType).snapshot;return this.currentTransition=a=me(_({},l),{targetSnapshot:ue,urlAfterRedirects:v,extras:me(_({},U),{skipLocationChange:!1,replaceUrl:!1})}),this.currentNavigation.finalUrl=v,T(a)}else{let u="";return this.events.next(new ci(l.id,this.urlSerializer.serialize(l.extractedUrl),u,xr.IgnoredByUrlHandlingStrategy)),l.resolve(!1),mt}}),ge(l=>{let d=new Cr(l.id,this.urlSerializer.serialize(l.extractedUrl),this.urlSerializer.serialize(l.urlAfterRedirects),l.targetSnapshot);this.events.next(d)}),E(l=>(this.currentTransition=a=me(_({},l),{guards:Ym(l.targetSnapshot,l.currentSnapshot,this.rootContexts)}),a)),op(this.environmentInjector,l=>this.events.next(l)),ge(l=>{if(a.guardsResult=l.guardsResult,l.guardsResult&&typeof l.guardsResult!="boolean")throw Ho(this.urlSerializer,l.guardsResult);let d=new Sr(l.id,this.urlSerializer.serialize(l.extractedUrl),this.urlSerializer.serialize(l.urlAfterRedirects),l.targetSnapshot,!!l.guardsResult);this.events.next(d)}),ce(l=>l.guardsResult?!0:(this.cancelNavigationTransition(l,"",Ge.GuardRejected),!1)),br(l=>{if(l.guards.canActivateChecks.length)return T(l).pipe(ge(d=>{let h=new Dr(d.id,this.urlSerializer.serialize(d.extractedUrl),this.urlSerializer.serialize(d.urlAfterRedirects),d.targetSnapshot);this.events.next(h)}),ve(d=>{let h=!1;return T(d).pipe(Ap(this.paramsInheritanceStrategy,this.environmentInjector),ge({next:()=>h=!0,complete:()=>{h||this.cancelNavigationTransition(d,"",Ge.NoDataFromResolver)}}))}),ge(d=>{let h=new Ir(d.id,this.urlSerializer.serialize(d.extractedUrl),this.urlSerializer.serialize(d.urlAfterRedirects),d.targetSnapshot);this.events.next(h)}))}),br(l=>{let d=h=>{let u=[];h.routeConfig?.loadComponent&&!h.routeConfig._loadedComponent&&u.push(this.configLoader.loadComponent(h.routeConfig).pipe(ge(v=>{h.component=v}),E(()=>{})));for(let v of h.children)u.push(...d(v));return u};return sn(d(l.targetSnapshot.root)).pipe(ja(null),De(1))}),br(()=>this.afterPreactivation()),ve(()=>{let{currentSnapshot:l,targetSnapshot:d}=a,h=this.createViewTransition?.(this.environmentInjector,l.root,d.root);return h?He(h).pipe(E(()=>a)):T(a)}),E(l=>{let d=jm(e.routeReuseStrategy,l.targetSnapshot,l.currentRouterState);return this.currentTransition=a=me(_({},l),{targetRouterState:d}),this.currentNavigation.targetRouterState=d,a}),ge(()=>{this.events.next(new On)}),Gm(this.rootContexts,e.routeReuseStrategy,l=>this.events.next(l),this.inputBindingEnabled),De(1),ge({next:l=>{r=!0,this.lastSuccessfulNavigation=this.currentNavigation,this.events.next(new li(l.id,this.urlSerializer.serialize(l.extractedUrl),this.urlSerializer.serialize(l.urlAfterRedirects))),this.titleStrategy?.updateTitle(l.targetRouterState.snapshot),l.resolve(!0)},complete:()=>{r=!0}}),j(this.transitionAbortSubject.pipe(ge(l=>{throw l}))),Xt(()=>{!r&&!s&&this.cancelNavigationTransition(a,"",Ge.SupersededByNewNavigation),this.currentTransition?.id===a.id&&(this.currentNavigation=null,this.currentTransition=null)}),Rt(l=>{if(s=!0,Gc(l))this.events.next(new St(a.id,this.urlSerializer.serialize(a.extractedUrl),l.message,l.cancellationCode)),Vm(l)?this.events.next(new Pi(l.url,l.navigationBehaviorOptions)):a.resolve(!1);else{let d=new qn(a.id,this.urlSerializer.serialize(a.extractedUrl),l,a.targetSnapshot??void 0);try{let h=bt(this.environmentInjector,()=>this.navigationErrorHandler?.(d));if(h instanceof Pn){let{message:u,cancellationCode:v}=Ho(this.urlSerializer,h);this.events.next(new St(a.id,this.urlSerializer.serialize(a.extractedUrl),u,v)),this.events.next(new Pi(h.redirectTo,h.navigationBehaviorOptions))}else{this.events.next(d);let u=e.errorHandler(l);a.resolve(!!u)}}catch(h){this.options.resolveNavigationPromiseOnError?a.resolve(!1):a.reject(h)}}return mt}))}))}cancelNavigationTransition(e,t,o){let a=new St(e.id,this.urlSerializer.serialize(e.extractedUrl),t,o);this.events.next(a),e.resolve(!1)}isUpdatingInternalState(){return this.currentTransition?.extractedUrl.toString()!==this.currentTransition?.currentUrlTree.toString()}isUpdatedBrowserUrl(){let e=this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(!0))),t=this.currentNavigation?.targetBrowserUrl??this.currentNavigation?.extractedUrl;return e.toString()!==t?.toString()&&!this.currentNavigation?.extras.skipLocationChange}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();function zp(i){return i!==In}var jp=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:()=>b(Wp),providedIn:"root"})}}return i})(),Ur=class{shouldDetach(n){return!1}store(n,e){}shouldAttach(n){return!1}retrieve(n){return null}shouldReuseRoute(n,e){return n.routeConfig===e.routeConfig}},Wp=(()=>{class i extends Ur{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),ed=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:()=>b(Up),providedIn:"root"})}}return i})(),Up=(()=>{class i extends ed{constructor(){super(...arguments),this.location=b(Ai),this.urlSerializer=b(Vr),this.options=b(Kr,{optional:!0})||{},this.canceledNavigationResolution=this.options.canceledNavigationResolution||"replace",this.urlHandlingStrategy=b(Jr),this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.currentUrlTree=new Dt,this.rawUrlTree=this.currentUrlTree,this.currentPageId=0,this.lastSuccessfulId=-1,this.routerState=zc(null),this.stateMemento=this.createStateMemento()}getCurrentUrlTree(){return this.currentUrlTree}getRawUrlTree(){return this.rawUrlTree}restoredState(){return this.location.getState()}get browserPageId(){return this.canceledNavigationResolution!=="computed"?this.currentPageId:this.restoredState()?.\u0275routerPageId??this.currentPageId}getRouterState(){return this.routerState}createStateMemento(){return{rawUrlTree:this.rawUrlTree,currentUrlTree:this.currentUrlTree,routerState:this.routerState}}registerNonRouterCurrentEntryChangeListener(e){return this.location.subscribe(t=>{t.type==="popstate"&&e(t.url,t.state)})}handleRouterEvent(e,t){if(e instanceof Rn)this.stateMemento=this.createStateMemento();else if(e instanceof ci)this.rawUrlTree=t.initialUrl;else if(e instanceof Oo){if(this.urlUpdateStrategy==="eager"&&!t.extras.skipLocationChange){let o=this.urlHandlingStrategy.merge(t.finalUrl,t.initialUrl);this.setBrowserUrl(t.targetBrowserUrl??o,t)}}else e instanceof On?(this.currentUrlTree=t.finalUrl,this.rawUrlTree=this.urlHandlingStrategy.merge(t.finalUrl,t.initialUrl),this.routerState=t.targetRouterState,this.urlUpdateStrategy==="deferred"&&!t.extras.skipLocationChange&&this.setBrowserUrl(t.targetBrowserUrl??this.rawUrlTree,t)):e instanceof St&&(e.code===Ge.GuardRejected||e.code===Ge.NoDataFromResolver)?this.restoreHistory(t):e instanceof qn?this.restoreHistory(t,!0):e instanceof li&&(this.lastSuccessfulId=e.id,this.currentPageId=this.browserPageId)}setBrowserUrl(e,t){let o=e instanceof Dt?this.urlSerializer.serialize(e):e;if(this.location.isCurrentPathEqualTo(o)||t.extras.replaceUrl){let a=this.browserPageId,r=_(_({},t.extras.state),this.generateNgRouterState(t.id,a));this.location.replaceState(o,"",r)}else{let a=_(_({},t.extras.state),this.generateNgRouterState(t.id,this.browserPageId+1));this.location.go(o,"",a)}}restoreHistory(e,t=!1){if(this.canceledNavigationResolution==="computed"){let o=this.browserPageId,a=this.currentPageId-o;a!==0?this.location.historyGo(a):this.currentUrlTree===e.finalUrl&&a===0&&(this.resetState(e),this.resetUrlToCurrentUrlTree())}else this.canceledNavigationResolution==="replace"&&(t&&this.resetState(e),this.resetUrlToCurrentUrlTree())}resetState(e){this.routerState=this.stateMemento.routerState,this.currentUrlTree=this.stateMemento.currentUrlTree,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,e.finalUrl??this.rawUrlTree)}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}generateNgRouterState(e,t){return this.canceledNavigationResolution==="computed"?{navigationId:e,\u0275routerPageId:t}:{navigationId:e}}static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Sn=function(i){return i[i.COMPLETE=0]="COMPLETE",i[i.FAILED=1]="FAILED",i[i.REDIRECTING=2]="REDIRECTING",i}(Sn||{});function Vp(i,n){i.events.pipe(ce(e=>e instanceof li||e instanceof St||e instanceof qn||e instanceof ci),E(e=>e instanceof li||e instanceof ci?Sn.COMPLETE:(e instanceof St?e.code===Ge.Redirect||e.code===Ge.SupersededByNewNavigation:!1)?Sn.REDIRECTING:Sn.FAILED),ce(e=>e!==Sn.REDIRECTING),De(1)).subscribe(()=>{n()})}function Gp(i){throw i}var Yp={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},Kp={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"},td=(()=>{class i{get currentUrlTree(){return this.stateManager.getCurrentUrlTree()}get rawUrlTree(){return this.stateManager.getRawUrlTree()}get events(){return this._events}get routerState(){return this.stateManager.getRouterState()}constructor(){this.disposed=!1,this.console=b(vo),this.stateManager=b(ed),this.options=b(Kr,{optional:!0})||{},this.pendingTasks=b(bl),this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.navigationTransitions=b(Lp),this.urlSerializer=b(Vr),this.location=b(Ai),this.urlHandlingStrategy=b(Jr),this._events=new D,this.errorHandler=this.options.errorHandler||Gp,this.navigated=!1,this.routeReuseStrategy=b(jp),this.onSameUrlNavigation=this.options.onSameUrlNavigation||"ignore",this.config=b($r,{optional:!0})?.flat()??[],this.componentInputBindingEnabled=!!b(Yr,{optional:!0}),this.eventsSubscription=new ke,this.resetConfig(this.config),this.navigationTransitions.setupNavigations(this,this.currentUrlTree,this.routerState).subscribe({error:e=>{this.console.warn(e)}}),this.subscribeToNavigationEvents()}subscribeToNavigationEvents(){let e=this.navigationTransitions.events.subscribe(t=>{try{let o=this.navigationTransitions.currentTransition,a=this.navigationTransitions.currentNavigation;if(o!==null&&a!==null){if(this.stateManager.handleRouterEvent(t,a),t instanceof St&&t.code!==Ge.Redirect&&t.code!==Ge.SupersededByNewNavigation)this.navigated=!0;else if(t instanceof li)this.navigated=!0;else if(t instanceof Pi){let r=t.navigationBehaviorOptions,s=this.urlHandlingStrategy.merge(t.url,o.currentRawUrl),l=_({browserUrl:o.extras.browserUrl,info:o.extras.info,skipLocationChange:o.extras.skipLocationChange,replaceUrl:o.extras.replaceUrl||this.urlUpdateStrategy==="eager"||zp(o.source)},r);this.scheduleNavigation(s,In,null,l,{resolve:o.resolve,reject:o.reject,promise:o.promise})}}$p(t)&&this._events.next(t)}catch(o){this.navigationTransitions.transitionAbortSubject.next(o)}});this.eventsSubscription.add(e)}resetRootComponentType(e){this.routerState.root.component=e,this.navigationTransitions.rootComponentType=e}initialNavigation(){this.setUpLocationChangeListener(),this.navigationTransitions.hasRequestedNavigation||this.navigateToSyncWithBrowser(this.location.path(!0),In,this.stateManager.restoredState())}setUpLocationChangeListener(){this.nonRouterCurrentEntryChangeSubscription??=this.stateManager.registerNonRouterCurrentEntryChangeListener((e,t)=>{setTimeout(()=>{this.navigateToSyncWithBrowser(e,"popstate",t)},0)})}navigateToSyncWithBrowser(e,t,o){let a={replaceUrl:!0},r=o?.navigationId?o:null;if(o){let l=_({},o);delete l.navigationId,delete l.\u0275routerPageId,Object.keys(l).length!==0&&(a.state=l)}let s=this.parseUrl(e);this.scheduleNavigation(s,t,r,a)}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.navigationTransitions.currentNavigation}get lastSuccessfulNavigation(){return this.navigationTransitions.lastSuccessfulNavigation}resetConfig(e){this.config=e.map(Zr),this.navigated=!1}ngOnDestroy(){this.dispose()}dispose(){this.navigationTransitions.complete(),this.nonRouterCurrentEntryChangeSubscription&&(this.nonRouterCurrentEntryChangeSubscription.unsubscribe(),this.nonRouterCurrentEntryChangeSubscription=void 0),this.disposed=!0,this.eventsSubscription.unsubscribe()}createUrlTree(e,t={}){let{relativeTo:o,queryParams:a,fragment:r,queryParamsHandling:s,preserveFragment:l}=t,d=l?this.currentUrlTree.fragment:r,h=null;switch(s??this.options.defaultQueryParamsHandling){case"merge":h=_(_({},this.currentUrlTree.queryParams),a);break;case"preserve":h=this.currentUrlTree.queryParams;break;default:h=a||null}h!==null&&(h=this.removeEmptyProps(h));let u;try{let v=o?o.snapshot:this.routerState.snapshot.root;u=Bc(v)}catch{(typeof e[0]!="string"||e[0][0]!=="/")&&(e=[]),u=this.currentUrlTree.root}return Nc(u,e,h,d??null)}navigateByUrl(e,t={skipLocationChange:!1}){let o=Tn(e)?e:this.parseUrl(e),a=this.urlHandlingStrategy.merge(o,this.rawUrlTree);return this.scheduleNavigation(a,In,null,t)}navigate(e,t={skipLocationChange:!1}){return Zp(e),this.navigateByUrl(this.createUrlTree(e,t),t)}serializeUrl(e){return this.urlSerializer.serialize(e)}parseUrl(e){try{return this.urlSerializer.parse(e)}catch{return this.urlSerializer.parse("/")}}isActive(e,t){let o;if(t===!0?o=_({},Yp):t===!1?o=_({},Kp):o=t,Tn(e))return vc(this.currentUrlTree,e,o);let a=this.parseUrl(e);return vc(this.currentUrlTree,a,o)}removeEmptyProps(e){return Object.entries(e).reduce((t,[o,a])=>(a!=null&&(t[o]=a),t),{})}scheduleNavigation(e,t,o,a,r){if(this.disposed)return Promise.resolve(!1);let s,l,d;r?(s=r.resolve,l=r.reject,d=r.promise):d=new Promise((u,v)=>{s=u,l=v});let h=this.pendingTasks.add();return Vp(this,()=>{queueMicrotask(()=>this.pendingTasks.remove(h))}),this.navigationTransitions.handleNavigationRequest({source:t,restoredState:o,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,rawUrl:e,extras:a,resolve:s,reject:l,promise:d,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),d.catch(u=>Promise.reject(u))}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();function Zp(i){for(let n=0;n<i.length;n++)if(i[n]==null)throw new fe(4008,!1)}function $p(i){return!(i instanceof On)&&!(i instanceof Pi)}var Jp=new w("");function id(i,...n){return hn([{provide:$r,multi:!0,useValue:i},[],{provide:Bi,useFactory:Qp,deps:[td]},{provide:jl,multi:!0,useFactory:Xp},n.map(e=>e.\u0275providers)])}function Qp(i){return i.routerState.root}function Xp(){let i=b(xe);return n=>{let e=i.get(yn);if(n!==e.components[0])return;let t=i.get(td),o=i.get(ef);i.get(tf)===1&&t.initialNavigation(),i.get(nf,null,Va.Optional)?.setUpPreloading(),i.get(Jp,null,Va.Optional)?.init(),t.resetRootComponentType(e.componentTypes[0]),o.closed||(o.next(),o.complete(),o.unsubscribe())}}var ef=new w("",{factory:()=>new D}),tf=new w("",{providedIn:"root",factory:()=>1});var nf=new w("");var nd=[];var of="@",af=(()=>{class i{constructor(e,t,o,a,r){this.doc=e,this.delegate=t,this.zone=o,this.animationType=a,this.moduleImpl=r,this._rendererFactoryPromise=null,this.scheduler=b(Al,{optional:!0}),this.loadingSchedulerFn=b(rf,{optional:!0})}ngOnDestroy(){this._engine?.flush()}loadImpl(){let e=()=>this.moduleImpl??import("./chunk-PMZVGBYH.js").then(o=>o),t;return this.loadingSchedulerFn?t=this.loadingSchedulerFn(e):t=e(),t.catch(o=>{throw new fe(5300,!1)}).then(({\u0275createEngine:o,\u0275AnimationRendererFactory:a})=>{this._engine=o(this.animationType,this.doc);let r=new a(this.delegate,this._engine,this.zone);return this.delegate=r,r})}createRenderer(e,t){let o=this.delegate.createRenderer(e,t);if(o.\u0275type===0)return o;typeof o.throwOnSyntheticProps=="boolean"&&(o.throwOnSyntheticProps=!1);let a=new Qr(o);return t?.data?.animation&&!this._rendererFactoryPromise&&(this._rendererFactoryPromise=this.loadImpl()),this._rendererFactoryPromise?.then(r=>{let s=r.createRenderer(e,t);a.use(s),this.scheduler?.notify(10)}).catch(r=>{a.use(o)}),a}begin(){this.delegate.begin?.()}end(){this.delegate.end?.()}whenRenderingDone(){return this.delegate.whenRenderingDone?.()??Promise.resolve()}static{this.\u0275fac=function(t){fn()}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac})}}return i})(),Qr=class{constructor(n){this.delegate=n,this.replay=[],this.\u0275type=1}use(n){if(this.delegate=n,this.replay!==null){for(let e of this.replay)e(n);this.replay=null}}get data(){return this.delegate.data}destroy(){this.replay=null,this.delegate.destroy()}createElement(n,e){return this.delegate.createElement(n,e)}createComment(n){return this.delegate.createComment(n)}createText(n){return this.delegate.createText(n)}get destroyNode(){return this.delegate.destroyNode}appendChild(n,e){this.delegate.appendChild(n,e)}insertBefore(n,e,t,o){this.delegate.insertBefore(n,e,t,o)}removeChild(n,e,t){this.delegate.removeChild(n,e,t)}selectRootElement(n,e){return this.delegate.selectRootElement(n,e)}parentNode(n){return this.delegate.parentNode(n)}nextSibling(n){return this.delegate.nextSibling(n)}setAttribute(n,e,t,o){this.delegate.setAttribute(n,e,t,o)}removeAttribute(n,e,t){this.delegate.removeAttribute(n,e,t)}addClass(n,e){this.delegate.addClass(n,e)}removeClass(n,e){this.delegate.removeClass(n,e)}setStyle(n,e,t,o){this.delegate.setStyle(n,e,t,o)}removeStyle(n,e,t){this.delegate.removeStyle(n,e,t)}setProperty(n,e,t){this.shouldReplay(e)&&this.replay.push(o=>o.setProperty(n,e,t)),this.delegate.setProperty(n,e,t)}setValue(n,e){this.delegate.setValue(n,e)}listen(n,e,t){return this.shouldReplay(e)&&this.replay.push(o=>o.listen(n,e,t)),this.delegate.listen(n,e,t)}shouldReplay(n){return this.replay!==null&&n.startsWith(of)}},rf=new w("");function od(i="animations"){return Ml("NgAsyncAnimations"),hn([{provide:bo,useFactory:(n,e,t)=>new af(n,e,t,i),deps:[L,So,I]},{provide:Se,useValue:i==="noop"?"NoopAnimations":"BrowserAnimations"}])}var ad={providers:[Wl({eventCoalescing:!0}),id(nd),od()]};function We(i){return i!=null&&`${i}`!="false"}function Li(i,n=0){return sf(i)?Number(i):arguments.length===2?n:0}function sf(i){return!isNaN(parseFloat(i))&&!isNaN(Number(i))}function zi(i){return Array.isArray(i)?i:[i]}function we(i){return i==null?"":typeof i=="string"?i:`${i}px`}function it(i){return i instanceof A?i.nativeElement:i}var es;try{es=typeof Intl<"u"&&Intl.v8BreakIterator}catch{es=!1}var se=(()=>{class i{constructor(e){this._platformId=e,this.isBrowser=this._platformId?Xl(this._platformId):typeof document=="object"&&!!document,this.EDGE=this.isBrowser&&/(edge)/i.test(navigator.userAgent),this.TRIDENT=this.isBrowser&&/(msie|trident)/i.test(navigator.userAgent),this.BLINK=this.isBrowser&&!!(window.chrome||es)&&typeof CSS<"u"&&!this.EDGE&&!this.TRIDENT,this.WEBKIT=this.isBrowser&&/AppleWebKit/i.test(navigator.userAgent)&&!this.BLINK&&!this.EDGE&&!this.TRIDENT,this.IOS=this.isBrowser&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!("MSStream"in window),this.FIREFOX=this.isBrowser&&/(firefox|minefield)/i.test(navigator.userAgent),this.ANDROID=this.isBrowser&&/android/i.test(navigator.userAgent)&&!this.TRIDENT,this.SAFARI=this.isBrowser&&/safari/i.test(navigator.userAgent)&&this.WEBKIT}static{this.\u0275fac=function(t){return new(t||i)(p(ni))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var ji,rd=["color","button","checkbox","date","datetime-local","email","file","hidden","image","month","number","password","radio","range","reset","search","submit","tel","text","time","url","week"];function ts(){if(ji)return ji;if(typeof document!="object"||!document)return ji=new Set(rd),ji;let i=document.createElement("input");return ji=new Set(rd.filter(n=>(i.setAttribute("type",n),i.type===n))),ji}var jn;function lf(){if(jn==null&&typeof window<"u")try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:()=>jn=!0}))}finally{jn=jn||!1}return jn}function Bt(i){return lf()?i:!!i.capture}var dt=function(i){return i[i.NORMAL=0]="NORMAL",i[i.NEGATED=1]="NEGATED",i[i.INVERTED=2]="INVERTED",i}(dt||{}),Wo,di;function Uo(){if(di==null){if(typeof document!="object"||!document||typeof Element!="function"||!Element)return di=!1,di;if("scrollBehavior"in document.documentElement.style)di=!0;else{let i=Element.prototype.scrollTo;i?di=!/\{\s*\[native code\]\s*\}/.test(i.toString()):di=!1}}return di}function Wi(){if(typeof document!="object"||!document)return dt.NORMAL;if(Wo==null){let i=document.createElement("div"),n=i.style;i.dir="rtl",n.width="1px",n.overflow="auto",n.visibility="hidden",n.pointerEvents="none",n.position="absolute";let e=document.createElement("div"),t=e.style;t.width="2px",t.height="1px",i.appendChild(e),document.body.appendChild(i),Wo=dt.NORMAL,i.scrollLeft===0&&(i.scrollLeft=1,Wo=i.scrollLeft===0?dt.NEGATED:dt.INVERTED),i.remove()}return Wo}var Xr;function cf(){if(Xr==null){let i=typeof document<"u"?document.head:null;Xr=!!(i&&(i.createShadowRoot||i.attachShadow))}return Xr}function sd(i){if(cf()){let n=i.getRootNode?i.getRootNode():null;if(typeof ShadowRoot<"u"&&ShadowRoot&&n instanceof ShadowRoot)return n}return null}function Ne(i){return i.composedPath?i.composedPath()[0]:i.target}function Wn(){return typeof __karma__<"u"&&!!__karma__||typeof jasmine<"u"&&!!jasmine||typeof jest<"u"&&!!jest||typeof Mocha<"u"&&!!Mocha}var df=new w("cdk-dir-doc",{providedIn:"root",factory:hf});function hf(){return b(L)}var uf=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;function mf(i){let n=i?.toLowerCase()||"";return n==="auto"&&typeof navigator<"u"&&navigator?.language?uf.test(navigator.language)?"rtl":"ltr":n==="rtl"?"rtl":"ltr"}var Ae=(()=>{class i{constructor(e){if(this.value="ltr",this.change=new N,e){let t=e.body?e.body.dir:null,o=e.documentElement?e.documentElement.dir:null;this.value=mf(t||o||"ltr")}}ngOnDestroy(){this.change.complete()}static{this.\u0275fac=function(t){return new(t||i)(p(df,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var Nt=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({})}}return i})();function Go(i){return i&&typeof i.connect=="function"&&!(i instanceof rn)}var Ui=function(i){return i[i.REPLACED=0]="REPLACED",i[i.INSERTED=1]="INSERTED",i[i.MOVED=2]="MOVED",i[i.REMOVED=3]="REMOVED",i}(Ui||{}),Un=new w("_ViewRepeater"),Vi=class{applyChanges(n,e,t,o,a){n.forEachOperation((r,s,l)=>{let d,h;if(r.previousIndex==null){let u=t(r,s,l);d=e.createEmbeddedView(u.templateRef,u.context,u.index),h=Ui.INSERTED}else l==null?(e.remove(s),h=Ui.REMOVED):(d=e.get(s),e.move(d,l),h=Ui.MOVED);a&&a({context:d?.context,operation:h,record:r})})}detach(){}};var Vo=class{get selected(){return this._selected||(this._selected=Array.from(this._selection.values())),this._selected}constructor(n=!1,e,t=!0,o){this._multiple=n,this._emitChanges=t,this.compareWith=o,this._selection=new Set,this._deselectedToEmit=[],this._selectedToEmit=[],this.changed=new D,e&&e.length&&(n?e.forEach(a=>this._markSelected(a)):this._markSelected(e[0]),this._selectedToEmit.length=0)}select(...n){this._verifyValueAssignment(n),n.forEach(t=>this._markSelected(t));let e=this._hasQueuedChanges();return this._emitChangeEvent(),e}deselect(...n){this._verifyValueAssignment(n),n.forEach(t=>this._unmarkSelected(t));let e=this._hasQueuedChanges();return this._emitChangeEvent(),e}setSelection(...n){this._verifyValueAssignment(n);let e=this.selected,t=new Set(n);n.forEach(a=>this._markSelected(a)),e.filter(a=>!t.has(this._getConcreteValue(a,t))).forEach(a=>this._unmarkSelected(a));let o=this._hasQueuedChanges();return this._emitChangeEvent(),o}toggle(n){return this.isSelected(n)?this.deselect(n):this.select(n)}clear(n=!0){this._unmarkAll();let e=this._hasQueuedChanges();return n&&this._emitChangeEvent(),e}isSelected(n){return this._selection.has(this._getConcreteValue(n))}isEmpty(){return this._selection.size===0}hasValue(){return!this.isEmpty()}sort(n){this._multiple&&this.selected&&this._selected.sort(n)}isMultipleSelection(){return this._multiple}_emitChangeEvent(){this._selected=null,(this._selectedToEmit.length||this._deselectedToEmit.length)&&(this.changed.next({source:this,added:this._selectedToEmit,removed:this._deselectedToEmit}),this._deselectedToEmit=[],this._selectedToEmit=[])}_markSelected(n){n=this._getConcreteValue(n),this.isSelected(n)||(this._multiple||this._unmarkAll(),this.isSelected(n)||this._selection.add(n),this._emitChanges&&this._selectedToEmit.push(n))}_unmarkSelected(n){n=this._getConcreteValue(n),this.isSelected(n)&&(this._selection.delete(n),this._emitChanges&&this._deselectedToEmit.push(n))}_unmarkAll(){this.isEmpty()||this._selection.forEach(n=>this._unmarkSelected(n))}_verifyValueAssignment(n){n.length>1&&this._multiple}_hasQueuedChanges(){return!!(this._deselectedToEmit.length||this._selectedToEmit.length)}_getConcreteValue(n,e){if(this.compareWith){e=e??this._selection;for(let t of e)if(this.compareWith(n,t))return t;return n}else return n}};var pf=20,Gi=(()=>{class i{constructor(e,t,o){this._ngZone=e,this._platform=t,this._scrolled=new D,this._globalSubscription=null,this._scrolledCount=0,this.scrollContainers=new Map,this._document=o}register(e){this.scrollContainers.has(e)||this.scrollContainers.set(e,e.elementScrolled().subscribe(()=>this._scrolled.next(e)))}deregister(e){let t=this.scrollContainers.get(e);t&&(t.unsubscribe(),this.scrollContainers.delete(e))}scrolled(e=pf){return this._platform.isBrowser?new rt(t=>{this._globalSubscription||this._addGlobalListener();let o=e>0?this._scrolled.pipe(za(e)).subscribe(t):this._scrolled.subscribe(t);return this._scrolledCount++,()=>{o.unsubscribe(),this._scrolledCount--,this._scrolledCount||this._removeGlobalListener()}}):T()}ngOnDestroy(){this._removeGlobalListener(),this.scrollContainers.forEach((e,t)=>this.deregister(t)),this._scrolled.complete()}ancestorScrolled(e,t){let o=this.getAncestorScrollContainers(e);return this.scrolled(t).pipe(ce(a=>!a||o.indexOf(a)>-1))}getAncestorScrollContainers(e){let t=[];return this.scrollContainers.forEach((o,a)=>{this._scrollableContainsElement(a,e)&&t.push(a)}),t}_getWindow(){return this._document.defaultView||window}_scrollableContainsElement(e,t){let o=it(t),a=e.getElementRef().nativeElement;do if(o==a)return!0;while(o=o.parentElement);return!1}_addGlobalListener(){this._globalSubscription=this._ngZone.runOutsideAngular(()=>{let e=this._getWindow();return pt(e.document,"scroll").subscribe(()=>this._scrolled.next())})}_removeGlobalListener(){this._globalSubscription&&(this._globalSubscription.unsubscribe(),this._globalSubscription=null)}static{this.\u0275fac=function(t){return new(t||i)(p(I),p(se),p(L,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Yi=(()=>{class i{constructor(e,t,o,a){this.elementRef=e,this.scrollDispatcher=t,this.ngZone=o,this.dir=a,this._destroyed=new D,this._elementScrolled=new rt(r=>this.ngZone.runOutsideAngular(()=>pt(this.elementRef.nativeElement,"scroll").pipe(j(this._destroyed)).subscribe(r)))}ngOnInit(){this.scrollDispatcher.register(this)}ngOnDestroy(){this.scrollDispatcher.deregister(this),this._destroyed.next(),this._destroyed.complete()}elementScrolled(){return this._elementScrolled}getElementRef(){return this.elementRef}scrollTo(e){let t=this.elementRef.nativeElement,o=this.dir&&this.dir.value=="rtl";e.left==null&&(e.left=o?e.end:e.start),e.right==null&&(e.right=o?e.start:e.end),e.bottom!=null&&(e.top=t.scrollHeight-t.clientHeight-e.bottom),o&&Wi()!=dt.NORMAL?(e.left!=null&&(e.right=t.scrollWidth-t.clientWidth-e.left),Wi()==dt.INVERTED?e.left=e.right:Wi()==dt.NEGATED&&(e.left=e.right?-e.right:e.right)):e.right!=null&&(e.left=t.scrollWidth-t.clientWidth-e.right),this._applyScrollToOptions(e)}_applyScrollToOptions(e){let t=this.elementRef.nativeElement;Uo()?t.scrollTo(e):(e.top!=null&&(t.scrollTop=e.top),e.left!=null&&(t.scrollLeft=e.left))}measureScrollOffset(e){let t="left",o="right",a=this.elementRef.nativeElement;if(e=="top")return a.scrollTop;if(e=="bottom")return a.scrollHeight-a.clientHeight-a.scrollTop;let r=this.dir&&this.dir.value=="rtl";return e=="start"?e=r?o:t:e=="end"&&(e=r?t:o),r&&Wi()==dt.INVERTED?e==t?a.scrollWidth-a.clientWidth-a.scrollLeft:a.scrollLeft:r&&Wi()==dt.NEGATED?e==t?a.scrollLeft+a.scrollWidth-a.clientWidth:-a.scrollLeft:e==t?a.scrollLeft:a.scrollWidth-a.clientWidth-a.scrollLeft}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(Gi),c(I),c(Ae,8))}}static{this.\u0275dir=k({type:i,selectors:[["","cdk-scrollable",""],["","cdkScrollable",""]],standalone:!0})}}return i})(),ff=20,ht=(()=>{class i{constructor(e,t,o){this._platform=e,this._change=new D,this._changeListener=a=>{this._change.next(a)},this._document=o,t.runOutsideAngular(()=>{if(e.isBrowser){let a=this._getWindow();a.addEventListener("resize",this._changeListener),a.addEventListener("orientationchange",this._changeListener)}this.change().subscribe(()=>this._viewportSize=null)})}ngOnDestroy(){if(this._platform.isBrowser){let e=this._getWindow();e.removeEventListener("resize",this._changeListener),e.removeEventListener("orientationchange",this._changeListener)}this._change.complete()}getViewportSize(){this._viewportSize||this._updateViewportSize();let e={width:this._viewportSize.width,height:this._viewportSize.height};return this._platform.isBrowser||(this._viewportSize=null),e}getViewportRect(){let e=this.getViewportScrollPosition(),{width:t,height:o}=this.getViewportSize();return{top:e.top,left:e.left,bottom:e.top+o,right:e.left+t,height:o,width:t}}getViewportScrollPosition(){if(!this._platform.isBrowser)return{top:0,left:0};let e=this._document,t=this._getWindow(),o=e.documentElement,a=o.getBoundingClientRect(),r=-a.top||e.body.scrollTop||t.scrollY||o.scrollTop||0,s=-a.left||e.body.scrollLeft||t.scrollX||o.scrollLeft||0;return{top:r,left:s}}change(e=ff){return e>0?this._change.pipe(za(e)):this._change}_getWindow(){return this._document.defaultView||window}_updateViewportSize(){let e=this._getWindow();this._viewportSize=this._platform.isBrowser?{width:e.innerWidth,height:e.innerHeight}:{width:0,height:0}}static{this.\u0275fac=function(t){return new(t||i)(p(se),p(I),p(L,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var It=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({})}}return i})(),Vn=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[Nt,It,Nt,It]})}}return i})();function Me(i,...n){return n.length?n.some(e=>i[e]):i.altKey||i.shiftKey||i.ctrlKey||i.metaKey}var gf=(()=>{class i{create(e){return typeof MutationObserver>"u"?null:new MutationObserver(e)}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var ld=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({providers:[gf]})}}return i})();var cd=new Set,hi,bf=(()=>{class i{constructor(e,t){this._platform=e,this._nonce=t,this._matchMedia=this._platform.isBrowser&&window.matchMedia?window.matchMedia.bind(window):_f}matchMedia(e){return(this._platform.WEBKIT||this._platform.BLINK)&&yf(e,this._nonce),this._matchMedia(e)}static{this.\u0275fac=function(t){return new(t||i)(p(se),p(mn,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();function yf(i,n){if(!cd.has(i))try{hi||(hi=document.createElement("style"),n&&hi.setAttribute("nonce",n),hi.setAttribute("type","text/css"),document.head.appendChild(hi)),hi.sheet&&(hi.sheet.insertRule(`@media ${i} {body{ }}`,0),cd.add(i))}catch(e){console.error(e)}}function _f(i){return{matches:i==="all"||i==="",media:i,addListener:()=>{},removeListener:()=>{}}}var Yo=(()=>{class i{constructor(e,t){this._mediaMatcher=e,this._zone=t,this._queries=new Map,this._destroySubject=new D}ngOnDestroy(){this._destroySubject.next(),this._destroySubject.complete()}isMatched(e){return dd(zi(e)).some(o=>this._registerQuery(o).mql.matches)}observe(e){let o=dd(zi(e)).map(r=>this._registerQuery(r).observable),a=sn(o);return a=mo(a.pipe(De(1)),a.pipe(fo(1),Ci(0))),a.pipe(E(r=>{let s={matches:!1,breakpoints:{}};return r.forEach(({matches:l,query:d})=>{s.matches=s.matches||l,s.breakpoints[d]=l}),s}))}_registerQuery(e){if(this._queries.has(e))return this._queries.get(e);let t=this._mediaMatcher.matchMedia(e),a={observable:new rt(r=>{let s=l=>this._zone.run(()=>r.next(l));return t.addListener(s),()=>{t.removeListener(s)}}).pipe(_e(t),E(({matches:r})=>({query:e,matches:r})),j(this._destroySubject)),mql:t};return this._queries.set(e,a),a}static{this.\u0275fac=function(t){return new(t||i)(p(bf),p(I))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();function dd(i){return i.map(n=>n.split(",")).reduce((n,e)=>n.concat(e)).map(n=>n.trim())}var hd={XSmall:"(max-width: 599.98px)",Small:"(min-width: 600px) and (max-width: 959.98px)",Medium:"(min-width: 960px) and (max-width: 1279.98px)",Large:"(min-width: 1280px) and (max-width: 1919.98px)",XLarge:"(min-width: 1920px)",Handset:"(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)",Tablet:"(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), (min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)",Web:"(min-width: 840px) and (orientation: portrait), (min-width: 1280px) and (orientation: landscape)",HandsetPortrait:"(max-width: 599.98px) and (orientation: portrait)",TabletPortrait:"(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)",WebPortrait:"(min-width: 840px) and (orientation: portrait)",HandsetLandscape:"(max-width: 959.98px) and (orientation: landscape)",TabletLandscape:"(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)",WebLandscape:"(min-width: 1280px) and (orientation: landscape)"};var fd=" ";function Kn(i,n,e){let t=gd(i,n);e=e.trim(),!t.some(o=>o.trim()===e)&&(t.push(e),i.setAttribute(n,t.join(fd)))}function mi(i,n,e){let t=gd(i,n);e=e.trim();let o=t.filter(a=>a!==e);o.length?i.setAttribute(n,o.join(fd)):i.removeAttribute(n)}function gd(i,n){return i.getAttribute(n)?.match(/\S+/g)??[]}var Rf=200,ns=class{constructor(n,e){this._letterKeyStream=new D,this._items=[],this._selectedItemIndex=-1,this._pressedLetters=[],this._selectedItem=new D,this.selectedItem=this._selectedItem;let t=typeof e?.debounceInterval=="number"?e.debounceInterval:Rf;e?.skipPredicate&&(this._skipPredicateFn=e.skipPredicate),this.setItems(n),this._setupKeyHandler(t)}destroy(){this._pressedLetters=[],this._letterKeyStream.complete(),this._selectedItem.complete()}setCurrentSelectedItemIndex(n){this._selectedItemIndex=n}setItems(n){this._items=n}handleKey(n){let e=n.keyCode;n.key&&n.key.length===1?this._letterKeyStream.next(n.key.toLocaleUpperCase()):(e>=65&&e<=90||e>=48&&e<=57)&&this._letterKeyStream.next(String.fromCharCode(e))}isTyping(){return this._pressedLetters.length>0}reset(){this._pressedLetters=[]}_setupKeyHandler(n){this._letterKeyStream.pipe(ge(e=>this._pressedLetters.push(e)),Ci(n),ce(()=>this._pressedLetters.length>0),E(()=>this._pressedLetters.join("").toLocaleUpperCase())).subscribe(e=>{for(let t=1;t<this._items.length+1;t++){let o=(this._selectedItemIndex+t)%this._items.length,a=this._items[o];if(!this._skipPredicateFn?.(a)&&a.getLabel?.().toLocaleUpperCase().trim().indexOf(e)===0){this._selectedItem.next(a);break}}this._pressedLetters=[]})}},$o=class{constructor(n,e){this._items=n,this._activeItemIndex=-1,this._activeItem=Ot(null),this._wrap=!1,this._typeaheadSubscription=ke.EMPTY,this._vertical=!0,this._allowedModifierKeys=[],this._homeAndEnd=!1,this._pageUpAndDown={enabled:!1,delta:10},this._skipPredicateFn=t=>t.disabled,this.tabOut=new D,this.change=new D,n instanceof ii?this._itemChangesSubscription=n.changes.subscribe(t=>this._itemsChanged(t.toArray())):Ya(n)&&(this._effectRef=Vl(()=>this._itemsChanged(n()),{injector:e}))}skipPredicate(n){return this._skipPredicateFn=n,this}withWrap(n=!0){return this._wrap=n,this}withVerticalOrientation(n=!0){return this._vertical=n,this}withHorizontalOrientation(n){return this._horizontal=n,this}withAllowedModifierKeys(n){return this._allowedModifierKeys=n,this}withTypeAhead(n=200){this._typeaheadSubscription.unsubscribe();let e=this._getItemsArray();return this._typeahead=new ns(e,{debounceInterval:typeof n=="number"?n:void 0,skipPredicate:t=>this._skipPredicateFn(t)}),this._typeaheadSubscription=this._typeahead.selectedItem.subscribe(t=>{this.setActiveItem(t)}),this}cancelTypeahead(){return this._typeahead?.reset(),this}withHomeAndEnd(n=!0){return this._homeAndEnd=n,this}withPageUpDown(n=!0,e=10){return this._pageUpAndDown={enabled:n,delta:e},this}setActiveItem(n){let e=this._activeItem();this.updateActiveItem(n),this._activeItem()!==e&&this.change.next(this._activeItemIndex)}onKeydown(n){let e=n.keyCode,o=["altKey","ctrlKey","metaKey","shiftKey"].every(a=>!n[a]||this._allowedModifierKeys.indexOf(a)>-1);switch(e){case 9:this.tabOut.next();return;case 40:if(this._vertical&&o){this.setNextItemActive();break}else return;case 38:if(this._vertical&&o){this.setPreviousItemActive();break}else return;case 39:if(this._horizontal&&o){this._horizontal==="rtl"?this.setPreviousItemActive():this.setNextItemActive();break}else return;case 37:if(this._horizontal&&o){this._horizontal==="rtl"?this.setNextItemActive():this.setPreviousItemActive();break}else return;case 36:if(this._homeAndEnd&&o){this.setFirstItemActive();break}else return;case 35:if(this._homeAndEnd&&o){this.setLastItemActive();break}else return;case 33:if(this._pageUpAndDown.enabled&&o){let a=this._activeItemIndex-this._pageUpAndDown.delta;this._setActiveItemByIndex(a>0?a:0,1);break}else return;case 34:if(this._pageUpAndDown.enabled&&o){let a=this._activeItemIndex+this._pageUpAndDown.delta,r=this._getItemsArray().length;this._setActiveItemByIndex(a<r?a:r-1,-1);break}else return;default:(o||Me(n,"shiftKey"))&&this._typeahead?.handleKey(n);return}this._typeahead?.reset(),n.preventDefault()}get activeItemIndex(){return this._activeItemIndex}get activeItem(){return this._activeItem()}isTyping(){return!!this._typeahead&&this._typeahead.isTyping()}setFirstItemActive(){this._setActiveItemByIndex(0,1)}setLastItemActive(){this._setActiveItemByIndex(this._getItemsArray().length-1,-1)}setNextItemActive(){this._activeItemIndex<0?this.setFirstItemActive():this._setActiveItemByDelta(1)}setPreviousItemActive(){this._activeItemIndex<0&&this._wrap?this.setLastItemActive():this._setActiveItemByDelta(-1)}updateActiveItem(n){let e=this._getItemsArray(),t=typeof n=="number"?n:e.indexOf(n),o=e[t];this._activeItem.set(o??null),this._activeItemIndex=t,this._typeahead?.setCurrentSelectedItemIndex(t)}destroy(){this._typeaheadSubscription.unsubscribe(),this._itemChangesSubscription?.unsubscribe(),this._effectRef?.destroy(),this._typeahead?.destroy(),this.tabOut.complete(),this.change.complete()}_setActiveItemByDelta(n){this._wrap?this._setActiveInWrapMode(n):this._setActiveInDefaultMode(n)}_setActiveInWrapMode(n){let e=this._getItemsArray();for(let t=1;t<=e.length;t++){let o=(this._activeItemIndex+n*t+e.length)%e.length,a=e[o];if(!this._skipPredicateFn(a)){this.setActiveItem(o);return}}}_setActiveInDefaultMode(n){this._setActiveItemByIndex(this._activeItemIndex+n,n)}_setActiveItemByIndex(n,e){let t=this._getItemsArray();if(t[n]){for(;this._skipPredicateFn(t[n]);)if(n+=e,!t[n])return;this.setActiveItem(n)}}_getItemsArray(){return Ya(this._items)?this._items():this._items instanceof ii?this._items.toArray():this._items}_itemsChanged(n){this._typeahead?.setItems(n);let e=this._activeItem();if(e){let t=n.indexOf(e);t>-1&&t!==this._activeItemIndex&&(this._activeItemIndex=t,this._typeahead?.setCurrentSelectedItemIndex(t))}}},Zi=class extends $o{setActiveItem(n){this.activeItem&&this.activeItem.setInactiveStyles(),super.setActiveItem(n),this.activeItem&&this.activeItem.setActiveStyles()}},Jo=class extends $o{constructor(){super(...arguments),this._origin="program"}setFocusOrigin(n){return this._origin=n,this}setActiveItem(n){super.setActiveItem(n),this.activeItem&&this.activeItem.focus(this._origin)}};var ls=(()=>{class i{constructor(e){this._platform=e}isDisabled(e){return e.hasAttribute("disabled")}isVisible(e){return Of(e)&&getComputedStyle(e).visibility==="visible"}isTabbable(e){if(!this._platform.isBrowser)return!1;let t=qf(jf(e));if(t&&(ud(t)===-1||!this.isVisible(t)))return!1;let o=e.nodeName.toLowerCase(),a=ud(e);return e.hasAttribute("contenteditable")?a!==-1:o==="iframe"||o==="object"||this._platform.WEBKIT&&this._platform.IOS&&!Lf(e)?!1:o==="audio"?e.hasAttribute("controls")?a!==-1:!1:o==="video"?a===-1?!1:a!==null?!0:this._platform.FIREFOX||e.hasAttribute("controls"):e.tabIndex>=0}isFocusable(e,t){return zf(e)&&!this.isDisabled(e)&&(t?.ignoreVisibility||this.isVisible(e))}static{this.\u0275fac=function(t){return new(t||i)(p(se))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();function qf(i){try{return i.frameElement}catch{return null}}function Of(i){return!!(i.offsetWidth||i.offsetHeight||typeof i.getClientRects=="function"&&i.getClientRects().length)}function Ff(i){let n=i.nodeName.toLowerCase();return n==="input"||n==="select"||n==="button"||n==="textarea"}function Pf(i){return Nf(i)&&i.type=="hidden"}function Bf(i){return Hf(i)&&i.hasAttribute("href")}function Nf(i){return i.nodeName.toLowerCase()=="input"}function Hf(i){return i.nodeName.toLowerCase()=="a"}function bd(i){if(!i.hasAttribute("tabindex")||i.tabIndex===void 0)return!1;let n=i.getAttribute("tabindex");return!!(n&&!isNaN(parseInt(n,10)))}function ud(i){if(!bd(i))return null;let n=parseInt(i.getAttribute("tabindex")||"",10);return isNaN(n)?-1:n}function Lf(i){let n=i.nodeName.toLowerCase(),e=n==="input"&&i.type;return e==="text"||e==="password"||n==="select"||n==="textarea"}function zf(i){return Pf(i)?!1:Ff(i)||Bf(i)||i.hasAttribute("contenteditable")||bd(i)}function jf(i){return i.ownerDocument&&i.ownerDocument.defaultView||window}var os=class{get enabled(){return this._enabled}set enabled(n){this._enabled=n,this._startAnchor&&this._endAnchor&&(this._toggleAnchorTabIndex(n,this._startAnchor),this._toggleAnchorTabIndex(n,this._endAnchor))}constructor(n,e,t,o,a=!1,r){this._element=n,this._checker=e,this._ngZone=t,this._document=o,this._injector=r,this._hasAttached=!1,this.startAnchorListener=()=>this.focusLastTabbableElement(),this.endAnchorListener=()=>this.focusFirstTabbableElement(),this._enabled=!0,a||this.attachAnchors()}destroy(){let n=this._startAnchor,e=this._endAnchor;n&&(n.removeEventListener("focus",this.startAnchorListener),n.remove()),e&&(e.removeEventListener("focus",this.endAnchorListener),e.remove()),this._startAnchor=this._endAnchor=null,this._hasAttached=!1}attachAnchors(){return this._hasAttached?!0:(this._ngZone.runOutsideAngular(()=>{this._startAnchor||(this._startAnchor=this._createAnchor(),this._startAnchor.addEventListener("focus",this.startAnchorListener)),this._endAnchor||(this._endAnchor=this._createAnchor(),this._endAnchor.addEventListener("focus",this.endAnchorListener))}),this._element.parentNode&&(this._element.parentNode.insertBefore(this._startAnchor,this._element),this._element.parentNode.insertBefore(this._endAnchor,this._element.nextSibling),this._hasAttached=!0),this._hasAttached)}focusInitialElementWhenReady(n){return new Promise(e=>{this._executeOnStable(()=>e(this.focusInitialElement(n)))})}focusFirstTabbableElementWhenReady(n){return new Promise(e=>{this._executeOnStable(()=>e(this.focusFirstTabbableElement(n)))})}focusLastTabbableElementWhenReady(n){return new Promise(e=>{this._executeOnStable(()=>e(this.focusLastTabbableElement(n)))})}_getRegionBoundary(n){let e=this._element.querySelectorAll(`[cdk-focus-region-${n}], [cdkFocusRegion${n}], [cdk-focus-${n}]`);return n=="start"?e.length?e[0]:this._getFirstTabbableElement(this._element):e.length?e[e.length-1]:this._getLastTabbableElement(this._element)}focusInitialElement(n){let e=this._element.querySelector("[cdk-focus-initial], [cdkFocusInitial]");if(e){if(!this._checker.isFocusable(e)){let t=this._getFirstTabbableElement(e);return t?.focus(n),!!t}return e.focus(n),!0}return this.focusFirstTabbableElement(n)}focusFirstTabbableElement(n){let e=this._getRegionBoundary("start");return e&&e.focus(n),!!e}focusLastTabbableElement(n){let e=this._getRegionBoundary("end");return e&&e.focus(n),!!e}hasAttached(){return this._hasAttached}_getFirstTabbableElement(n){if(this._checker.isFocusable(n)&&this._checker.isTabbable(n))return n;let e=n.children;for(let t=0;t<e.length;t++){let o=e[t].nodeType===this._document.ELEMENT_NODE?this._getFirstTabbableElement(e[t]):null;if(o)return o}return null}_getLastTabbableElement(n){if(this._checker.isFocusable(n)&&this._checker.isTabbable(n))return n;let e=n.children;for(let t=e.length-1;t>=0;t--){let o=e[t].nodeType===this._document.ELEMENT_NODE?this._getLastTabbableElement(e[t]):null;if(o)return o}return null}_createAnchor(){let n=this._document.createElement("div");return this._toggleAnchorTabIndex(this._enabled,n),n.classList.add("cdk-visually-hidden"),n.classList.add("cdk-focus-trap-anchor"),n.setAttribute("aria-hidden","true"),n}_toggleAnchorTabIndex(n,e){n?e.setAttribute("tabindex","0"):e.removeAttribute("tabindex")}toggleAnchors(n){this._startAnchor&&this._endAnchor&&(this._toggleAnchorTabIndex(n,this._startAnchor),this._toggleAnchorTabIndex(n,this._endAnchor))}_executeOnStable(n){this._injector?Fe(n,{injector:this._injector}):setTimeout(n)}},yd=(()=>{class i{constructor(e,t,o){this._checker=e,this._ngZone=t,this._injector=b(xe),this._document=o}create(e,t=!1){return new os(e,this._checker,this._ngZone,this._document,t,this._injector)}static{this.\u0275fac=function(t){return new(t||i)(p(ls),p(I),p(L))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();function cs(i){return i.buttons===0||i.detail===0}function ds(i){let n=i.touches&&i.touches[0]||i.changedTouches&&i.changedTouches[0];return!!n&&n.identifier===-1&&(n.radiusX==null||n.radiusX===1)&&(n.radiusY==null||n.radiusY===1)}var Wf=new w("cdk-input-modality-detector-options"),Uf={ignoreKeys:[18,17,224,91,16]},_d=650,Ki=Bt({passive:!0,capture:!0}),Vf=(()=>{class i{get mostRecentModality(){return this._modality.value}constructor(e,t,o,a){this._platform=e,this._mostRecentTarget=null,this._modality=new Ee(null),this._lastTouchMs=0,this._onKeydown=r=>{this._options?.ignoreKeys?.some(s=>s===r.keyCode)||(this._modality.next("keyboard"),this._mostRecentTarget=Ne(r))},this._onMousedown=r=>{Date.now()-this._lastTouchMs<_d||(this._modality.next(cs(r)?"keyboard":"mouse"),this._mostRecentTarget=Ne(r))},this._onTouchstart=r=>{if(ds(r)){this._modality.next("keyboard");return}this._lastTouchMs=Date.now(),this._modality.next("touch"),this._mostRecentTarget=Ne(r)},this._options=_(_({},Uf),a),this.modalityDetected=this._modality.pipe(fo(1)),this.modalityChanged=this.modalityDetected.pipe(cn()),e.isBrowser&&t.runOutsideAngular(()=>{o.addEventListener("keydown",this._onKeydown,Ki),o.addEventListener("mousedown",this._onMousedown,Ki),o.addEventListener("touchstart",this._onTouchstart,Ki)})}ngOnDestroy(){this._modality.complete(),this._platform.isBrowser&&(document.removeEventListener("keydown",this._onKeydown,Ki),document.removeEventListener("mousedown",this._onMousedown,Ki),document.removeEventListener("touchstart",this._onTouchstart,Ki))}static{this.\u0275fac=function(t){return new(t||i)(p(se),p(I),p(L),p(Wf,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Gf=new w("liveAnnouncerElement",{providedIn:"root",factory:Yf});function Yf(){return null}var Kf=new w("LIVE_ANNOUNCER_DEFAULT_OPTIONS"),Zf=0,vd=(()=>{class i{constructor(e,t,o,a){this._ngZone=t,this._defaultOptions=a,this._document=o,this._liveElement=e||this._createLiveElement()}announce(e,...t){let o=this._defaultOptions,a,r;return t.length===1&&typeof t[0]=="number"?r=t[0]:[a,r]=t,this.clear(),clearTimeout(this._previousTimeout),a||(a=o&&o.politeness?o.politeness:"polite"),r==null&&o&&(r=o.duration),this._liveElement.setAttribute("aria-live",a),this._liveElement.id&&this._exposeAnnouncerToModals(this._liveElement.id),this._ngZone.runOutsideAngular(()=>(this._currentPromise||(this._currentPromise=new Promise(s=>this._currentResolve=s)),clearTimeout(this._previousTimeout),this._previousTimeout=setTimeout(()=>{this._liveElement.textContent=e,typeof r=="number"&&(this._previousTimeout=setTimeout(()=>this.clear(),r)),this._currentResolve?.(),this._currentPromise=this._currentResolve=void 0},100),this._currentPromise))}clear(){this._liveElement&&(this._liveElement.textContent="")}ngOnDestroy(){clearTimeout(this._previousTimeout),this._liveElement?.remove(),this._liveElement=null,this._currentResolve?.(),this._currentPromise=this._currentResolve=void 0}_createLiveElement(){let e="cdk-live-announcer-element",t=this._document.getElementsByClassName(e),o=this._document.createElement("div");for(let a=0;a<t.length;a++)t[a].remove();return o.classList.add(e),o.classList.add("cdk-visually-hidden"),o.setAttribute("aria-atomic","true"),o.setAttribute("aria-live","polite"),o.id=`cdk-live-announcer-${Zf++}`,this._document.body.appendChild(o),o}_exposeAnnouncerToModals(e){let t=this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal="true"]');for(let o=0;o<t.length;o++){let a=t[o],r=a.getAttribute("aria-owns");r?r.indexOf(e)===-1&&a.setAttribute("aria-owns",r+" "+e):a.setAttribute("aria-owns",e)}}static{this.\u0275fac=function(t){return new(t||i)(p(Gf,8),p(I),p(L),p(Kf,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var Zo=function(i){return i[i.IMMEDIATE=0]="IMMEDIATE",i[i.EVENTUAL=1]="EVENTUAL",i}(Zo||{}),$f=new w("cdk-focus-monitor-default-options"),Ko=Bt({passive:!0,capture:!0}),pi=(()=>{class i{constructor(e,t,o,a,r){this._ngZone=e,this._platform=t,this._inputModalityDetector=o,this._origin=null,this._windowFocused=!1,this._originFromTouchInteraction=!1,this._elementInfo=new Map,this._monitoredElementCount=0,this._rootNodeFocusListenerCount=new Map,this._windowFocusListener=()=>{this._windowFocused=!0,this._windowFocusTimeoutId=window.setTimeout(()=>this._windowFocused=!1)},this._stopInputModalityDetector=new D,this._rootNodeFocusAndBlurListener=s=>{let l=Ne(s);for(let d=l;d;d=d.parentElement)s.type==="focus"?this._onFocus(s,d):this._onBlur(s,d)},this._document=a,this._detectionMode=r?.detectionMode||Zo.IMMEDIATE}monitor(e,t=!1){let o=it(e);if(!this._platform.isBrowser||o.nodeType!==1)return T();let a=sd(o)||this._getDocument(),r=this._elementInfo.get(o);if(r)return t&&(r.checkChildren=!0),r.subject;let s={checkChildren:t,subject:new D,rootNode:a};return this._elementInfo.set(o,s),this._registerGlobalListeners(s),s.subject}stopMonitoring(e){let t=it(e),o=this._elementInfo.get(t);o&&(o.subject.complete(),this._setClasses(t),this._elementInfo.delete(t),this._removeGlobalListeners(o))}focusVia(e,t,o){let a=it(e),r=this._getDocument().activeElement;a===r?this._getClosestElementsInfo(a).forEach(([s,l])=>this._originChanged(s,t,l)):(this._setOrigin(t),typeof a.focus=="function"&&a.focus(o))}ngOnDestroy(){this._elementInfo.forEach((e,t)=>this.stopMonitoring(t))}_getDocument(){return this._document||document}_getWindow(){return this._getDocument().defaultView||window}_getFocusOrigin(e){return this._origin?this._originFromTouchInteraction?this._shouldBeAttributedToTouch(e)?"touch":"program":this._origin:this._windowFocused&&this._lastFocusOrigin?this._lastFocusOrigin:e&&this._isLastInteractionFromInputLabel(e)?"mouse":"program"}_shouldBeAttributedToTouch(e){return this._detectionMode===Zo.EVENTUAL||!!e?.contains(this._inputModalityDetector._mostRecentTarget)}_setClasses(e,t){e.classList.toggle("cdk-focused",!!t),e.classList.toggle("cdk-touch-focused",t==="touch"),e.classList.toggle("cdk-keyboard-focused",t==="keyboard"),e.classList.toggle("cdk-mouse-focused",t==="mouse"),e.classList.toggle("cdk-program-focused",t==="program")}_setOrigin(e,t=!1){this._ngZone.runOutsideAngular(()=>{if(this._origin=e,this._originFromTouchInteraction=e==="touch"&&t,this._detectionMode===Zo.IMMEDIATE){clearTimeout(this._originTimeoutId);let o=this._originFromTouchInteraction?_d:1;this._originTimeoutId=setTimeout(()=>this._origin=null,o)}})}_onFocus(e,t){let o=this._elementInfo.get(t),a=Ne(e);!o||!o.checkChildren&&t!==a||this._originChanged(t,this._getFocusOrigin(a),o)}_onBlur(e,t){let o=this._elementInfo.get(t);!o||o.checkChildren&&e.relatedTarget instanceof Node&&t.contains(e.relatedTarget)||(this._setClasses(t),this._emitOrigin(o,null))}_emitOrigin(e,t){e.subject.observers.length&&this._ngZone.run(()=>e.subject.next(t))}_registerGlobalListeners(e){if(!this._platform.isBrowser)return;let t=e.rootNode,o=this._rootNodeFocusListenerCount.get(t)||0;o||this._ngZone.runOutsideAngular(()=>{t.addEventListener("focus",this._rootNodeFocusAndBlurListener,Ko),t.addEventListener("blur",this._rootNodeFocusAndBlurListener,Ko)}),this._rootNodeFocusListenerCount.set(t,o+1),++this._monitoredElementCount===1&&(this._ngZone.runOutsideAngular(()=>{this._getWindow().addEventListener("focus",this._windowFocusListener)}),this._inputModalityDetector.modalityDetected.pipe(j(this._stopInputModalityDetector)).subscribe(a=>{this._setOrigin(a,!0)}))}_removeGlobalListeners(e){let t=e.rootNode;if(this._rootNodeFocusListenerCount.has(t)){let o=this._rootNodeFocusListenerCount.get(t);o>1?this._rootNodeFocusListenerCount.set(t,o-1):(t.removeEventListener("focus",this._rootNodeFocusAndBlurListener,Ko),t.removeEventListener("blur",this._rootNodeFocusAndBlurListener,Ko),this._rootNodeFocusListenerCount.delete(t))}--this._monitoredElementCount||(this._getWindow().removeEventListener("focus",this._windowFocusListener),this._stopInputModalityDetector.next(),clearTimeout(this._windowFocusTimeoutId),clearTimeout(this._originTimeoutId))}_originChanged(e,t,o){this._setClasses(e,t),this._emitOrigin(o,t),this._lastFocusOrigin=t}_getClosestElementsInfo(e){let t=[];return this._elementInfo.forEach((o,a)=>{(a===e||o.checkChildren&&a.contains(e))&&t.push([a,o])}),t}_isLastInteractionFromInputLabel(e){let{_mostRecentTarget:t,mostRecentModality:o}=this._inputModalityDetector;if(o!=="mouse"||!t||t===e||e.nodeName!=="INPUT"&&e.nodeName!=="TEXTAREA"||e.disabled)return!1;let a=e.labels;if(a){for(let r=0;r<a.length;r++)if(a[r].contains(t))return!0}return!1}static{this.\u0275fac=function(t){return new(t||i)(p(I),p(se),p(Vf),p(L,8),p($f,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var ui=function(i){return i[i.NONE=0]="NONE",i[i.BLACK_ON_WHITE=1]="BLACK_ON_WHITE",i[i.WHITE_ON_BLACK=2]="WHITE_ON_BLACK",i}(ui||{}),md="cdk-high-contrast-black-on-white",pd="cdk-high-contrast-white-on-black",is="cdk-high-contrast-active",wd=(()=>{class i{constructor(e,t){this._platform=e,this._document=t,this._breakpointSubscription=b(Yo).observe("(forced-colors: active)").subscribe(()=>{this._hasCheckedHighContrastMode&&(this._hasCheckedHighContrastMode=!1,this._applyBodyHighContrastModeCssClasses())})}getHighContrastMode(){if(!this._platform.isBrowser)return ui.NONE;let e=this._document.createElement("div");e.style.backgroundColor="rgb(1,2,3)",e.style.position="absolute",this._document.body.appendChild(e);let t=this._document.defaultView||window,o=t&&t.getComputedStyle?t.getComputedStyle(e):null,a=(o&&o.backgroundColor||"").replace(/ /g,"");switch(e.remove(),a){case"rgb(0,0,0)":case"rgb(45,50,54)":case"rgb(32,32,32)":return ui.WHITE_ON_BLACK;case"rgb(255,255,255)":case"rgb(255,250,239)":return ui.BLACK_ON_WHITE}return ui.NONE}ngOnDestroy(){this._breakpointSubscription.unsubscribe()}_applyBodyHighContrastModeCssClasses(){if(!this._hasCheckedHighContrastMode&&this._platform.isBrowser&&this._document.body){let e=this._document.body.classList;e.remove(is,md,pd),this._hasCheckedHighContrastMode=!0;let t=this.getHighContrastMode();t===ui.BLACK_ON_WHITE?e.add(is,md):t===ui.WHITE_ON_BLACK&&e.add(is,pd)}}static{this.\u0275fac=function(t){return new(t||i)(p(se),p(L))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var Jf=["text"],Qf=[[["mat-icon"]],"*"],Xf=["mat-icon","*"];function eg(i,n){if(i&1&&ae(0,"mat-pseudo-checkbox",1),i&2){let e=ie();F("disabled",e.disabled)("state",e.selected?"checked":"unchecked")}}function tg(i,n){if(i&1&&ae(0,"mat-pseudo-checkbox",3),i&2){let e=ie();F("disabled",e.disabled)}}function ig(i,n){if(i&1&&(m(0,"span",4),te(1),f()),i&2){let e=ie();g(),Pe("(",e.group.label,")")}}var ng=["mat-internal-form-field",""],og=["*"];function ag(){return!0}var rg=new w("mat-sanity-checks",{providedIn:"root",factory:ag}),ne=(()=>{class i{constructor(e,t,o){this._sanityChecks=t,this._document=o,this._hasDoneGlobalChecks=!1,e._applyBodyHighContrastModeCssClasses(),this._hasDoneGlobalChecks||(this._hasDoneGlobalChecks=!0)}_checkIsEnabled(e){return Wn()?!1:typeof this._sanityChecks=="boolean"?this._sanityChecks:!!this._sanityChecks[e]}static{this.\u0275fac=function(t){return new(t||i)(p(wd),p(rg,8),p(L))}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[Nt,Nt]})}}return i})();var zt=class{constructor(n,e,t,o,a){this._defaultMatcher=n,this.ngControl=e,this._parentFormGroup=t,this._parentForm=o,this._stateChanges=a,this.errorState=!1}updateErrorState(){let n=this.errorState,e=this._parentFormGroup||this._parentForm,t=this.matcher||this._defaultMatcher,o=this.ngControl?this.ngControl.control:null,a=t?.isErrorState(o,e)??!1;a!==n&&(this.errorState=a,this._stateChanges.next())}};var jt=(()=>{class i{isErrorState(e,t){return!!(e&&e.invalid&&(e.touched||t&&t.submitted))}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var ot=function(i){return i[i.FADING_IN=0]="FADING_IN",i[i.VISIBLE=1]="VISIBLE",i[i.FADING_OUT=2]="FADING_OUT",i[i.HIDDEN=3]="HIDDEN",i}(ot||{}),ms=class{constructor(n,e,t,o=!1){this._renderer=n,this.element=e,this.config=t,this._animationForciblyDisabledThroughCss=o,this.state=ot.HIDDEN}fadeOut(){this._renderer.fadeOutRipple(this)}},kd=Bt({passive:!0,capture:!0}),ps=class{constructor(){this._events=new Map,this._delegateEventHandler=n=>{let e=Ne(n);e&&this._events.get(n.type)?.forEach((t,o)=>{(o===e||o.contains(e))&&t.forEach(a=>a.handleEvent(n))})}}addHandler(n,e,t,o){let a=this._events.get(e);if(a){let r=a.get(t);r?r.add(o):a.set(t,new Set([o]))}else this._events.set(e,new Map([[t,new Set([o])]])),n.runOutsideAngular(()=>{document.addEventListener(e,this._delegateEventHandler,kd)})}removeHandler(n,e,t){let o=this._events.get(n);if(!o)return;let a=o.get(e);a&&(a.delete(t),a.size===0&&o.delete(e),o.size===0&&(this._events.delete(n),document.removeEventListener(n,this._delegateEventHandler,kd)))}},xd={enterDuration:225,exitDuration:150},sg=800,Cd=Bt({passive:!0,capture:!0}),Sd=["mousedown","touchstart"],Dd=["mouseup","mouseleave","touchend","touchcancel"],fs=class i{static{this._eventManager=new ps}constructor(n,e,t,o){this._target=n,this._ngZone=e,this._platform=o,this._isPointerDown=!1,this._activeRipples=new Map,this._pointerUpEventsRegistered=!1,o.isBrowser&&(this._containerElement=it(t))}fadeInRipple(n,e,t={}){let o=this._containerRect=this._containerRect||this._containerElement.getBoundingClientRect(),a=_(_({},xd),t.animation);t.centered&&(n=o.left+o.width/2,e=o.top+o.height/2);let r=t.radius||lg(n,e,o),s=n-o.left,l=e-o.top,d=a.enterDuration,h=document.createElement("div");h.classList.add("mat-ripple-element"),h.style.left=`${s-r}px`,h.style.top=`${l-r}px`,h.style.height=`${r*2}px`,h.style.width=`${r*2}px`,t.color!=null&&(h.style.backgroundColor=t.color),h.style.transitionDuration=`${d}ms`,this._containerElement.appendChild(h);let u=window.getComputedStyle(h),v=u.transitionProperty,y=u.transitionDuration,O=v==="none"||y==="0s"||y==="0s, 0s"||o.width===0&&o.height===0,U=new ms(this,h,t,O);h.style.transform="scale3d(1, 1, 1)",U.state=ot.FADING_IN,t.persistent||(this._mostRecentTransientRipple=U);let K=null;return!O&&(d||a.exitDuration)&&this._ngZone.runOutsideAngular(()=>{let ue=()=>{K&&(K.fallbackTimer=null),clearTimeout(Kt),this._finishRippleTransition(U)},Et=()=>this._destroyRipple(U),Kt=setTimeout(Et,d+100);h.addEventListener("transitionend",ue),h.addEventListener("transitioncancel",Et),K={onTransitionEnd:ue,onTransitionCancel:Et,fallbackTimer:Kt}}),this._activeRipples.set(U,K),(O||!d)&&this._finishRippleTransition(U),U}fadeOutRipple(n){if(n.state===ot.FADING_OUT||n.state===ot.HIDDEN)return;let e=n.element,t=_(_({},xd),n.config.animation);e.style.transitionDuration=`${t.exitDuration}ms`,e.style.opacity="0",n.state=ot.FADING_OUT,(n._animationForciblyDisabledThroughCss||!t.exitDuration)&&this._finishRippleTransition(n)}fadeOutAll(){this._getActiveRipples().forEach(n=>n.fadeOut())}fadeOutAllNonPersistent(){this._getActiveRipples().forEach(n=>{n.config.persistent||n.fadeOut()})}setupTriggerEvents(n){let e=it(n);!this._platform.isBrowser||!e||e===this._triggerElement||(this._removeTriggerEvents(),this._triggerElement=e,Sd.forEach(t=>{i._eventManager.addHandler(this._ngZone,t,e,this)}))}handleEvent(n){n.type==="mousedown"?this._onMousedown(n):n.type==="touchstart"?this._onTouchStart(n):this._onPointerUp(),this._pointerUpEventsRegistered||(this._ngZone.runOutsideAngular(()=>{Dd.forEach(e=>{this._triggerElement.addEventListener(e,this,Cd)})}),this._pointerUpEventsRegistered=!0)}_finishRippleTransition(n){n.state===ot.FADING_IN?this._startFadeOutTransition(n):n.state===ot.FADING_OUT&&this._destroyRipple(n)}_startFadeOutTransition(n){let e=n===this._mostRecentTransientRipple,{persistent:t}=n.config;n.state=ot.VISIBLE,!t&&(!e||!this._isPointerDown)&&n.fadeOut()}_destroyRipple(n){let e=this._activeRipples.get(n)??null;this._activeRipples.delete(n),this._activeRipples.size||(this._containerRect=null),n===this._mostRecentTransientRipple&&(this._mostRecentTransientRipple=null),n.state=ot.HIDDEN,e!==null&&(n.element.removeEventListener("transitionend",e.onTransitionEnd),n.element.removeEventListener("transitioncancel",e.onTransitionCancel),e.fallbackTimer!==null&&clearTimeout(e.fallbackTimer)),n.element.remove()}_onMousedown(n){let e=cs(n),t=this._lastTouchStartEvent&&Date.now()<this._lastTouchStartEvent+sg;!this._target.rippleDisabled&&!e&&!t&&(this._isPointerDown=!0,this.fadeInRipple(n.clientX,n.clientY,this._target.rippleConfig))}_onTouchStart(n){if(!this._target.rippleDisabled&&!ds(n)){this._lastTouchStartEvent=Date.now(),this._isPointerDown=!0;let e=n.changedTouches;if(e)for(let t=0;t<e.length;t++)this.fadeInRipple(e[t].clientX,e[t].clientY,this._target.rippleConfig)}}_onPointerUp(){this._isPointerDown&&(this._isPointerDown=!1,this._getActiveRipples().forEach(n=>{let e=n.state===ot.VISIBLE||n.config.terminateOnPointerUp&&n.state===ot.FADING_IN;!n.config.persistent&&e&&n.fadeOut()}))}_getActiveRipples(){return Array.from(this._activeRipples.keys())}_removeTriggerEvents(){let n=this._triggerElement;n&&(Sd.forEach(e=>i._eventManager.removeHandler(e,n,this)),this._pointerUpEventsRegistered&&(Dd.forEach(e=>n.removeEventListener(e,this,Cd)),this._pointerUpEventsRegistered=!1))}};function lg(i,n,e){let t=Math.max(Math.abs(i-e.left),Math.abs(i-e.right)),o=Math.max(Math.abs(n-e.top),Math.abs(n-e.bottom));return Math.sqrt(t*t+o*o)}var $n=new w("mat-ripple-global-options"),Jn=(()=>{class i{get disabled(){return this._disabled}set disabled(e){e&&this.fadeOutAllNonPersistent(),this._disabled=e,this._setupTriggerEventsIfEnabled()}get trigger(){return this._trigger||this._elementRef.nativeElement}set trigger(e){this._trigger=e,this._setupTriggerEventsIfEnabled()}constructor(e,t,o,a,r){this._elementRef=e,this._animationMode=r,this.radius=0,this._disabled=!1,this._isInitialized=!1,this._globalOptions=a||{},this._rippleRenderer=new fs(this,t,e,o)}ngOnInit(){this._isInitialized=!0,this._setupTriggerEventsIfEnabled()}ngOnDestroy(){this._rippleRenderer._removeTriggerEvents()}fadeOutAll(){this._rippleRenderer.fadeOutAll()}fadeOutAllNonPersistent(){this._rippleRenderer.fadeOutAllNonPersistent()}get rippleConfig(){return{centered:this.centered,radius:this.radius,color:this.color,animation:_(_(_({},this._globalOptions.animation),this._animationMode==="NoopAnimations"?{enterDuration:0,exitDuration:0}:{}),this.animation),terminateOnPointerUp:this._globalOptions.terminateOnPointerUp}}get rippleDisabled(){return this.disabled||!!this._globalOptions.disabled}_setupTriggerEventsIfEnabled(){!this.disabled&&this._isInitialized&&this._rippleRenderer.setupTriggerEvents(this.trigger)}launch(e,t=0,o){return typeof e=="number"?this._rippleRenderer.fadeInRipple(e,t,_(_({},this.rippleConfig),o)):this._rippleRenderer.fadeInRipple(0,0,_(_({},this.rippleConfig),e))}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(I),c(se),c($n,8),c(Se,8))}}static{this.\u0275dir=k({type:i,selectors:[["","mat-ripple",""],["","matRipple",""]],hostAttrs:[1,"mat-ripple"],hostVars:2,hostBindings:function(t,o){t&2&&z("mat-ripple-unbounded",o.unbounded)},inputs:{color:[0,"matRippleColor","color"],unbounded:[0,"matRippleUnbounded","unbounded"],centered:[0,"matRippleCentered","centered"],radius:[0,"matRippleRadius","radius"],animation:[0,"matRippleAnimation","animation"],disabled:[0,"matRippleDisabled","disabled"],trigger:[0,"matRippleTrigger","trigger"]},exportAs:["matRipple"],standalone:!0})}}return i})(),Qn=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[ne,ne]})}}return i})(),cg=(()=>{class i{constructor(e){this._animationMode=e,this.state="unchecked",this.disabled=!1,this.appearance="full"}static{this.\u0275fac=function(t){return new(t||i)(c(Se,8))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-pseudo-checkbox"]],hostAttrs:[1,"mat-pseudo-checkbox"],hostVars:12,hostBindings:function(t,o){t&2&&z("mat-pseudo-checkbox-indeterminate",o.state==="indeterminate")("mat-pseudo-checkbox-checked",o.state==="checked")("mat-pseudo-checkbox-disabled",o.disabled)("mat-pseudo-checkbox-minimal",o.appearance==="minimal")("mat-pseudo-checkbox-full",o.appearance==="full")("_mat-animation-noopable",o._animationMode==="NoopAnimations")},inputs:{state:"state",disabled:"disabled",appearance:"appearance"},standalone:!0,features:[G],decls:0,vars:0,template:function(t,o){},styles:['.mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-minimal-pseudo-checkbox-selected-checkmark-color, var(--mat-app-primary))}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox-full{border-color:var(--mat-full-pseudo-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-full-pseudo-checkbox-disabled-unselected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-full-pseudo-checkbox-selected-icon-color, var(--mat-app-primary));border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-full-pseudo-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-full-pseudo-checkbox-disabled-selected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-full-pseudo-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}'],encapsulation:2,changeDetection:0})}}return i})(),dg=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[ne]})}}return i})(),Xn=new w("MAT_OPTION_PARENT_COMPONENT");var eo=new w("MatOptgroup");var hg=0,Zn=class{constructor(n,e=!1){this.source=n,this.isUserInput=e}},$i=(()=>{class i{get multiple(){return this._parent&&this._parent.multiple}get selected(){return this._selected}get disabled(){return this.group&&this.group.disabled||this._disabled}set disabled(e){this._disabled=e}get disableRipple(){return!!(this._parent&&this._parent.disableRipple)}get hideSingleSelectionIndicator(){return!!(this._parent&&this._parent.hideSingleSelectionIndicator)}constructor(e,t,o,a){this._element=e,this._changeDetectorRef=t,this._parent=o,this.group=a,this._selected=!1,this._active=!1,this._disabled=!1,this._mostRecentViewValue="",this.id=`mat-option-${hg++}`,this.onSelectionChange=new N,this._stateChanges=new D}get active(){return this._active}get viewValue(){return(this._text?.nativeElement.textContent||"").trim()}select(e=!0){this._selected||(this._selected=!0,this._changeDetectorRef.markForCheck(),e&&this._emitSelectionChangeEvent())}deselect(e=!0){this._selected&&(this._selected=!1,this._changeDetectorRef.markForCheck(),e&&this._emitSelectionChangeEvent())}focus(e,t){let o=this._getHostElement();typeof o.focus=="function"&&o.focus(t)}setActiveStyles(){this._active||(this._active=!0,this._changeDetectorRef.markForCheck())}setInactiveStyles(){this._active&&(this._active=!1,this._changeDetectorRef.markForCheck())}getLabel(){return this.viewValue}_handleKeydown(e){(e.keyCode===13||e.keyCode===32)&&!Me(e)&&(this._selectViaInteraction(),e.preventDefault())}_selectViaInteraction(){this.disabled||(this._selected=this.multiple?!this._selected:!0,this._changeDetectorRef.markForCheck(),this._emitSelectionChangeEvent(!0))}_getTabIndex(){return this.disabled?"-1":"0"}_getHostElement(){return this._element.nativeElement}ngAfterViewChecked(){if(this._selected){let e=this.viewValue;e!==this._mostRecentViewValue&&(this._mostRecentViewValue&&this._stateChanges.next(),this._mostRecentViewValue=e)}}ngOnDestroy(){this._stateChanges.complete()}_emitSelectionChangeEvent(e=!1){this.onSelectionChange.emit(new Zn(this,e))}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(de),c(Xn,8),c(eo,8))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-option"]],viewQuery:function(t,o){if(t&1&&oe(Jf,7),t&2){let a;x(a=C())&&(o._text=a.first)}},hostAttrs:["role","option",1,"mat-mdc-option","mdc-list-item"],hostVars:11,hostBindings:function(t,o){t&1&&H("click",function(){return o._selectViaInteraction()})("keydown",function(r){return o._handleKeydown(r)}),t&2&&(Je("id",o.id),X("aria-selected",o.selected)("aria-disabled",o.disabled.toString()),z("mdc-list-item--selected",o.selected)("mat-mdc-option-multiple",o.multiple)("mat-mdc-option-active",o.active)("mdc-list-item--disabled",o.disabled))},inputs:{value:"value",id:"id",disabled:[2,"disabled","disabled",M]},outputs:{onSelectionChange:"onSelectionChange"},exportAs:["matOption"],standalone:!0,features:[le,G],ngContentSelectors:Xf,decls:8,vars:5,consts:[["text",""],["aria-hidden","true",1,"mat-mdc-option-pseudo-checkbox",3,"disabled","state"],[1,"mdc-list-item__primary-text"],["state","checked","aria-hidden","true","appearance","minimal",1,"mat-mdc-option-pseudo-checkbox",3,"disabled"],[1,"cdk-visually-hidden"],["aria-hidden","true","mat-ripple","",1,"mat-mdc-option-ripple","mat-mdc-focus-indicator",3,"matRippleTrigger","matRippleDisabled"]],template:function(t,o){t&1&&(re(Qf),R(0,eg,1,2,"mat-pseudo-checkbox",1),q(1),m(2,"span",2,0),q(4,1),f(),R(5,tg,1,1,"mat-pseudo-checkbox",3)(6,ig,2,1,"span",4),ae(7,"div",5)),t&2&&($(o.multiple?0:-1),g(5),$(!o.multiple&&o.selected&&!o.hideSingleSelectionIndicator?5:-1),g(),$(o.group&&o.group._inert?6:-1),g(),F("matRippleTrigger",o._getHostElement())("matRippleDisabled",o.disabled||o.disableRipple))},dependencies:[cg,Jn],styles:['.mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-app-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-app-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-app-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-app-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color);outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-app-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:""}'],encapsulation:2,changeDetection:0})}}return i})();function ea(i,n,e){if(e.length){let t=n.toArray(),o=e.toArray(),a=0;for(let r=0;r<i+1;r++)t[r].group&&t[r].group===o[a]&&a++;return a}return 0}function ta(i,n,e,t){return i<e?i:i+n>e+t?Math.max(0,i-t+n):e}var Ji=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[Qn,ne,dg]})}}return i})(),Id={capture:!0},Ad=["focus","mousedown","mouseenter","touchstart"],hs="mat-ripple-loader-uninitialized",us="mat-ripple-loader-class-name",Md="mat-ripple-loader-centered",Xo="mat-ripple-loader-disabled",ia=(()=>{class i{constructor(){this._document=b(L,{optional:!0}),this._animationMode=b(Se,{optional:!0}),this._globalRippleOptions=b($n,{optional:!0}),this._platform=b(se),this._ngZone=b(I),this._hosts=new Map,this._onInteraction=e=>{let t=Ne(e);if(t instanceof HTMLElement){let o=t.closest(`[${hs}="${this._globalRippleOptions?.namespace??""}"]`);o&&this._createRipple(o)}},this._ngZone.runOutsideAngular(()=>{for(let e of Ad)this._document?.addEventListener(e,this._onInteraction,Id)})}ngOnDestroy(){let e=this._hosts.keys();for(let t of e)this.destroyRipple(t);for(let t of Ad)this._document?.removeEventListener(t,this._onInteraction,Id)}configureRipple(e,t){e.setAttribute(hs,this._globalRippleOptions?.namespace??""),(t.className||!e.hasAttribute(us))&&e.setAttribute(us,t.className||""),t.centered&&e.setAttribute(Md,""),t.disabled&&e.setAttribute(Xo,"")}getRipple(e){return this._hosts.get(e)||this._createRipple(e)}setDisabled(e,t){let o=this._hosts.get(e);if(o){o.disabled=t;return}t?e.setAttribute(Xo,""):e.removeAttribute(Xo)}_createRipple(e){if(!this._document)return;let t=this._hosts.get(e);if(t)return t;e.querySelector(".mat-ripple")?.remove();let o=this._document.createElement("span");o.classList.add("mat-ripple",e.getAttribute(us)),e.append(o);let a=new Jn(new A(o),this._ngZone,this._platform,this._globalRippleOptions?this._globalRippleOptions:void 0,this._animationMode?this._animationMode:void 0);return a._isInitialized=!0,a.trigger=e,a.centered=e.hasAttribute(Md),a.disabled=e.hasAttribute(Xo),this.attachRipple(e,a),a}attachRipple(e,t){e.removeAttribute(hs),this._hosts.set(e,t)}destroyRipple(e){let t=this._hosts.get(e);t&&(t.ngOnDestroy(),this._hosts.delete(e))}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Td=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275cmp=V({type:i,selectors:[["div","mat-internal-form-field",""]],hostAttrs:[1,"mdc-form-field","mat-internal-form-field"],hostVars:2,hostBindings:function(t,o){t&2&&z("mdc-form-field--align-end",o.labelPosition==="before")},inputs:{labelPosition:"labelPosition"},standalone:!0,features:[G],attrs:ng,ngContentSelectors:og,decls:1,vars:0,template:function(t,o){t&1&&(re(),q(0))},styles:[".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}"],encapsulation:2,changeDetection:0})}}return i})();var ra=["*"],ug=["content"],mg=[[["mat-drawer"]],[["mat-drawer-content"]],"*"],pg=["mat-drawer","mat-drawer-content","*"];function fg(i,n){if(i&1){let e=Ie();m(0,"div",1),H("click",function(){J(e);let o=ie();return Q(o._onBackdropClicked())}),f()}if(i&2){let e=ie();z("mat-drawer-shown",e._isShowingBackdrop())}}function gg(i,n){i&1&&(m(0,"mat-drawer-content"),q(1,2),f())}var bg=[[["mat-sidenav"]],[["mat-sidenav-content"]],"*"],yg=["mat-sidenav","mat-sidenav-content","*"];function _g(i,n){if(i&1){let e=Ie();m(0,"div",1),H("click",function(){J(e);let o=ie();return Q(o._onBackdropClicked())}),f()}if(i&2){let e=ie();z("mat-drawer-shown",e._isShowingBackdrop())}}function vg(i,n){i&1&&(m(0,"mat-sidenav-content"),q(1,2),f())}var wg='.mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-app-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-app-background));box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-app-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color, var(--mat-app-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',Ed={transformDrawer:xt("transform",[Ct("open, open-instant",Be({transform:"none",visibility:"visible"})),Ct("void",Be({"box-shadow":"none",visibility:"hidden"})),et("void => open-instant",Xe("0ms")),et("void <=> open, open-instant => void",Xe("400ms cubic-bezier(0.25, 0.8, 0.25, 1)"))])};var kg=new w("MAT_DRAWER_DEFAULT_AUTOSIZE",{providedIn:"root",factory:xg}),gs=new w("MAT_DRAWER_CONTAINER");function xg(){return!1}var oa=(()=>{class i extends Yi{constructor(e,t,o,a,r){super(o,a,r),this._changeDetectorRef=e,this._container=t}ngAfterContentInit(){this._container._contentMarginChanges.subscribe(()=>{this._changeDetectorRef.markForCheck()})}static{this.\u0275fac=function(t){return new(t||i)(c(de),c(Le(()=>qd)),c(A),c(Gi),c(I))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-drawer-content"]],hostAttrs:[1,"mat-drawer-content"],hostVars:4,hostBindings:function(t,o){t&2&&oi("margin-left",o._container._contentMargins.left,"px")("margin-right",o._container._contentMargins.right,"px")},standalone:!0,features:[W([{provide:Yi,useExisting:i}]),Z,G],ngContentSelectors:ra,decls:1,vars:0,template:function(t,o){t&1&&(re(),q(0))},encapsulation:2,changeDetection:0})}}return i})(),Rd=(()=>{class i{get position(){return this._position}set position(e){e=e==="end"?"end":"start",e!==this._position&&(this._isAttached&&this._updatePositionInParent(e),this._position=e,this.onPositionChanged.emit())}get mode(){return this._mode}set mode(e){this._mode=e,this._updateFocusTrapState(),this._modeChanged.next()}get disableClose(){return this._disableClose}set disableClose(e){this._disableClose=We(e)}get autoFocus(){let e=this._autoFocus;return e??(this.mode==="side"?"dialog":"first-tabbable")}set autoFocus(e){(e==="true"||e==="false"||e==null)&&(e=We(e)),this._autoFocus=e}get opened(){return this._opened}set opened(e){this.toggle(We(e))}constructor(e,t,o,a,r,s,l,d){this._elementRef=e,this._focusTrapFactory=t,this._focusMonitor=o,this._platform=a,this._ngZone=r,this._interactivityChecker=s,this._doc=l,this._container=d,this._focusTrap=null,this._elementFocusedBeforeDrawerWasOpened=null,this._enableAnimations=!1,this._position="start",this._mode="over",this._disableClose=!1,this._opened=!1,this._animationStarted=new D,this._animationEnd=new D,this._animationState="void",this.openedChange=new N(!0),this._openedStream=this.openedChange.pipe(ce(h=>h),E(()=>{})),this.openedStart=this._animationStarted.pipe(ce(h=>h.fromState!==h.toState&&h.toState.indexOf("open")===0),ln(void 0)),this._closedStream=this.openedChange.pipe(ce(h=>!h),E(()=>{})),this.closedStart=this._animationStarted.pipe(ce(h=>h.fromState!==h.toState&&h.toState==="void"),ln(void 0)),this._destroyed=new D,this.onPositionChanged=new N,this._modeChanged=new D,this._injector=b(xe),this._changeDetectorRef=b(de),this.openedChange.pipe(j(this._destroyed)).subscribe(h=>{h?(this._doc&&(this._elementFocusedBeforeDrawerWasOpened=this._doc.activeElement),this._takeFocus()):this._isFocusWithinDrawer()&&this._restoreFocus(this._openedVia||"program")}),this._ngZone.runOutsideAngular(()=>{pt(this._elementRef.nativeElement,"keydown").pipe(ce(h=>h.keyCode===27&&!this.disableClose&&!Me(h)),j(this._destroyed)).subscribe(h=>this._ngZone.run(()=>{this.close(),h.stopPropagation(),h.preventDefault()}))}),this._animationEnd.subscribe(h=>{let{fromState:u,toState:v}=h;(v.indexOf("open")===0&&u==="void"||v==="void"&&u.indexOf("open")===0)&&this.openedChange.emit(this._opened)})}_forceFocus(e,t){this._interactivityChecker.isFocusable(e)||(e.tabIndex=-1,this._ngZone.runOutsideAngular(()=>{let o=()=>{e.removeEventListener("blur",o),e.removeEventListener("mousedown",o),e.removeAttribute("tabindex")};e.addEventListener("blur",o),e.addEventListener("mousedown",o)})),e.focus(t)}_focusByCssSelector(e,t){let o=this._elementRef.nativeElement.querySelector(e);o&&this._forceFocus(o,t)}_takeFocus(){if(!this._focusTrap)return;let e=this._elementRef.nativeElement;switch(this.autoFocus){case!1:case"dialog":return;case!0:case"first-tabbable":Fe(()=>{!this._focusTrap.focusInitialElement()&&typeof e.focus=="function"&&e.focus()},{injector:this._injector});break;case"first-heading":this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role="heading"]');break;default:this._focusByCssSelector(this.autoFocus);break}}_restoreFocus(e){this.autoFocus!=="dialog"&&(this._elementFocusedBeforeDrawerWasOpened?this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened,e):this._elementRef.nativeElement.blur(),this._elementFocusedBeforeDrawerWasOpened=null)}_isFocusWithinDrawer(){let e=this._doc.activeElement;return!!e&&this._elementRef.nativeElement.contains(e)}ngAfterViewInit(){this._isAttached=!0,this._position==="end"&&this._updatePositionInParent("end"),this._platform.isBrowser&&(this._focusTrap=this._focusTrapFactory.create(this._elementRef.nativeElement),this._updateFocusTrapState())}ngAfterContentChecked(){this._platform.isBrowser&&(this._enableAnimations=!0)}ngOnDestroy(){this._focusTrap?.destroy(),this._anchor?.remove(),this._anchor=null,this._animationStarted.complete(),this._animationEnd.complete(),this._modeChanged.complete(),this._destroyed.next(),this._destroyed.complete()}open(e){return this.toggle(!0,e)}close(){return this.toggle(!1)}_closeViaBackdropClick(){return this._setOpen(!1,!0,"mouse")}toggle(e=!this.opened,t){e&&t&&(this._openedVia=t);let o=this._setOpen(e,!e&&this._isFocusWithinDrawer(),this._openedVia||"program");return e||(this._openedVia=null),o}_setOpen(e,t,o){return this._opened=e,e?this._animationState=this._enableAnimations?"open":"open-instant":(this._animationState="void",t&&this._restoreFocus(o)),this._changeDetectorRef.markForCheck(),this._updateFocusTrapState(),new Promise(a=>{this.openedChange.pipe(De(1)).subscribe(r=>a(r?"open":"close"))})}_getWidth(){return this._elementRef.nativeElement&&this._elementRef.nativeElement.offsetWidth||0}_updateFocusTrapState(){this._focusTrap&&(this._focusTrap.enabled=!!this._container?.hasBackdrop&&this.opened)}_updatePositionInParent(e){if(!this._platform.isBrowser)return;let t=this._elementRef.nativeElement,o=t.parentNode;e==="end"?(this._anchor||(this._anchor=this._doc.createComment("mat-drawer-anchor"),o.insertBefore(this._anchor,t)),o.appendChild(t)):this._anchor&&this._anchor.parentNode.insertBefore(t,this._anchor)}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(yd),c(pi),c(se),c(I),c(ls),c(L,8),c(gs,8))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-drawer"]],viewQuery:function(t,o){if(t&1&&oe(ug,5),t&2){let a;x(a=C())&&(o._content=a.first)}},hostAttrs:["tabIndex","-1",1,"mat-drawer"],hostVars:12,hostBindings:function(t,o){t&1&&Pl("@transform.start",function(r){return o._animationStarted.next(r)})("@transform.done",function(r){return o._animationEnd.next(r)}),t&2&&(Fl("@transform",o._animationState),X("align",null),z("mat-drawer-end",o.position==="end")("mat-drawer-over",o.mode==="over")("mat-drawer-push",o.mode==="push")("mat-drawer-side",o.mode==="side")("mat-drawer-opened",o.opened))},inputs:{position:"position",mode:"mode",disableClose:"disableClose",autoFocus:"autoFocus",opened:"opened"},outputs:{openedChange:"openedChange",_openedStream:"opened",openedStart:"openedStart",_closedStream:"closed",closedStart:"closedStart",onPositionChanged:"positionChanged"},exportAs:["matDrawer"],standalone:!0,features:[G],ngContentSelectors:ra,decls:3,vars:0,consts:[["content",""],["cdkScrollable","",1,"mat-drawer-inner-container"]],template:function(t,o){t&1&&(re(),m(0,"div",1,0),q(2),f())},dependencies:[Yi],encapsulation:2,data:{animation:[Ed.transformDrawer]},changeDetection:0})}}return i})(),qd=(()=>{class i{get start(){return this._start}get end(){return this._end}get autosize(){return this._autosize}set autosize(e){this._autosize=We(e)}get hasBackdrop(){return this._drawerHasBackdrop(this._start)||this._drawerHasBackdrop(this._end)}set hasBackdrop(e){this._backdropOverride=e==null?null:We(e)}get scrollable(){return this._userContent||this._content}constructor(e,t,o,a,r,s=!1,l){this._dir=e,this._element=t,this._ngZone=o,this._changeDetectorRef=a,this._animationMode=l,this._drawers=new ii,this.backdropClick=new N,this._destroyed=new D,this._doCheckSubject=new D,this._contentMargins={left:null,right:null},this._contentMarginChanges=new D,this._injector=b(xe),e&&e.change.pipe(j(this._destroyed)).subscribe(()=>{this._validateDrawers(),this.updateContentMargins()}),r.change().pipe(j(this._destroyed)).subscribe(()=>this.updateContentMargins()),this._autosize=s}ngAfterContentInit(){this._allDrawers.changes.pipe(_e(this._allDrawers),j(this._destroyed)).subscribe(e=>{this._drawers.reset(e.filter(t=>!t._container||t._container===this)),this._drawers.notifyOnChanges()}),this._drawers.changes.pipe(_e(null)).subscribe(()=>{this._validateDrawers(),this._drawers.forEach(e=>{this._watchDrawerToggle(e),this._watchDrawerPosition(e),this._watchDrawerMode(e)}),(!this._drawers.length||this._isDrawerOpen(this._start)||this._isDrawerOpen(this._end))&&this.updateContentMargins(),this._changeDetectorRef.markForCheck()}),this._ngZone.runOutsideAngular(()=>{this._doCheckSubject.pipe(Ci(10),j(this._destroyed)).subscribe(()=>this.updateContentMargins())})}ngOnDestroy(){this._contentMarginChanges.complete(),this._doCheckSubject.complete(),this._drawers.destroy(),this._destroyed.next(),this._destroyed.complete()}open(){this._drawers.forEach(e=>e.open())}close(){this._drawers.forEach(e=>e.close())}updateContentMargins(){let e=0,t=0;if(this._left&&this._left.opened){if(this._left.mode=="side")e+=this._left._getWidth();else if(this._left.mode=="push"){let o=this._left._getWidth();e+=o,t-=o}}if(this._right&&this._right.opened){if(this._right.mode=="side")t+=this._right._getWidth();else if(this._right.mode=="push"){let o=this._right._getWidth();t+=o,e-=o}}e=e||null,t=t||null,(e!==this._contentMargins.left||t!==this._contentMargins.right)&&(this._contentMargins={left:e,right:t},this._ngZone.run(()=>this._contentMarginChanges.next(this._contentMargins)))}ngDoCheck(){this._autosize&&this._isPushed()&&this._ngZone.runOutsideAngular(()=>this._doCheckSubject.next())}_watchDrawerToggle(e){e._animationStarted.pipe(ce(t=>t.fromState!==t.toState),j(this._drawers.changes)).subscribe(t=>{t.toState!=="open-instant"&&this._animationMode!=="NoopAnimations"&&this._element.nativeElement.classList.add("mat-drawer-transition"),this.updateContentMargins(),this._changeDetectorRef.markForCheck()}),e.mode!=="side"&&e.openedChange.pipe(j(this._drawers.changes)).subscribe(()=>this._setContainerClass(e.opened))}_watchDrawerPosition(e){e&&e.onPositionChanged.pipe(j(this._drawers.changes)).subscribe(()=>{Fe(()=>{this._validateDrawers()},{injector:this._injector,phase:ql.Read})})}_watchDrawerMode(e){e&&e._modeChanged.pipe(j(Ce(this._drawers.changes,this._destroyed))).subscribe(()=>{this.updateContentMargins(),this._changeDetectorRef.markForCheck()})}_setContainerClass(e){let t=this._element.nativeElement.classList,o="mat-drawer-container-has-open";e?t.add(o):t.remove(o)}_validateDrawers(){this._start=this._end=null,this._drawers.forEach(e=>{e.position=="end"?(this._end!=null,this._end=e):(this._start!=null,this._start=e)}),this._right=this._left=null,this._dir&&this._dir.value==="rtl"?(this._left=this._end,this._right=this._start):(this._left=this._start,this._right=this._end)}_isPushed(){return this._isDrawerOpen(this._start)&&this._start.mode!="over"||this._isDrawerOpen(this._end)&&this._end.mode!="over"}_onBackdropClicked(){this.backdropClick.emit(),this._closeModalDrawersViaBackdrop()}_closeModalDrawersViaBackdrop(){[this._start,this._end].filter(e=>e&&!e.disableClose&&this._drawerHasBackdrop(e)).forEach(e=>e._closeViaBackdropClick())}_isShowingBackdrop(){return this._isDrawerOpen(this._start)&&this._drawerHasBackdrop(this._start)||this._isDrawerOpen(this._end)&&this._drawerHasBackdrop(this._end)}_isDrawerOpen(e){return e!=null&&e.opened}_drawerHasBackdrop(e){return this._backdropOverride==null?!!e&&e.mode!=="side":this._backdropOverride}static{this.\u0275fac=function(t){return new(t||i)(c(Ae,8),c(A),c(I),c(de),c(ht),c(kg),c(Se,8))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-drawer-container"]],contentQueries:function(t,o,a){if(t&1&&(ee(a,oa,5),ee(a,Rd,5)),t&2){let r;x(r=C())&&(o._content=r.first),x(r=C())&&(o._allDrawers=r)}},viewQuery:function(t,o){if(t&1&&oe(oa,5),t&2){let a;x(a=C())&&(o._userContent=a.first)}},hostAttrs:[1,"mat-drawer-container"],hostVars:2,hostBindings:function(t,o){t&2&&z("mat-drawer-container-explicit-backdrop",o._backdropOverride)},inputs:{autosize:"autosize",hasBackdrop:"hasBackdrop"},outputs:{backdropClick:"backdropClick"},exportAs:["matDrawerContainer"],standalone:!0,features:[W([{provide:gs,useExisting:i}]),G],ngContentSelectors:pg,decls:4,vars:2,consts:[[1,"mat-drawer-backdrop",3,"mat-drawer-shown"],[1,"mat-drawer-backdrop",3,"click"]],template:function(t,o){t&1&&(re(mg),R(0,fg,1,2,"div",0),q(1),q(2,1),R(3,gg,2,0,"mat-drawer-content")),t&2&&($(o.hasBackdrop?0:-1),g(3),$(o._content?-1:3))},dependencies:[oa],styles:['.mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-app-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-app-background));box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-app-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color, var(--mat-app-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-app-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}'],encapsulation:2,changeDetection:0})}}return i})(),aa=(()=>{class i extends oa{constructor(e,t,o,a,r){super(e,t,o,a,r)}static{this.\u0275fac=function(t){return new(t||i)(c(de),c(Le(()=>ys)),c(A),c(Gi),c(I))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-sidenav-content"]],hostAttrs:[1,"mat-drawer-content","mat-sidenav-content"],hostVars:4,hostBindings:function(t,o){t&2&&oi("margin-left",o._container._contentMargins.left,"px")("margin-right",o._container._contentMargins.right,"px")},standalone:!0,features:[W([{provide:Yi,useExisting:i}]),Z,G],ngContentSelectors:ra,decls:1,vars:0,template:function(t,o){t&1&&(re(),q(0))},encapsulation:2,changeDetection:0})}}return i})(),bs=(()=>{class i extends Rd{constructor(){super(...arguments),this._fixedInViewport=!1,this._fixedTopGap=0,this._fixedBottomGap=0}get fixedInViewport(){return this._fixedInViewport}set fixedInViewport(e){this._fixedInViewport=We(e)}get fixedTopGap(){return this._fixedTopGap}set fixedTopGap(e){this._fixedTopGap=Li(e)}get fixedBottomGap(){return this._fixedBottomGap}set fixedBottomGap(e){this._fixedBottomGap=Li(e)}static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275cmp=V({type:i,selectors:[["mat-sidenav"]],hostAttrs:["tabIndex","-1",1,"mat-drawer","mat-sidenav"],hostVars:17,hostBindings:function(t,o){t&2&&(X("align",null),oi("top",o.fixedInViewport?o.fixedTopGap:null,"px")("bottom",o.fixedInViewport?o.fixedBottomGap:null,"px"),z("mat-drawer-end",o.position==="end")("mat-drawer-over",o.mode==="over")("mat-drawer-push",o.mode==="push")("mat-drawer-side",o.mode==="side")("mat-drawer-opened",o.opened)("mat-sidenav-fixed",o.fixedInViewport))},inputs:{fixedInViewport:"fixedInViewport",fixedTopGap:"fixedTopGap",fixedBottomGap:"fixedBottomGap"},exportAs:["matSidenav"],standalone:!0,features:[Z,G],ngContentSelectors:ra,decls:3,vars:0,consts:[["content",""],["cdkScrollable","",1,"mat-drawer-inner-container"]],template:function(t,o){t&1&&(re(),m(0,"div",1,0),q(2),f())},dependencies:[Yi],encapsulation:2,data:{animation:[Ed.transformDrawer]},changeDetection:0})}}return i})(),ys=(()=>{class i extends qd{constructor(){super(...arguments),this._allDrawers=void 0,this._content=void 0}static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275cmp=V({type:i,selectors:[["mat-sidenav-container"]],contentQueries:function(t,o,a){if(t&1&&(ee(a,aa,5),ee(a,bs,5)),t&2){let r;x(r=C())&&(o._content=r.first),x(r=C())&&(o._allDrawers=r)}},hostAttrs:[1,"mat-drawer-container","mat-sidenav-container"],hostVars:2,hostBindings:function(t,o){t&2&&z("mat-drawer-container-explicit-backdrop",o._backdropOverride)},exportAs:["matSidenavContainer"],standalone:!0,features:[W([{provide:gs,useExisting:i}]),Z,G],ngContentSelectors:yg,decls:4,vars:2,consts:[[1,"mat-drawer-backdrop",3,"mat-drawer-shown"],[1,"mat-drawer-backdrop",3,"click"]],template:function(t,o){t&1&&(re(bg),R(0,_g,1,2,"div",0),q(1),q(2,1),R(3,vg,2,0,"mat-sidenav-content")),t&2&&($(o.hasBackdrop?0:-1),g(3),$(o._content?-1:3))},dependencies:[aa],styles:[wg],encapsulation:2,changeDetection:0})}}return i})(),Od=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[ne,It,It,ne]})}}return i})();var Fd=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[ne,ne]})}}return i})();var Sg=["*"],sa;function Dg(){if(sa===void 0&&(sa=null,typeof window<"u")){let i=window;i.trustedTypes!==void 0&&(sa=i.trustedTypes.createPolicy("angular#components",{createHTML:n=>n}))}return sa}function to(i){return Dg()?.createHTML(i)||i}function Pd(i){return Error(`Unable to find icon with the name "${i}"`)}function Ig(){return Error("Could not find HttpClient for use with Angular Material icons. Please add provideHttpClient() to your providers.")}function Bd(i){return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${i}".`)}function Nd(i){return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${i}".`)}var At=class{constructor(n,e,t){this.url=n,this.svgText=e,this.options=t}},Ag=(()=>{class i{constructor(e,t,o,a){this._httpClient=e,this._sanitizer=t,this._errorHandler=a,this._svgIconConfigs=new Map,this._iconSetConfigs=new Map,this._cachedIconsByUrl=new Map,this._inProgressUrlFetches=new Map,this._fontCssClassesByAlias=new Map,this._resolvers=[],this._defaultFontSetClass=["material-icons","mat-ligature-font"],this._document=o}addSvgIcon(e,t,o){return this.addSvgIconInNamespace("",e,t,o)}addSvgIconLiteral(e,t,o){return this.addSvgIconLiteralInNamespace("",e,t,o)}addSvgIconInNamespace(e,t,o,a){return this._addSvgIconConfig(e,t,new At(o,null,a))}addSvgIconResolver(e){return this._resolvers.push(e),this}addSvgIconLiteralInNamespace(e,t,o,a){let r=this._sanitizer.sanitize(Ue.HTML,o);if(!r)throw Nd(o);let s=to(r);return this._addSvgIconConfig(e,t,new At("",s,a))}addSvgIconSet(e,t){return this.addSvgIconSetInNamespace("",e,t)}addSvgIconSetLiteral(e,t){return this.addSvgIconSetLiteralInNamespace("",e,t)}addSvgIconSetInNamespace(e,t,o){return this._addSvgIconSetConfig(e,new At(t,null,o))}addSvgIconSetLiteralInNamespace(e,t,o){let a=this._sanitizer.sanitize(Ue.HTML,t);if(!a)throw Nd(t);let r=to(a);return this._addSvgIconSetConfig(e,new At("",r,o))}registerFontClassAlias(e,t=e){return this._fontCssClassesByAlias.set(e,t),this}classNameForFontAlias(e){return this._fontCssClassesByAlias.get(e)||e}setDefaultFontSetClass(...e){return this._defaultFontSetClass=e,this}getDefaultFontSetClass(){return this._defaultFontSetClass}getSvgIconFromUrl(e){let t=this._sanitizer.sanitize(Ue.RESOURCE_URL,e);if(!t)throw Bd(e);let o=this._cachedIconsByUrl.get(t);return o?T(la(o)):this._loadSvgIconFromConfig(new At(e,null)).pipe(ge(a=>this._cachedIconsByUrl.set(t,a)),E(a=>la(a)))}getNamedSvgIcon(e,t=""){let o=Hd(t,e),a=this._svgIconConfigs.get(o);if(a)return this._getSvgFromConfig(a);if(a=this._getIconConfigFromResolvers(t,e),a)return this._svgIconConfigs.set(o,a),this._getSvgFromConfig(a);let r=this._iconSetConfigs.get(t);return r?this._getSvgFromIconSetConfigs(e,r):Zt(Pd(o))}ngOnDestroy(){this._resolvers=[],this._svgIconConfigs.clear(),this._iconSetConfigs.clear(),this._cachedIconsByUrl.clear()}_getSvgFromConfig(e){return e.svgText?T(la(this._svgElementFromConfig(e))):this._loadSvgIconFromConfig(e).pipe(E(t=>la(t)))}_getSvgFromIconSetConfigs(e,t){let o=this._extractIconWithNameFromAnySet(e,t);if(o)return T(o);let a=t.filter(r=>!r.svgText).map(r=>this._loadSvgIconSetFromConfig(r).pipe(Rt(s=>{let d=`Loading icon set URL: ${this._sanitizer.sanitize(Ue.RESOURCE_URL,r.url)} failed: ${s.message}`;return this._errorHandler.handleError(new Error(d)),T(null)})));return po(a).pipe(E(()=>{let r=this._extractIconWithNameFromAnySet(e,t);if(!r)throw Pd(e);return r}))}_extractIconWithNameFromAnySet(e,t){for(let o=t.length-1;o>=0;o--){let a=t[o];if(a.svgText&&a.svgText.toString().indexOf(e)>-1){let r=this._svgElementFromConfig(a),s=this._extractSvgIconFromSet(r,e,a.options);if(s)return s}}return null}_loadSvgIconFromConfig(e){return this._fetchIcon(e).pipe(ge(t=>e.svgText=t),E(()=>this._svgElementFromConfig(e)))}_loadSvgIconSetFromConfig(e){return e.svgText?T(null):this._fetchIcon(e).pipe(ge(t=>e.svgText=t))}_extractSvgIconFromSet(e,t,o){let a=e.querySelector(`[id="${t}"]`);if(!a)return null;let r=a.cloneNode(!0);if(r.removeAttribute("id"),r.nodeName.toLowerCase()==="svg")return this._setSvgAttributes(r,o);if(r.nodeName.toLowerCase()==="symbol")return this._setSvgAttributes(this._toSvgElement(r),o);let s=this._svgElementFromString(to("<svg></svg>"));return s.appendChild(r),this._setSvgAttributes(s,o)}_svgElementFromString(e){let t=this._document.createElement("DIV");t.innerHTML=e;let o=t.querySelector("svg");if(!o)throw Error("<svg> tag not found");return o}_toSvgElement(e){let t=this._svgElementFromString(to("<svg></svg>")),o=e.attributes;for(let a=0;a<o.length;a++){let{name:r,value:s}=o[a];r!=="id"&&t.setAttribute(r,s)}for(let a=0;a<e.childNodes.length;a++)e.childNodes[a].nodeType===this._document.ELEMENT_NODE&&t.appendChild(e.childNodes[a].cloneNode(!0));return t}_setSvgAttributes(e,t){return e.setAttribute("fit",""),e.setAttribute("height","100%"),e.setAttribute("width","100%"),e.setAttribute("preserveAspectRatio","xMidYMid meet"),e.setAttribute("focusable","false"),t&&t.viewBox&&e.setAttribute("viewBox",t.viewBox),e}_fetchIcon(e){let{url:t,options:o}=e,a=o?.withCredentials??!1;if(!this._httpClient)throw Ig();if(t==null)throw Error(`Cannot fetch icon from URL "${t}".`);let r=this._sanitizer.sanitize(Ue.RESOURCE_URL,t);if(!r)throw Bd(t);let s=this._inProgressUrlFetches.get(r);if(s)return s;let l=this._httpClient.get(r,{responseType:"text",withCredentials:a}).pipe(E(d=>to(d)),Xt(()=>this._inProgressUrlFetches.delete(r)),ul());return this._inProgressUrlFetches.set(r,l),l}_addSvgIconConfig(e,t,o){return this._svgIconConfigs.set(Hd(e,t),o),this}_addSvgIconSetConfig(e,t){let o=this._iconSetConfigs.get(e);return o?o.push(t):this._iconSetConfigs.set(e,[t]),this}_svgElementFromConfig(e){if(!e.svgElement){let t=this._svgElementFromString(e.svgText);this._setSvgAttributes(t,e.options),e.svgElement=t}return e.svgElement}_getIconConfigFromResolvers(e,t){for(let o=0;o<this._resolvers.length;o++){let a=this._resolvers[o](t,e);if(a)return Mg(a)?new At(a.url,null,a.options):new At(a,null)}}static{this.\u0275fac=function(t){return new(t||i)(p(cc,8),p(mr),p(L,8),p(ti))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();function la(i){return i.cloneNode(!0)}function Hd(i,n){return i+":"+n}function Mg(i){return!!(i.url&&i.options)}var Tg=new w("MAT_ICON_DEFAULT_OPTIONS"),Eg=new w("mat-icon-location",{providedIn:"root",factory:Rg});function Rg(){let i=b(L),n=i?i.location:null;return{getPathname:()=>n?n.pathname+n.search:""}}var Ld=["clip-path","color-profile","src","cursor","fill","filter","marker","marker-start","marker-mid","marker-end","mask","stroke"],qg=Ld.map(i=>`[${i}]`).join(", "),Og=/^url\(['"]?#(.*?)['"]?\)$/,zd=(()=>{class i{get color(){return this._color||this._defaultColor}set color(e){this._color=e}get svgIcon(){return this._svgIcon}set svgIcon(e){e!==this._svgIcon&&(e?this._updateSvgIcon(e):this._svgIcon&&this._clearSvgElement(),this._svgIcon=e)}get fontSet(){return this._fontSet}set fontSet(e){let t=this._cleanupFontValue(e);t!==this._fontSet&&(this._fontSet=t,this._updateFontIconClasses())}get fontIcon(){return this._fontIcon}set fontIcon(e){let t=this._cleanupFontValue(e);t!==this._fontIcon&&(this._fontIcon=t,this._updateFontIconClasses())}constructor(e,t,o,a,r,s){this._elementRef=e,this._iconRegistry=t,this._location=a,this._errorHandler=r,this.inline=!1,this._previousFontSetClass=[],this._currentIconFetch=ke.EMPTY,s&&(s.color&&(this.color=this._defaultColor=s.color),s.fontSet&&(this.fontSet=s.fontSet)),o||e.nativeElement.setAttribute("aria-hidden","true")}_splitIconName(e){if(!e)return["",""];let t=e.split(":");switch(t.length){case 1:return["",t[0]];case 2:return t;default:throw Error(`Invalid icon name: "${e}"`)}}ngOnInit(){this._updateFontIconClasses()}ngAfterViewChecked(){let e=this._elementsWithExternalReferences;if(e&&e.size){let t=this._location.getPathname();t!==this._previousPath&&(this._previousPath=t,this._prependPathToReferences(t))}}ngOnDestroy(){this._currentIconFetch.unsubscribe(),this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear()}_usingFontIcon(){return!this.svgIcon}_setSvgElement(e){this._clearSvgElement();let t=this._location.getPathname();this._previousPath=t,this._cacheChildrenWithExternalReferences(e),this._prependPathToReferences(t),this._elementRef.nativeElement.appendChild(e)}_clearSvgElement(){let e=this._elementRef.nativeElement,t=e.childNodes.length;for(this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear();t--;){let o=e.childNodes[t];(o.nodeType!==1||o.nodeName.toLowerCase()==="svg")&&o.remove()}}_updateFontIconClasses(){if(!this._usingFontIcon())return;let e=this._elementRef.nativeElement,t=(this.fontSet?this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/):this._iconRegistry.getDefaultFontSetClass()).filter(o=>o.length>0);this._previousFontSetClass.forEach(o=>e.classList.remove(o)),t.forEach(o=>e.classList.add(o)),this._previousFontSetClass=t,this.fontIcon!==this._previousFontIconClass&&!t.includes("mat-ligature-font")&&(this._previousFontIconClass&&e.classList.remove(this._previousFontIconClass),this.fontIcon&&e.classList.add(this.fontIcon),this._previousFontIconClass=this.fontIcon)}_cleanupFontValue(e){return typeof e=="string"?e.trim().split(" ")[0]:e}_prependPathToReferences(e){let t=this._elementsWithExternalReferences;t&&t.forEach((o,a)=>{o.forEach(r=>{a.setAttribute(r.name,`url('${e}#${r.value}')`)})})}_cacheChildrenWithExternalReferences(e){let t=e.querySelectorAll(qg),o=this._elementsWithExternalReferences=this._elementsWithExternalReferences||new Map;for(let a=0;a<t.length;a++)Ld.forEach(r=>{let s=t[a],l=s.getAttribute(r),d=l?l.match(Og):null;if(d){let h=o.get(s);h||(h=[],o.set(s,h)),h.push({name:r,value:d[1]})}})}_updateSvgIcon(e){if(this._svgNamespace=null,this._svgName=null,this._currentIconFetch.unsubscribe(),e){let[t,o]=this._splitIconName(e);t&&(this._svgNamespace=t),o&&(this._svgName=o),this._currentIconFetch=this._iconRegistry.getNamedSvgIcon(o,t).pipe(De(1)).subscribe(a=>this._setSvgElement(a),a=>{let r=`Error retrieving icon ${t}:${o}! ${a.message}`;this._errorHandler.handleError(new Error(r))})}}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(Ag),$e("aria-hidden"),c(Eg),c(ti),c(Tg,8))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-icon"]],hostAttrs:["role","img",1,"mat-icon","notranslate"],hostVars:10,hostBindings:function(t,o){t&2&&(X("data-mat-icon-type",o._usingFontIcon()?"font":"svg")("data-mat-icon-name",o._svgName||o.fontIcon)("data-mat-icon-namespace",o._svgNamespace||o.fontSet)("fontIcon",o._usingFontIcon()?o.fontIcon:null),st(o.color?"mat-"+o.color:""),z("mat-icon-inline",o.inline)("mat-icon-no-color",o.color!=="primary"&&o.color!=="accent"&&o.color!=="warn"))},inputs:{color:"color",inline:[2,"inline","inline",M],svgIcon:"svgIcon",fontSet:"fontSet",fontIcon:"fontIcon"},exportAs:["matIcon"],standalone:!0,features:[le,G],ngContentSelectors:Sg,decls:1,vars:0,template:function(t,o){t&1&&(re(),q(0))},styles:["mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}"],encapsulation:2,changeDetection:0})}}return i})(),jd=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[ne,ne]})}}return i})();var _s=class{constructor(n){this._box=n,this._destroyed=new D,this._resizeSubject=new D,this._elementObservables=new Map,typeof ResizeObserver<"u"&&(this._resizeObserver=new ResizeObserver(e=>this._resizeSubject.next(e)))}observe(n){return this._elementObservables.has(n)||this._elementObservables.set(n,new rt(e=>{let t=this._resizeSubject.subscribe(e);return this._resizeObserver?.observe(n,{box:this._box}),()=>{this._resizeObserver?.unobserve(n),t.unsubscribe(),this._elementObservables.delete(n)}}).pipe(ce(e=>e.some(t=>t.target===n)),Ua({bufferSize:1,refCount:!0}),j(this._destroyed))),this._elementObservables.get(n)}destroy(){this._destroyed.next(),this._destroyed.complete(),this._resizeSubject.complete(),this._elementObservables.clear()}},Wd=(()=>{class i{constructor(){this._observers=new Map,this._ngZone=b(I),typeof ResizeObserver<"u"}ngOnDestroy(){for(let[,e]of this._observers)e.destroy();this._observers.clear(),typeof ResizeObserver<"u"}observe(e,t){let o=t?.box||"content-box";return this._observers.has(o)||this._observers.set(o,new _s(o)),this._observers.get(o).observe(e)}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var Pg=["notch"],Bg=["matFormFieldNotchedOutline",""],Ng=["*"],Hg=["textField"],Lg=["iconPrefixContainer"],zg=["textPrefixContainer"],jg=["iconSuffixContainer"],Wg=["textSuffixContainer"],Ug=["*",[["mat-label"]],[["","matPrefix",""],["","matIconPrefix",""]],[["","matTextPrefix",""]],[["","matTextSuffix",""]],[["","matSuffix",""],["","matIconSuffix",""]],[["mat-error"],["","matError",""]],[["mat-hint",3,"align","end"]],[["mat-hint","align","end"]]],Vg=["*","mat-label","[matPrefix], [matIconPrefix]","[matTextPrefix]","[matTextSuffix]","[matSuffix], [matIconSuffix]","mat-error, [matError]","mat-hint:not([align='end'])","mat-hint[align='end']"];function Gg(i,n){i&1&&ae(0,"span",21)}function Yg(i,n){if(i&1&&(m(0,"label",20),q(1,1),R(2,Gg,1,0,"span",21),f()),i&2){let e=ie(2);F("floating",e._shouldLabelFloat())("monitorResize",e._hasOutline())("id",e._labelId),X("for",e._control.disableAutomaticLabeling?null:e._control.id),g(2),$(!e.hideRequiredMarker&&e._control.required?2:-1)}}function Kg(i,n){if(i&1&&R(0,Yg,3,5,"label",20),i&2){let e=ie();$(e._hasFloatingLabel()?0:-1)}}function Zg(i,n){i&1&&ae(0,"div",7)}function $g(i,n){}function Jg(i,n){if(i&1&&R(0,$g,0,0,"ng-template",13),i&2){ie(2);let e=Re(1);F("ngTemplateOutlet",e)}}function Qg(i,n){if(i&1&&(m(0,"div",9),R(1,Jg,1,1,null,13),f()),i&2){let e=ie();F("matFormFieldNotchedOutlineOpen",e._shouldLabelFloat()),g(),$(e._forceDisplayInfixLabel()?-1:1)}}function Xg(i,n){i&1&&(m(0,"div",10,2),q(2,2),f())}function eb(i,n){i&1&&(m(0,"div",11,3),q(2,3),f())}function tb(i,n){}function ib(i,n){if(i&1&&R(0,tb,0,0,"ng-template",13),i&2){ie();let e=Re(1);F("ngTemplateOutlet",e)}}function nb(i,n){i&1&&(m(0,"div",14,4),q(2,4),f())}function ob(i,n){i&1&&(m(0,"div",15,5),q(2,5),f())}function ab(i,n){i&1&&ae(0,"div",16)}function rb(i,n){if(i&1&&(m(0,"div",18),q(1,6),f()),i&2){let e=ie();F("@transitionMessages",e._subscriptAnimationState)}}function sb(i,n){if(i&1&&(m(0,"mat-hint",22),te(1),f()),i&2){let e=ie(2);F("id",e._hintLabelId),g(),Qe(e.hintLabel)}}function lb(i,n){if(i&1&&(m(0,"div",19),R(1,sb,2,2,"mat-hint",22),q(2,7),ae(3,"div",23),q(4,8),f()),i&2){let e=ie();F("@transitionMessages",e._subscriptAnimationState),g(),$(e.hintLabel?1:-1)}}var da=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275dir=k({type:i,selectors:[["mat-label"]],standalone:!0})}}return i})();var cb=new w("MatError");var db=0,Ud=(()=>{class i{constructor(){this.align="start",this.id=`mat-mdc-hint-${db++}`}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275dir=k({type:i,selectors:[["mat-hint"]],hostAttrs:[1,"mat-mdc-form-field-hint","mat-mdc-form-field-bottom-align"],hostVars:4,hostBindings:function(t,o){t&2&&(Je("id",o.id),X("align",null),z("mat-mdc-form-field-hint-end",o.align==="end"))},inputs:{align:"align",id:"id"},standalone:!0})}}return i})(),hb=new w("MatPrefix");var Qd=new w("MatSuffix"),Xd=(()=>{class i{constructor(){this._isText=!1}set _isTextSelector(e){this._isText=!0}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275dir=k({type:i,selectors:[["","matSuffix",""],["","matIconSuffix",""],["","matTextSuffix",""]],inputs:{_isTextSelector:[0,"matTextSuffix","_isTextSelector"]},standalone:!0,features:[W([{provide:Qd,useExisting:i}])]})}}return i})(),eh=new w("FloatingLabelParent"),Vd=(()=>{class i{get floating(){return this._floating}set floating(e){this._floating=e,this.monitorResize&&this._handleResize()}get monitorResize(){return this._monitorResize}set monitorResize(e){this._monitorResize=e,this._monitorResize?this._subscribeToResize():this._resizeSubscription.unsubscribe()}constructor(e){this._elementRef=e,this._floating=!1,this._monitorResize=!1,this._resizeObserver=b(Wd),this._ngZone=b(I),this._parent=b(eh),this._resizeSubscription=new ke}ngOnDestroy(){this._resizeSubscription.unsubscribe()}getWidth(){return ub(this._elementRef.nativeElement)}get element(){return this._elementRef.nativeElement}_handleResize(){setTimeout(()=>this._parent._handleLabelResized())}_subscribeToResize(){this._resizeSubscription.unsubscribe(),this._ngZone.runOutsideAngular(()=>{this._resizeSubscription=this._resizeObserver.observe(this._elementRef.nativeElement,{box:"border-box"}).subscribe(()=>this._handleResize())})}static{this.\u0275fac=function(t){return new(t||i)(c(A))}}static{this.\u0275dir=k({type:i,selectors:[["label","matFormFieldFloatingLabel",""]],hostAttrs:[1,"mdc-floating-label","mat-mdc-floating-label"],hostVars:2,hostBindings:function(t,o){t&2&&z("mdc-floating-label--float-above",o.floating)},inputs:{floating:"floating",monitorResize:"monitorResize"},standalone:!0})}}return i})();function ub(i){let n=i;if(n.offsetParent!==null)return n.scrollWidth;let e=n.cloneNode(!0);e.style.setProperty("position","absolute"),e.style.setProperty("transform","translate(-9999px, -9999px)"),document.documentElement.appendChild(e);let t=e.scrollWidth;return e.remove(),t}var Gd="mdc-line-ripple--active",ca="mdc-line-ripple--deactivating",Yd=(()=>{class i{constructor(e,t){this._elementRef=e,this._handleTransitionEnd=o=>{let a=this._elementRef.nativeElement.classList,r=a.contains(ca);o.propertyName==="opacity"&&r&&a.remove(Gd,ca)},t.runOutsideAngular(()=>{e.nativeElement.addEventListener("transitionend",this._handleTransitionEnd)})}activate(){let e=this._elementRef.nativeElement.classList;e.remove(ca),e.add(Gd)}deactivate(){this._elementRef.nativeElement.classList.add(ca)}ngOnDestroy(){this._elementRef.nativeElement.removeEventListener("transitionend",this._handleTransitionEnd)}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(I))}}static{this.\u0275dir=k({type:i,selectors:[["div","matFormFieldLineRipple",""]],hostAttrs:[1,"mdc-line-ripple"],standalone:!0})}}return i})(),Kd=(()=>{class i{constructor(e,t){this._elementRef=e,this._ngZone=t,this.open=!1}ngAfterViewInit(){let e=this._elementRef.nativeElement.querySelector(".mdc-floating-label");e?(this._elementRef.nativeElement.classList.add("mdc-notched-outline--upgraded"),typeof requestAnimationFrame=="function"&&(e.style.transitionDuration="0s",this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>e.style.transitionDuration="")}))):this._elementRef.nativeElement.classList.add("mdc-notched-outline--no-label")}_setNotchWidth(e){!this.open||!e?this._notch.nativeElement.style.width="":this._notch.nativeElement.style.width=`calc(${e}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + 9px)`}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(I))}}static{this.\u0275cmp=V({type:i,selectors:[["div","matFormFieldNotchedOutline",""]],viewQuery:function(t,o){if(t&1&&oe(Pg,5),t&2){let a;x(a=C())&&(o._notch=a.first)}},hostAttrs:[1,"mdc-notched-outline"],hostVars:2,hostBindings:function(t,o){t&2&&z("mdc-notched-outline--notched",o.open)},inputs:{open:[0,"matFormFieldNotchedOutlineOpen","open"]},standalone:!0,features:[G],attrs:Bg,ngContentSelectors:Ng,decls:5,vars:0,consts:[["notch",""],[1,"mat-mdc-notch-piece","mdc-notched-outline__leading"],[1,"mat-mdc-notch-piece","mdc-notched-outline__notch"],[1,"mat-mdc-notch-piece","mdc-notched-outline__trailing"]],template:function(t,o){t&1&&(re(),ae(0,"div",1),m(1,"div",2,0),q(3),f(),ae(4,"div",3))},encapsulation:2,changeDetection:0})}}return i})(),mb={transitionMessages:xt("transitionMessages",[Ct("enter",Be({opacity:1,transform:"translateY(0%)"})),et("void => enter",[Be({opacity:0,transform:"translateY(-5px)"}),Xe("300ms cubic-bezier(0.55, 0, 0.55, 0.2)")])])},gi=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275dir=k({type:i})}}return i})();var Mt=new w("MatFormField"),pb=new w("MAT_FORM_FIELD_DEFAULT_OPTIONS"),Zd=0,$d="fill",fb="auto",Jd="fixed",gb="translateY(-50%)",th=(()=>{class i{get hideRequiredMarker(){return this._hideRequiredMarker}set hideRequiredMarker(e){this._hideRequiredMarker=We(e)}get floatLabel(){return this._floatLabel||this._defaults?.floatLabel||fb}set floatLabel(e){e!==this._floatLabel&&(this._floatLabel=e,this._changeDetectorRef.markForCheck())}get appearance(){return this._appearance}set appearance(e){let t=this._appearance,o=e||this._defaults?.appearance||$d;this._appearance=o,this._appearance==="outline"&&this._appearance!==t&&(this._needsOutlineLabelOffsetUpdate=!0)}get subscriptSizing(){return this._subscriptSizing||this._defaults?.subscriptSizing||Jd}set subscriptSizing(e){this._subscriptSizing=e||this._defaults?.subscriptSizing||Jd}get hintLabel(){return this._hintLabel}set hintLabel(e){this._hintLabel=e,this._processHints()}get _control(){return this._explicitFormFieldControl||this._formFieldControl}set _control(e){this._explicitFormFieldControl=e}constructor(e,t,o,a,r,s,l,d){this._elementRef=e,this._changeDetectorRef=t,this._dir=a,this._platform=r,this._defaults=s,this._animationMode=l,this._labelChild=Tl(da),this._hideRequiredMarker=!1,this.color="primary",this._appearance=$d,this._subscriptSizing=null,this._hintLabel="",this._hasIconPrefix=!1,this._hasTextPrefix=!1,this._hasIconSuffix=!1,this._hasTextSuffix=!1,this._labelId=`mat-mdc-form-field-label-${Zd++}`,this._hintLabelId=`mat-mdc-hint-${Zd++}`,this._subscriptAnimationState="",this._destroyed=new D,this._isFocused=null,this._needsOutlineLabelOffsetUpdate=!1,this._previousControl=null,this._injector=b(xe),this.getLabelId=wt(()=>this._hasFloatingLabel()?this._labelId:null),this._hasFloatingLabel=wt(()=>!!this._labelChild()),s&&(s.appearance&&(this.appearance=s.appearance),this._hideRequiredMarker=!!s?.hideRequiredMarker,s.color&&(this.color=s.color))}ngAfterViewInit(){this._updateFocusState(),this._subscriptAnimationState="enter",this._changeDetectorRef.detectChanges()}ngAfterContentInit(){this._assertFormFieldControl(),this._initializeSubscript(),this._initializePrefixAndSuffix(),this._initializeOutlineLabelOffsetSubscriptions()}ngAfterContentChecked(){this._assertFormFieldControl(),this._control!==this._previousControl&&(this._initializeControl(this._previousControl),this._previousControl=this._control)}ngOnDestroy(){this._stateChanges?.unsubscribe(),this._valueChanges?.unsubscribe(),this._destroyed.next(),this._destroyed.complete()}getConnectedOverlayOrigin(){return this._textField||this._elementRef}_animateAndLockLabel(){this._hasFloatingLabel()&&(this.floatLabel="always")}_initializeControl(e){let t=this._control,o="mat-mdc-form-field-type-";e&&this._elementRef.nativeElement.classList.remove(o+e.controlType),t.controlType&&this._elementRef.nativeElement.classList.add(o+t.controlType),this._stateChanges?.unsubscribe(),this._stateChanges=t.stateChanges.subscribe(()=>{this._updateFocusState(),this._syncDescribedByIds(),this._changeDetectorRef.markForCheck()}),this._valueChanges?.unsubscribe(),t.ngControl&&t.ngControl.valueChanges&&(this._valueChanges=t.ngControl.valueChanges.pipe(j(this._destroyed)).subscribe(()=>this._changeDetectorRef.markForCheck()))}_checkPrefixAndSuffixTypes(){this._hasIconPrefix=!!this._prefixChildren.find(e=>!e._isText),this._hasTextPrefix=!!this._prefixChildren.find(e=>e._isText),this._hasIconSuffix=!!this._suffixChildren.find(e=>!e._isText),this._hasTextSuffix=!!this._suffixChildren.find(e=>e._isText)}_initializePrefixAndSuffix(){this._checkPrefixAndSuffixTypes(),Ce(this._prefixChildren.changes,this._suffixChildren.changes).subscribe(()=>{this._checkPrefixAndSuffixTypes(),this._changeDetectorRef.markForCheck()})}_initializeSubscript(){this._hintChildren.changes.subscribe(()=>{this._processHints(),this._changeDetectorRef.markForCheck()}),this._errorChildren.changes.subscribe(()=>{this._syncDescribedByIds(),this._changeDetectorRef.markForCheck()}),this._validateHints(),this._syncDescribedByIds()}_assertFormFieldControl(){this._control}_updateFocusState(){this._control.focused&&!this._isFocused?(this._isFocused=!0,this._lineRipple?.activate()):!this._control.focused&&(this._isFocused||this._isFocused===null)&&(this._isFocused=!1,this._lineRipple?.deactivate()),this._textField?.nativeElement.classList.toggle("mdc-text-field--focused",this._control.focused)}_initializeOutlineLabelOffsetSubscriptions(){this._prefixChildren.changes.subscribe(()=>this._needsOutlineLabelOffsetUpdate=!0),_o(()=>{this._needsOutlineLabelOffsetUpdate&&(this._needsOutlineLabelOffsetUpdate=!1,this._updateOutlineLabelOffset())},{injector:this._injector}),this._dir.change.pipe(j(this._destroyed)).subscribe(()=>this._needsOutlineLabelOffsetUpdate=!0)}_shouldAlwaysFloat(){return this.floatLabel==="always"}_hasOutline(){return this.appearance==="outline"}_forceDisplayInfixLabel(){return!this._platform.isBrowser&&this._prefixChildren.length&&!this._shouldLabelFloat()}_shouldLabelFloat(){return this._hasFloatingLabel()?this._control.shouldLabelFloat||this._shouldAlwaysFloat():!1}_shouldForward(e){let t=this._control?this._control.ngControl:null;return t&&t[e]}_getDisplayedMessages(){return this._errorChildren&&this._errorChildren.length>0&&this._control.errorState?"error":"hint"}_handleLabelResized(){this._refreshOutlineNotchWidth()}_refreshOutlineNotchWidth(){!this._hasOutline()||!this._floatingLabel||!this._shouldLabelFloat()?this._notchedOutline?._setNotchWidth(0):this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth())}_processHints(){this._validateHints(),this._syncDescribedByIds()}_validateHints(){this._hintChildren}_syncDescribedByIds(){if(this._control){let e=[];if(this._control.userAriaDescribedBy&&typeof this._control.userAriaDescribedBy=="string"&&e.push(...this._control.userAriaDescribedBy.split(" ")),this._getDisplayedMessages()==="hint"){let t=this._hintChildren?this._hintChildren.find(a=>a.align==="start"):null,o=this._hintChildren?this._hintChildren.find(a=>a.align==="end"):null;t?e.push(t.id):this._hintLabel&&e.push(this._hintLabelId),o&&e.push(o.id)}else this._errorChildren&&e.push(...this._errorChildren.map(t=>t.id));this._control.setDescribedByIds(e)}}_updateOutlineLabelOffset(){if(!this._hasOutline()||!this._floatingLabel)return;let e=this._floatingLabel.element;if(!(this._iconPrefixContainer||this._textPrefixContainer)){e.style.transform="";return}if(!this._isAttachedToDom()){this._needsOutlineLabelOffsetUpdate=!0;return}let t=this._iconPrefixContainer?.nativeElement,o=this._textPrefixContainer?.nativeElement,a=this._iconSuffixContainer?.nativeElement,r=this._textSuffixContainer?.nativeElement,s=t?.getBoundingClientRect().width??0,l=o?.getBoundingClientRect().width??0,d=a?.getBoundingClientRect().width??0,h=r?.getBoundingClientRect().width??0,u=this._dir.value==="rtl"?"-1":"1",v=`${s+l}px`,O=`calc(${u} * (${v} + var(--mat-mdc-form-field-label-offset-x, 0px)))`;e.style.transform=`var(
        --mat-mdc-form-field-label-transform,
        ${gb} translateX(${O})
    )`;let U=s+l+d+h;this._elementRef.nativeElement.style.setProperty("--mat-form-field-notch-max-width",`calc(100% - ${U}px)`)}_isAttachedToDom(){let e=this._elementRef.nativeElement;if(e.getRootNode){let t=e.getRootNode();return t&&t!==e}return document.documentElement.contains(e)}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(de),c(I),c(Ae),c(se),c(pb,8),c(Se,8),c(L))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-form-field"]],contentQueries:function(t,o,a){if(t&1&&(Nl(a,o._labelChild,da,5),ee(a,gi,5),ee(a,hb,5),ee(a,Qd,5),ee(a,cb,5),ee(a,Ud,5)),t&2){Hl();let r;x(r=C())&&(o._formFieldControl=r.first),x(r=C())&&(o._prefixChildren=r),x(r=C())&&(o._suffixChildren=r),x(r=C())&&(o._errorChildren=r),x(r=C())&&(o._hintChildren=r)}},viewQuery:function(t,o){if(t&1&&(oe(Hg,5),oe(Lg,5),oe(zg,5),oe(jg,5),oe(Wg,5),oe(Vd,5),oe(Kd,5),oe(Yd,5)),t&2){let a;x(a=C())&&(o._textField=a.first),x(a=C())&&(o._iconPrefixContainer=a.first),x(a=C())&&(o._textPrefixContainer=a.first),x(a=C())&&(o._iconSuffixContainer=a.first),x(a=C())&&(o._textSuffixContainer=a.first),x(a=C())&&(o._floatingLabel=a.first),x(a=C())&&(o._notchedOutline=a.first),x(a=C())&&(o._lineRipple=a.first)}},hostAttrs:[1,"mat-mdc-form-field"],hostVars:42,hostBindings:function(t,o){t&2&&z("mat-mdc-form-field-label-always-float",o._shouldAlwaysFloat())("mat-mdc-form-field-has-icon-prefix",o._hasIconPrefix)("mat-mdc-form-field-has-icon-suffix",o._hasIconSuffix)("mat-form-field-invalid",o._control.errorState)("mat-form-field-disabled",o._control.disabled)("mat-form-field-autofilled",o._control.autofilled)("mat-form-field-no-animations",o._animationMode==="NoopAnimations")("mat-form-field-appearance-fill",o.appearance=="fill")("mat-form-field-appearance-outline",o.appearance=="outline")("mat-form-field-hide-placeholder",o._hasFloatingLabel()&&!o._shouldLabelFloat())("mat-focused",o._control.focused)("mat-primary",o.color!=="accent"&&o.color!=="warn")("mat-accent",o.color==="accent")("mat-warn",o.color==="warn")("ng-untouched",o._shouldForward("untouched"))("ng-touched",o._shouldForward("touched"))("ng-pristine",o._shouldForward("pristine"))("ng-dirty",o._shouldForward("dirty"))("ng-valid",o._shouldForward("valid"))("ng-invalid",o._shouldForward("invalid"))("ng-pending",o._shouldForward("pending"))},inputs:{hideRequiredMarker:"hideRequiredMarker",color:"color",floatLabel:"floatLabel",appearance:"appearance",subscriptSizing:"subscriptSizing",hintLabel:"hintLabel"},exportAs:["matFormField"],standalone:!0,features:[W([{provide:Mt,useExisting:i},{provide:eh,useExisting:i}]),G],ngContentSelectors:Vg,decls:18,vars:21,consts:[["labelTemplate",""],["textField",""],["iconPrefixContainer",""],["textPrefixContainer",""],["textSuffixContainer",""],["iconSuffixContainer",""],[1,"mat-mdc-text-field-wrapper","mdc-text-field",3,"click"],[1,"mat-mdc-form-field-focus-overlay"],[1,"mat-mdc-form-field-flex"],["matFormFieldNotchedOutline","",3,"matFormFieldNotchedOutlineOpen"],[1,"mat-mdc-form-field-icon-prefix"],[1,"mat-mdc-form-field-text-prefix"],[1,"mat-mdc-form-field-infix"],[3,"ngTemplateOutlet"],[1,"mat-mdc-form-field-text-suffix"],[1,"mat-mdc-form-field-icon-suffix"],["matFormFieldLineRipple",""],[1,"mat-mdc-form-field-subscript-wrapper","mat-mdc-form-field-bottom-align"],[1,"mat-mdc-form-field-error-wrapper"],[1,"mat-mdc-form-field-hint-wrapper"],["matFormFieldFloatingLabel","",3,"floating","monitorResize","id"],["aria-hidden","true",1,"mat-mdc-form-field-required-marker","mdc-floating-label--required"],[3,"id"],[1,"mat-mdc-form-field-hint-spacer"]],template:function(t,o){if(t&1){let a=Ie();re(Ug),R(0,Kg,1,1,"ng-template",null,0,zl),m(2,"div",6,1),H("click",function(s){return J(a),Q(o._control.onContainerClick(s))}),R(4,Zg,1,0,"div",7),m(5,"div",8),R(6,Qg,2,2,"div",9)(7,Xg,3,0,"div",10)(8,eb,3,0,"div",11),m(9,"div",12),R(10,ib,1,1,null,13),q(11),f(),R(12,nb,3,0,"div",14)(13,ob,3,0,"div",15),f(),R(14,ab,1,0,"div",16),f(),m(15,"div",17),R(16,rb,2,1,"div",18)(17,lb,5,2,"div",19),f()}if(t&2){let a;g(2),z("mdc-text-field--filled",!o._hasOutline())("mdc-text-field--outlined",o._hasOutline())("mdc-text-field--no-label",!o._hasFloatingLabel())("mdc-text-field--disabled",o._control.disabled)("mdc-text-field--invalid",o._control.errorState),g(2),$(!o._hasOutline()&&!o._control.disabled?4:-1),g(2),$(o._hasOutline()?6:-1),g(),$(o._hasIconPrefix?7:-1),g(),$(o._hasTextPrefix?8:-1),g(2),$(!o._hasOutline()||o._forceDisplayInfixLabel()?10:-1),g(2),$(o._hasTextSuffix?12:-1),g(),$(o._hasIconSuffix?13:-1),g(),$(o._hasOutline()?-1:14),g(),z("mat-mdc-form-field-subscript-dynamic-size",o.subscriptSizing==="dynamic"),g(),$((a=o._getDisplayedMessages())==="error"?16:a==="hint"?17:-1)}},dependencies:[Vd,Kd,$l,Yd,Ud],styles:['.mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-filled-text-field-input-text-color, var(--mat-app-on-surface));caret-color:var(--mdc-filled-text-field-caret-color, var(--mat-app-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-error-caret-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-filled-text-field-disabled-input-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-outlined-text-field-input-text-color, var(--mat-app-on-surface));caret-color:var(--mdc-outlined-text-field-caret-color, var(--mat-app-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-error-caret-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-outlined-text-field-disabled-input-text-color)}.mdc-text-field--disabled .cdk-high-contrast-active .mdc-text-field__input{background-color:Window}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mdc-filled-text-field-container-shape, var(--mat-app-corner-extra-small-top));border-top-right-radius:var(--mdc-filled-text-field-container-shape, var(--mat-app-corner-extra-small-top))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mdc-filled-text-field-container-color, var(--mat-app-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mdc-filled-text-field-disabled-container-color)}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)));padding-left:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)) + 4px);padding-left:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.cdk-high-contrast-active .mdc-text-field--disabled .mdc-floating-label{z-index:1}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-filled-text-field-label-text-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mdc-filled-text-field-focus-label-text-color, var(--mat-app-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mdc-filled-text-field-hover-label-text-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mdc-filled-text-field-disabled-label-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mdc-filled-text-field-error-label-text-color, var(--mat-app-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mdc-filled-text-field-error-focus-label-text-color, var(--mat-app-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mdc-filled-text-field-error-hover-label-text-color, var(--mat-app-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mdc-filled-text-field-label-text-font, var(--mat-app-body-large-font));font-size:var(--mdc-filled-text-field-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-filled-text-field-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-filled-text-field-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-outlined-text-field-label-text-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mdc-outlined-text-field-focus-label-text-color, var(--mat-app-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mdc-outlined-text-field-hover-label-text-color, var(--mat-app-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mdc-outlined-text-field-disabled-label-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mdc-outlined-text-field-error-label-text-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mdc-outlined-text-field-error-focus-label-text-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mdc-outlined-text-field-error-hover-label-text-color, var(--mat-app-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mdc-outlined-text-field-label-text-font, var(--mat-app-body-large-font));font-size:var(--mdc-outlined-text-field-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-outlined-text-field-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-outlined-text-field-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:"*"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-outline-color, var(--mat-app-outline));border-width:var(--mdc-outlined-text-field-outline-width)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-hover-outline-color, var(--mat-app-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-focus-outline-color, var(--mat-app-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-disabled-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-outline-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-hover-outline-color, var(--mat-app-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-focus-outline-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mdc-outlined-text-field-focus-outline-width)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),100% - max(12px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)))*2)}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none;--mat-form-field-notch-max-width: 100%}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:""}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mdc-filled-text-field-active-indicator-height)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-active-indicator-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-hover-active-indicator-color, var(--mat-app-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-disabled-active-indicator-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-active-indicator-color, var(--mat-app-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-hover-active-indicator-color, var(--mat-app-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mdc-filled-text-field-focus-active-indicator-height)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-focus-active-indicator-color, var(--mat-app-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-error-focus-active-indicator-color, var(--mat-app-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height);padding-top:var(--mat-form-field-filled-with-label-container-padding-top);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding);padding-bottom:var(--mat-form-field-container-vertical-padding)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:"";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-app-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-app-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-app-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-app-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-app-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-app-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color)}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-app-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-app-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-app-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-app-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-app-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-app-body-large-weight))}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-app-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color)}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color)}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-app-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-app-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-app-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}'],encapsulation:2,data:{animation:[mb.transitionMessages]},changeDetection:0})}}return i})(),bi=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[ne,kt,ld,ne]})}}return i})();var ih=Bt({passive:!0}),nh=(()=>{class i{constructor(e,t){this._platform=e,this._ngZone=t,this._monitoredElements=new Map}monitor(e){if(!this._platform.isBrowser)return mt;let t=it(e),o=this._monitoredElements.get(t);if(o)return o.subject;let a=new D,r="cdk-text-field-autofilled",s=l=>{l.animationName==="cdk-text-field-autofill-start"&&!t.classList.contains(r)?(t.classList.add(r),this._ngZone.run(()=>a.next({target:l.target,isAutofilled:!0}))):l.animationName==="cdk-text-field-autofill-end"&&t.classList.contains(r)&&(t.classList.remove(r),this._ngZone.run(()=>a.next({target:l.target,isAutofilled:!1})))};return this._ngZone.runOutsideAngular(()=>{t.addEventListener("animationstart",s,ih),t.classList.add("cdk-text-field-autofill-monitored")}),this._monitoredElements.set(t,{subject:a,unlisten:()=>{t.removeEventListener("animationstart",s,ih)}}),a}stopMonitoring(e){let t=it(e),o=this._monitoredElements.get(t);o&&(o.unlisten(),o.subject.complete(),t.classList.remove("cdk-text-field-autofill-monitored"),t.classList.remove("cdk-text-field-autofilled"),this._monitoredElements.delete(t))}ngOnDestroy(){this._monitoredElements.forEach((e,t)=>this.stopMonitoring(t))}static{this.\u0275fac=function(t){return new(t||i)(p(se),p(I))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var oh=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({})}}return i})();var hh=(()=>{class i{constructor(e,t){this._renderer=e,this._elementRef=t,this.onChange=o=>{},this.onTouched=()=>{}}setProperty(e,t){this._renderer.setProperty(this._elementRef.nativeElement,e,t)}registerOnTouched(e){this.onTouched=e}registerOnChange(e){this.onChange=e}setDisabledState(e){this.setProperty("disabled",e)}static{this.\u0275fac=function(t){return new(t||i)(c(yo),c(A))}}static{this.\u0275dir=k({type:i})}}return i})(),_b=(()=>{class i extends hh{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275dir=k({type:i,features:[Z]})}}return i})(),Yt=new w("");var vb={provide:Yt,useExisting:Le(()=>wa),multi:!0};function wb(){let i=Ii()?Ii().getUserAgent():"";return/android (\d+)/.test(i.toLowerCase())}var kb=new w(""),wa=(()=>{class i extends hh{constructor(e,t,o){super(e,t),this._compositionMode=o,this._composing=!1,this._compositionMode==null&&(this._compositionMode=!wb())}writeValue(e){let t=e??"";this.setProperty("value",t)}_handleInput(e){(!this._compositionMode||this._compositionMode&&!this._composing)&&this.onChange(e)}_compositionStart(){this._composing=!0}_compositionEnd(e){this._composing=!1,this._compositionMode&&this.onChange(e)}static{this.\u0275fac=function(t){return new(t||i)(c(yo),c(A),c(kb,8))}}static{this.\u0275dir=k({type:i,selectors:[["input","formControlName","",3,"type","checkbox"],["textarea","formControlName",""],["input","formControl","",3,"type","checkbox"],["textarea","formControl",""],["input","ngModel","",3,"type","checkbox"],["textarea","ngModel",""],["","ngDefaultControl",""]],hostBindings:function(t,o){t&1&&H("input",function(r){return o._handleInput(r.target.value)})("blur",function(){return o.onTouched()})("compositionstart",function(){return o._compositionStart()})("compositionend",function(r){return o._compositionEnd(r.target.value)})},features:[W([vb]),Z]})}}return i})();function Wt(i){return i==null||(typeof i=="string"||Array.isArray(i))&&i.length===0}function uh(i){return i!=null&&typeof i.length=="number"}var tn=new w(""),ka=new w(""),xb=/^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,Ut=class{static min(n){return Cb(n)}static max(n){return Sb(n)}static required(n){return Db(n)}static requiredTrue(n){return Ib(n)}static email(n){return Ab(n)}static minLength(n){return Mb(n)}static maxLength(n){return Tb(n)}static pattern(n){return Eb(n)}static nullValidator(n){return mh(n)}static compose(n){return _h(n)}static composeAsync(n){return vh(n)}};function Cb(i){return n=>{if(Wt(n.value)||Wt(i))return null;let e=parseFloat(n.value);return!isNaN(e)&&e<i?{min:{min:i,actual:n.value}}:null}}function Sb(i){return n=>{if(Wt(n.value)||Wt(i))return null;let e=parseFloat(n.value);return!isNaN(e)&&e>i?{max:{max:i,actual:n.value}}:null}}function Db(i){return Wt(i.value)?{required:!0}:null}function Ib(i){return i.value===!0?null:{required:!0}}function Ab(i){return Wt(i.value)||xb.test(i.value)?null:{email:!0}}function Mb(i){return n=>Wt(n.value)||!uh(n.value)?null:n.value.length<i?{minlength:{requiredLength:i,actualLength:n.value.length}}:null}function Tb(i){return n=>uh(n.value)&&n.value.length>i?{maxlength:{requiredLength:i,actualLength:n.value.length}}:null}function Eb(i){if(!i)return mh;let n,e;return typeof i=="string"?(e="",i.charAt(0)!=="^"&&(e+="^"),e+=i,i.charAt(i.length-1)!=="$"&&(e+="$"),n=new RegExp(e)):(e=i.toString(),n=i),t=>{if(Wt(t.value))return null;let o=t.value;return n.test(o)?null:{pattern:{requiredPattern:e,actualValue:o}}}}function mh(i){return null}function ph(i){return i!=null}function fh(i){return wo(i)?He(i):i}function gh(i){let n={};return i.forEach(e=>{n=e!=null?_(_({},n),e):n}),Object.keys(n).length===0?null:n}function bh(i,n){return n.map(e=>e(i))}function Rb(i){return!i.validate}function yh(i){return i.map(n=>Rb(n)?n:e=>n.validate(e))}function _h(i){if(!i)return null;let n=i.filter(ph);return n.length==0?null:function(e){return gh(bh(e,n))}}function xs(i){return i!=null?_h(yh(i)):null}function vh(i){if(!i)return null;let n=i.filter(ph);return n.length==0?null:function(e){let t=bh(e,n).map(fh);return po(t).pipe(E(gh))}}function Cs(i){return i!=null?vh(yh(i)):null}function ah(i,n){return i===null?[n]:Array.isArray(i)?[...i,n]:[i,n]}function wh(i){return i._rawValidators}function kh(i){return i._rawAsyncValidators}function vs(i){return i?Array.isArray(i)?i:[i]:[]}function ua(i,n){return Array.isArray(i)?i.includes(n):i===n}function rh(i,n){let e=vs(n);return vs(i).forEach(o=>{ua(e,o)||e.push(o)}),e}function sh(i,n){return vs(n).filter(e=>!ua(i,e))}var ma=class{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(n){this._rawValidators=n||[],this._composedValidatorFn=xs(this._rawValidators)}_setAsyncValidators(n){this._rawAsyncValidators=n||[],this._composedAsyncValidatorFn=Cs(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(n){this._onDestroyCallbacks.push(n)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(n=>n()),this._onDestroyCallbacks=[]}reset(n=void 0){this.control&&this.control.reset(n)}hasError(n,e){return this.control?this.control.hasError(n,e):!1}getError(n,e){return this.control?this.control.getError(n,e):null}},Vt=class extends ma{get formDirective(){return null}get path(){return null}},Ke=class extends ma{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}},pa=class{constructor(n){this._cd=n}get isTouched(){return this._cd?.control?._touched?.(),!!this._cd?.control?.touched}get isUntouched(){return!!this._cd?.control?.untouched}get isPristine(){return this._cd?.control?._pristine?.(),!!this._cd?.control?.pristine}get isDirty(){return!!this._cd?.control?.dirty}get isValid(){return this._cd?.control?._status?.(),!!this._cd?.control?.valid}get isInvalid(){return!!this._cd?.control?.invalid}get isPending(){return!!this._cd?.control?.pending}get isSubmitted(){return this._cd?._submitted?.(),!!this._cd?.submitted}},qb={"[class.ng-untouched]":"isUntouched","[class.ng-touched]":"isTouched","[class.ng-pristine]":"isPristine","[class.ng-dirty]":"isDirty","[class.ng-valid]":"isValid","[class.ng-invalid]":"isInvalid","[class.ng-pending]":"isPending"},pC=me(_({},qb),{"[class.ng-submitted]":"isSubmitted"}),xh=(()=>{class i extends pa{constructor(e){super(e)}static{this.\u0275fac=function(t){return new(t||i)(c(Ke,2))}}static{this.\u0275dir=k({type:i,selectors:[["","formControlName",""],["","ngModel",""],["","formControl",""]],hostVars:14,hostBindings:function(t,o){t&2&&z("ng-untouched",o.isUntouched)("ng-touched",o.isTouched)("ng-pristine",o.isPristine)("ng-dirty",o.isDirty)("ng-valid",o.isValid)("ng-invalid",o.isInvalid)("ng-pending",o.isPending)},features:[Z]})}}return i})(),Ch=(()=>{class i extends pa{constructor(e){super(e)}static{this.\u0275fac=function(t){return new(t||i)(c(Vt,10))}}static{this.\u0275dir=k({type:i,selectors:[["","formGroupName",""],["","formArrayName",""],["","ngModelGroup",""],["","formGroup",""],["form",3,"ngNoForm",""],["","ngForm",""]],hostVars:16,hostBindings:function(t,o){t&2&&z("ng-untouched",o.isUntouched)("ng-touched",o.isTouched)("ng-pristine",o.isPristine)("ng-dirty",o.isDirty)("ng-valid",o.isValid)("ng-invalid",o.isInvalid)("ng-pending",o.isPending)("ng-submitted",o.isSubmitted)},features:[Z]})}}return i})();var io="VALID",ha="INVALID",Xi="PENDING",no="DISABLED",Gt=class{},fa=class extends Gt{constructor(n,e){super(),this.value=n,this.source=e}},ao=class extends Gt{constructor(n,e){super(),this.pristine=n,this.source=e}},ro=class extends Gt{constructor(n,e){super(),this.touched=n,this.source=e}},en=class extends Gt{constructor(n,e){super(),this.status=n,this.source=e}},ws=class extends Gt{constructor(n){super(),this.source=n}},ks=class extends Gt{constructor(n){super(),this.source=n}};function Sh(i){return(xa(i)?i.validators:i)||null}function Ob(i){return Array.isArray(i)?xs(i):i||null}function Dh(i,n){return(xa(n)?n.asyncValidators:i)||null}function Fb(i){return Array.isArray(i)?Cs(i):i||null}function xa(i){return i!=null&&!Array.isArray(i)&&typeof i=="object"}function Pb(i,n,e){let t=i.controls;if(!(n?Object.keys(t):t).length)throw new fe(1e3,"");if(!t[e])throw new fe(1001,"")}function Bb(i,n,e){i._forEachChild((t,o)=>{if(e[o]===void 0)throw new fe(1002,"")})}var ga=class{constructor(n,e){this._pendingDirty=!1,this._hasOwnPendingAsyncValidator=null,this._pendingTouched=!1,this._onCollectionChange=()=>{},this._parent=null,this._status=wt(()=>this.statusReactive()),this.statusReactive=Ot(void 0),this._pristine=wt(()=>this.pristineReactive()),this.pristineReactive=Ot(!0),this._touched=wt(()=>this.touchedReactive()),this.touchedReactive=Ot(!1),this._events=new D,this.events=this._events.asObservable(),this._onDisabledChange=[],this._assignValidators(n),this._assignAsyncValidators(e)}get validator(){return this._composedValidatorFn}set validator(n){this._rawValidators=this._composedValidatorFn=n}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(n){this._rawAsyncValidators=this._composedAsyncValidatorFn=n}get parent(){return this._parent}get status(){return lt(this.statusReactive)}set status(n){lt(()=>this.statusReactive.set(n))}get valid(){return this.status===io}get invalid(){return this.status===ha}get pending(){return this.status==Xi}get disabled(){return this.status===no}get enabled(){return this.status!==no}get pristine(){return lt(this.pristineReactive)}set pristine(n){lt(()=>this.pristineReactive.set(n))}get dirty(){return!this.pristine}get touched(){return lt(this.touchedReactive)}set touched(n){lt(()=>this.touchedReactive.set(n))}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(n){this._assignValidators(n)}setAsyncValidators(n){this._assignAsyncValidators(n)}addValidators(n){this.setValidators(rh(n,this._rawValidators))}addAsyncValidators(n){this.setAsyncValidators(rh(n,this._rawAsyncValidators))}removeValidators(n){this.setValidators(sh(n,this._rawValidators))}removeAsyncValidators(n){this.setAsyncValidators(sh(n,this._rawAsyncValidators))}hasValidator(n){return ua(this._rawValidators,n)}hasAsyncValidator(n){return ua(this._rawAsyncValidators,n)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(n={}){let e=this.touched===!1;this.touched=!0;let t=n.sourceControl??this;this._parent&&!n.onlySelf&&this._parent.markAsTouched(me(_({},n),{sourceControl:t})),e&&n.emitEvent!==!1&&this._events.next(new ro(!0,t))}markAllAsTouched(n={}){this.markAsTouched({onlySelf:!0,emitEvent:n.emitEvent,sourceControl:this}),this._forEachChild(e=>e.markAllAsTouched(n))}markAsUntouched(n={}){let e=this.touched===!0;this.touched=!1,this._pendingTouched=!1;let t=n.sourceControl??this;this._forEachChild(o=>{o.markAsUntouched({onlySelf:!0,emitEvent:n.emitEvent,sourceControl:t})}),this._parent&&!n.onlySelf&&this._parent._updateTouched(n,t),e&&n.emitEvent!==!1&&this._events.next(new ro(!1,t))}markAsDirty(n={}){let e=this.pristine===!0;this.pristine=!1;let t=n.sourceControl??this;this._parent&&!n.onlySelf&&this._parent.markAsDirty(me(_({},n),{sourceControl:t})),e&&n.emitEvent!==!1&&this._events.next(new ao(!1,t))}markAsPristine(n={}){let e=this.pristine===!1;this.pristine=!0,this._pendingDirty=!1;let t=n.sourceControl??this;this._forEachChild(o=>{o.markAsPristine({onlySelf:!0,emitEvent:n.emitEvent})}),this._parent&&!n.onlySelf&&this._parent._updatePristine(n,t),e&&n.emitEvent!==!1&&this._events.next(new ao(!0,t))}markAsPending(n={}){this.status=Xi;let e=n.sourceControl??this;n.emitEvent!==!1&&(this._events.next(new en(this.status,e)),this.statusChanges.emit(this.status)),this._parent&&!n.onlySelf&&this._parent.markAsPending(me(_({},n),{sourceControl:e}))}disable(n={}){let e=this._parentMarkedDirty(n.onlySelf);this.status=no,this.errors=null,this._forEachChild(o=>{o.disable(me(_({},n),{onlySelf:!0}))}),this._updateValue();let t=n.sourceControl??this;n.emitEvent!==!1&&(this._events.next(new fa(this.value,t)),this._events.next(new en(this.status,t)),this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(me(_({},n),{skipPristineCheck:e}),this),this._onDisabledChange.forEach(o=>o(!0))}enable(n={}){let e=this._parentMarkedDirty(n.onlySelf);this.status=io,this._forEachChild(t=>{t.enable(me(_({},n),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:n.emitEvent}),this._updateAncestors(me(_({},n),{skipPristineCheck:e}),this),this._onDisabledChange.forEach(t=>t(!1))}_updateAncestors(n,e){this._parent&&!n.onlySelf&&(this._parent.updateValueAndValidity(n),n.skipPristineCheck||this._parent._updatePristine({},e),this._parent._updateTouched({},e))}setParent(n){this._parent=n}getRawValue(){return this.value}updateValueAndValidity(n={}){if(this._setInitialStatus(),this._updateValue(),this.enabled){let t=this._cancelExistingSubscription();this.errors=this._runValidator(),this.status=this._calculateStatus(),(this.status===io||this.status===Xi)&&this._runAsyncValidator(t,n.emitEvent)}let e=n.sourceControl??this;n.emitEvent!==!1&&(this._events.next(new fa(this.value,e)),this._events.next(new en(this.status,e)),this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!n.onlySelf&&this._parent.updateValueAndValidity(me(_({},n),{sourceControl:e}))}_updateTreeValidity(n={emitEvent:!0}){this._forEachChild(e=>e._updateTreeValidity(n)),this.updateValueAndValidity({onlySelf:!0,emitEvent:n.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?no:io}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(n,e){if(this.asyncValidator){this.status=Xi,this._hasOwnPendingAsyncValidator={emitEvent:e!==!1};let t=fh(this.asyncValidator(this));this._asyncValidationSubscription=t.subscribe(o=>{this._hasOwnPendingAsyncValidator=null,this.setErrors(o,{emitEvent:e,shouldHaveEmitted:n})})}}_cancelExistingSubscription(){if(this._asyncValidationSubscription){this._asyncValidationSubscription.unsubscribe();let n=this._hasOwnPendingAsyncValidator?.emitEvent??!1;return this._hasOwnPendingAsyncValidator=null,n}return!1}setErrors(n,e={}){this.errors=n,this._updateControlsErrors(e.emitEvent!==!1,this,e.shouldHaveEmitted)}get(n){let e=n;return e==null||(Array.isArray(e)||(e=e.split(".")),e.length===0)?null:e.reduce((t,o)=>t&&t._find(o),this)}getError(n,e){let t=e?this.get(e):this;return t&&t.errors?t.errors[n]:null}hasError(n,e){return!!this.getError(n,e)}get root(){let n=this;for(;n._parent;)n=n._parent;return n}_updateControlsErrors(n,e,t){this.status=this._calculateStatus(),n&&this.statusChanges.emit(this.status),(n||t)&&this._events.next(new en(this.status,e)),this._parent&&this._parent._updateControlsErrors(n,e,t)}_initObservables(){this.valueChanges=new N,this.statusChanges=new N}_calculateStatus(){return this._allControlsDisabled()?no:this.errors?ha:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(Xi)?Xi:this._anyControlsHaveStatus(ha)?ha:io}_anyControlsHaveStatus(n){return this._anyControls(e=>e.status===n)}_anyControlsDirty(){return this._anyControls(n=>n.dirty)}_anyControlsTouched(){return this._anyControls(n=>n.touched)}_updatePristine(n,e){let t=!this._anyControlsDirty(),o=this.pristine!==t;this.pristine=t,this._parent&&!n.onlySelf&&this._parent._updatePristine(n,e),o&&this._events.next(new ao(this.pristine,e))}_updateTouched(n={},e){this.touched=this._anyControlsTouched(),this._events.next(new ro(this.touched,e)),this._parent&&!n.onlySelf&&this._parent._updateTouched(n,e)}_registerOnCollectionChange(n){this._onCollectionChange=n}_setUpdateStrategy(n){xa(n)&&n.updateOn!=null&&(this._updateOn=n.updateOn)}_parentMarkedDirty(n){let e=this._parent&&this._parent.dirty;return!n&&!!e&&!this._parent._anyControlsDirty()}_find(n){return null}_assignValidators(n){this._rawValidators=Array.isArray(n)?n.slice():n,this._composedValidatorFn=Ob(this._rawValidators)}_assignAsyncValidators(n){this._rawAsyncValidators=Array.isArray(n)?n.slice():n,this._composedAsyncValidatorFn=Fb(this._rawAsyncValidators)}},ba=class extends ga{constructor(n,e,t){super(Sh(e),Dh(t,e)),this.controls=n,this._initObservables(),this._setUpdateStrategy(e),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!this.asyncValidator})}registerControl(n,e){return this.controls[n]?this.controls[n]:(this.controls[n]=e,e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange),e)}addControl(n,e,t={}){this.registerControl(n,e),this.updateValueAndValidity({emitEvent:t.emitEvent}),this._onCollectionChange()}removeControl(n,e={}){this.controls[n]&&this.controls[n]._registerOnCollectionChange(()=>{}),delete this.controls[n],this.updateValueAndValidity({emitEvent:e.emitEvent}),this._onCollectionChange()}setControl(n,e,t={}){this.controls[n]&&this.controls[n]._registerOnCollectionChange(()=>{}),delete this.controls[n],e&&this.registerControl(n,e),this.updateValueAndValidity({emitEvent:t.emitEvent}),this._onCollectionChange()}contains(n){return this.controls.hasOwnProperty(n)&&this.controls[n].enabled}setValue(n,e={}){Bb(this,!0,n),Object.keys(n).forEach(t=>{Pb(this,!0,t),this.controls[t].setValue(n[t],{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e)}patchValue(n,e={}){n!=null&&(Object.keys(n).forEach(t=>{let o=this.controls[t];o&&o.patchValue(n[t],{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e))}reset(n={},e={}){this._forEachChild((t,o)=>{t.reset(n?n[o]:null,{onlySelf:!0,emitEvent:e.emitEvent})}),this._updatePristine(e,this),this._updateTouched(e,this),this.updateValueAndValidity(e)}getRawValue(){return this._reduceChildren({},(n,e,t)=>(n[t]=e.getRawValue(),n))}_syncPendingControls(){let n=this._reduceChildren(!1,(e,t)=>t._syncPendingControls()?!0:e);return n&&this.updateValueAndValidity({onlySelf:!0}),n}_forEachChild(n){Object.keys(this.controls).forEach(e=>{let t=this.controls[e];t&&n(t,e)})}_setUpControls(){this._forEachChild(n=>{n.setParent(this),n._registerOnCollectionChange(this._onCollectionChange)})}_updateValue(){this.value=this._reduceValue()}_anyControls(n){for(let[e,t]of Object.entries(this.controls))if(this.contains(e)&&n(t))return!0;return!1}_reduceValue(){let n={};return this._reduceChildren(n,(e,t,o)=>((t.enabled||this.disabled)&&(e[o]=t.value),e))}_reduceChildren(n,e){let t=n;return this._forEachChild((o,a)=>{t=e(t,o,a)}),t}_allControlsDisabled(){for(let n of Object.keys(this.controls))if(this.controls[n].enabled)return!1;return Object.keys(this.controls).length>0||this.disabled}_find(n){return this.controls.hasOwnProperty(n)?this.controls[n]:null}};var nn=new w("CallSetDisabledState",{providedIn:"root",factory:()=>Ca}),Ca="always";function Nb(i,n){return[...n.path,i]}function so(i,n,e=Ca){Ss(i,n),n.valueAccessor.writeValue(i.value),(i.disabled||e==="always")&&n.valueAccessor.setDisabledState?.(i.disabled),Lb(i,n),jb(i,n),zb(i,n),Hb(i,n)}function ya(i,n,e=!0){let t=()=>{};n.valueAccessor&&(n.valueAccessor.registerOnChange(t),n.valueAccessor.registerOnTouched(t)),va(i,n),i&&(n._invokeOnDestroyCallbacks(),i._registerOnCollectionChange(()=>{}))}function _a(i,n){i.forEach(e=>{e.registerOnValidatorChange&&e.registerOnValidatorChange(n)})}function Hb(i,n){if(n.valueAccessor.setDisabledState){let e=t=>{n.valueAccessor.setDisabledState(t)};i.registerOnDisabledChange(e),n._registerOnDestroy(()=>{i._unregisterOnDisabledChange(e)})}}function Ss(i,n){let e=wh(i);n.validator!==null?i.setValidators(ah(e,n.validator)):typeof e=="function"&&i.setValidators([e]);let t=kh(i);n.asyncValidator!==null?i.setAsyncValidators(ah(t,n.asyncValidator)):typeof t=="function"&&i.setAsyncValidators([t]);let o=()=>i.updateValueAndValidity();_a(n._rawValidators,o),_a(n._rawAsyncValidators,o)}function va(i,n){let e=!1;if(i!==null){if(n.validator!==null){let o=wh(i);if(Array.isArray(o)&&o.length>0){let a=o.filter(r=>r!==n.validator);a.length!==o.length&&(e=!0,i.setValidators(a))}}if(n.asyncValidator!==null){let o=kh(i);if(Array.isArray(o)&&o.length>0){let a=o.filter(r=>r!==n.asyncValidator);a.length!==o.length&&(e=!0,i.setAsyncValidators(a))}}}let t=()=>{};return _a(n._rawValidators,t),_a(n._rawAsyncValidators,t),e}function Lb(i,n){n.valueAccessor.registerOnChange(e=>{i._pendingValue=e,i._pendingChange=!0,i._pendingDirty=!0,i.updateOn==="change"&&Ih(i,n)})}function zb(i,n){n.valueAccessor.registerOnTouched(()=>{i._pendingTouched=!0,i.updateOn==="blur"&&i._pendingChange&&Ih(i,n),i.updateOn!=="submit"&&i.markAsTouched()})}function Ih(i,n){i._pendingDirty&&i.markAsDirty(),i.setValue(i._pendingValue,{emitModelToViewChange:!1}),n.viewToModelUpdate(i._pendingValue),i._pendingChange=!1}function jb(i,n){let e=(t,o)=>{n.valueAccessor.writeValue(t),o&&n.viewToModelUpdate(t)};i.registerOnChange(e),n._registerOnDestroy(()=>{i._unregisterOnChange(e)})}function Ah(i,n){i==null,Ss(i,n)}function Wb(i,n){return va(i,n)}function Mh(i,n){if(!i.hasOwnProperty("model"))return!1;let e=i.model;return e.isFirstChange()?!0:!Object.is(n,e.currentValue)}function Ub(i){return Object.getPrototypeOf(i.constructor)===_b}function Th(i,n){i._syncPendingControls(),n.forEach(e=>{let t=e.control;t.updateOn==="submit"&&t._pendingChange&&(e.viewToModelUpdate(t._pendingValue),t._pendingChange=!1)})}function Eh(i,n){if(!n)return null;Array.isArray(n);let e,t,o;return n.forEach(a=>{a.constructor===wa?e=a:Ub(a)?t=a:o=a}),o||t||e||null}function Vb(i,n){let e=i.indexOf(n);e>-1&&i.splice(e,1)}var Gb={provide:Vt,useExisting:Le(()=>Tt)},oo=Promise.resolve(),Tt=(()=>{class i extends Vt{get submitted(){return lt(this.submittedReactive)}constructor(e,t,o){super(),this.callSetDisabledState=o,this._submitted=wt(()=>this.submittedReactive()),this.submittedReactive=Ot(!1),this._directives=new Set,this.ngSubmit=new N,this.form=new ba({},xs(e),Cs(t))}ngAfterViewInit(){this._setUpdateStrategy()}get formDirective(){return this}get control(){return this.form}get path(){return[]}get controls(){return this.form.controls}addControl(e){oo.then(()=>{let t=this._findContainer(e.path);e.control=t.registerControl(e.name,e.control),so(e.control,e,this.callSetDisabledState),e.control.updateValueAndValidity({emitEvent:!1}),this._directives.add(e)})}getControl(e){return this.form.get(e.path)}removeControl(e){oo.then(()=>{let t=this._findContainer(e.path);t&&t.removeControl(e.name),this._directives.delete(e)})}addFormGroup(e){oo.then(()=>{let t=this._findContainer(e.path),o=new ba({});Ah(o,e),t.registerControl(e.name,o),o.updateValueAndValidity({emitEvent:!1})})}removeFormGroup(e){oo.then(()=>{let t=this._findContainer(e.path);t&&t.removeControl(e.name)})}getFormGroup(e){return this.form.get(e.path)}updateModel(e,t){oo.then(()=>{this.form.get(e.path).setValue(t)})}setValue(e){this.control.setValue(e)}onSubmit(e){return this.submittedReactive.set(!0),Th(this.form,this._directives),this.ngSubmit.emit(e),e?.target?.method==="dialog"}onReset(){this.resetForm()}resetForm(e=void 0){this.form.reset(e),this.submittedReactive.set(!1)}_setUpdateStrategy(){this.options&&this.options.updateOn!=null&&(this.form._updateOn=this.options.updateOn)}_findContainer(e){return e.pop(),e.length?this.form.get(e):this.form}static{this.\u0275fac=function(t){return new(t||i)(c(tn,10),c(ka,10),c(nn,8))}}static{this.\u0275dir=k({type:i,selectors:[["form",3,"ngNoForm","",3,"formGroup",""],["ng-form"],["","ngForm",""]],hostBindings:function(t,o){t&1&&H("submit",function(r){return o.onSubmit(r)})("reset",function(){return o.onReset()})},inputs:{options:[0,"ngFormOptions","options"]},outputs:{ngSubmit:"ngSubmit"},exportAs:["ngForm"],features:[W([Gb]),Z]})}}return i})();function lh(i,n){let e=i.indexOf(n);e>-1&&i.splice(e,1)}function ch(i){return typeof i=="object"&&i!==null&&Object.keys(i).length===2&&"value"in i&&"disabled"in i}var yi=class extends ga{constructor(n=null,e,t){super(Sh(e),Dh(t,e)),this.defaultValue=null,this._onChange=[],this._pendingChange=!1,this._applyFormState(n),this._setUpdateStrategy(e),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!this.asyncValidator}),xa(e)&&(e.nonNullable||e.initialValueIsDefault)&&(ch(n)?this.defaultValue=n.value:this.defaultValue=n)}setValue(n,e={}){this.value=this._pendingValue=n,this._onChange.length&&e.emitModelToViewChange!==!1&&this._onChange.forEach(t=>t(this.value,e.emitViewToModelChange!==!1)),this.updateValueAndValidity(e)}patchValue(n,e={}){this.setValue(n,e)}reset(n=this.defaultValue,e={}){this._applyFormState(n),this.markAsPristine(e),this.markAsUntouched(e),this.setValue(this.value,e),this._pendingChange=!1}_updateValue(){}_anyControls(n){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(n){this._onChange.push(n)}_unregisterOnChange(n){lh(this._onChange,n)}registerOnDisabledChange(n){this._onDisabledChange.push(n)}_unregisterOnDisabledChange(n){lh(this._onDisabledChange,n)}_forEachChild(n){}_syncPendingControls(){return this.updateOn==="submit"&&(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),this._pendingChange)?(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),!0):!1}_applyFormState(n){ch(n)?(this.value=this._pendingValue=n.value,n.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=n}};var Yb=i=>i instanceof yi;var Kb={provide:Ke,useExisting:Le(()=>Ds)},dh=Promise.resolve(),Ds=(()=>{class i extends Ke{constructor(e,t,o,a,r,s){super(),this._changeDetectorRef=r,this.callSetDisabledState=s,this.control=new yi,this._registered=!1,this.name="",this.update=new N,this._parent=e,this._setValidators(t),this._setAsyncValidators(o),this.valueAccessor=Eh(this,a)}ngOnChanges(e){if(this._checkForErrors(),!this._registered||"name"in e){if(this._registered&&(this._checkName(),this.formDirective)){let t=e.name.previousValue;this.formDirective.removeControl({name:t,path:this._getPath(t)})}this._setUpControl()}"isDisabled"in e&&this._updateDisabled(e),Mh(e,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}get path(){return this._getPath(this.name)}get formDirective(){return this._parent?this._parent.formDirective:null}viewToModelUpdate(e){this.viewModel=e,this.update.emit(e)}_setUpControl(){this._setUpdateStrategy(),this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0}_setUpdateStrategy(){this.options&&this.options.updateOn!=null&&(this.control._updateOn=this.options.updateOn)}_isStandalone(){return!this._parent||!!(this.options&&this.options.standalone)}_setUpStandalone(){so(this.control,this,this.callSetDisabledState),this.control.updateValueAndValidity({emitEvent:!1})}_checkForErrors(){this._isStandalone()||this._checkParentType(),this._checkName()}_checkParentType(){}_checkName(){this.options&&this.options.name&&(this.name=this.options.name),!this._isStandalone()&&this.name}_updateValue(e){dh.then(()=>{this.control.setValue(e,{emitViewToModelChange:!1}),this._changeDetectorRef?.markForCheck()})}_updateDisabled(e){let t=e.isDisabled.currentValue,o=t!==0&&M(t);dh.then(()=>{o&&!this.control.disabled?this.control.disable():!o&&this.control.disabled&&this.control.enable(),this._changeDetectorRef?.markForCheck()})}_getPath(e){return this._parent?Nb(e,this._parent):[e]}static{this.\u0275fac=function(t){return new(t||i)(c(Vt,9),c(tn,10),c(ka,10),c(Yt,10),c(de,8),c(nn,8))}}static{this.\u0275dir=k({type:i,selectors:[["","ngModel","",3,"formControlName","",3,"formControl",""]],inputs:{name:"name",isDisabled:[0,"disabled","isDisabled"],model:[0,"ngModel","model"],options:[0,"ngModelOptions","options"]},outputs:{update:"ngModelChange"},exportAs:["ngModel"],features:[W([Kb]),Z,be]})}}return i})(),Rh=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275dir=k({type:i,selectors:[["form",3,"ngNoForm","",3,"ngNativeValidate",""]],hostAttrs:["novalidate",""]})}}return i})();var qh=new w(""),Zb={provide:Ke,useExisting:Le(()=>Is)},Is=(()=>{class i extends Ke{set isDisabled(e){}static{this._ngModelWarningSentOnce=!1}constructor(e,t,o,a,r){super(),this._ngModelWarningConfig=a,this.callSetDisabledState=r,this.update=new N,this._ngModelWarningSent=!1,this._setValidators(e),this._setAsyncValidators(t),this.valueAccessor=Eh(this,o)}ngOnChanges(e){if(this._isControlChanged(e)){let t=e.form.previousValue;t&&ya(t,this,!1),so(this.form,this,this.callSetDisabledState),this.form.updateValueAndValidity({emitEvent:!1})}Mh(e,this.viewModel)&&(this.form.setValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.form&&ya(this.form,this,!1)}get path(){return[]}get control(){return this.form}viewToModelUpdate(e){this.viewModel=e,this.update.emit(e)}_isControlChanged(e){return e.hasOwnProperty("form")}static{this.\u0275fac=function(t){return new(t||i)(c(tn,10),c(ka,10),c(Yt,10),c(qh,8),c(nn,8))}}static{this.\u0275dir=k({type:i,selectors:[["","formControl",""]],inputs:{form:[0,"formControl","form"],isDisabled:[0,"disabled","isDisabled"],model:[0,"ngModel","model"]},outputs:{update:"ngModelChange"},exportAs:["ngForm"],features:[W([Zb]),Z,be]})}}return i})(),$b={provide:Vt,useExisting:Le(()=>_i)},_i=(()=>{class i extends Vt{get submitted(){return lt(this._submittedReactive)}set submitted(e){this._submittedReactive.set(e)}constructor(e,t,o){super(),this.callSetDisabledState=o,this._submitted=wt(()=>this._submittedReactive()),this._submittedReactive=Ot(!1),this._onCollectionChange=()=>this._updateDomValue(),this.directives=[],this.form=null,this.ngSubmit=new N,this._setValidators(e),this._setAsyncValidators(t)}ngOnChanges(e){this._checkFormPresent(),e.hasOwnProperty("form")&&(this._updateValidators(),this._updateDomValue(),this._updateRegistrations(),this._oldForm=this.form)}ngOnDestroy(){this.form&&(va(this.form,this),this.form._onCollectionChange===this._onCollectionChange&&this.form._registerOnCollectionChange(()=>{}))}get formDirective(){return this}get control(){return this.form}get path(){return[]}addControl(e){let t=this.form.get(e.path);return so(t,e,this.callSetDisabledState),t.updateValueAndValidity({emitEvent:!1}),this.directives.push(e),t}getControl(e){return this.form.get(e.path)}removeControl(e){ya(e.control||null,e,!1),Vb(this.directives,e)}addFormGroup(e){this._setUpFormContainer(e)}removeFormGroup(e){this._cleanUpFormContainer(e)}getFormGroup(e){return this.form.get(e.path)}addFormArray(e){this._setUpFormContainer(e)}removeFormArray(e){this._cleanUpFormContainer(e)}getFormArray(e){return this.form.get(e.path)}updateModel(e,t){this.form.get(e.path).setValue(t)}onSubmit(e){return this._submittedReactive.set(!0),Th(this.form,this.directives),this.ngSubmit.emit(e),this.form._events.next(new ws(this.control)),e?.target?.method==="dialog"}onReset(){this.resetForm()}resetForm(e=void 0){this.form.reset(e),this._submittedReactive.set(!1),this.form._events.next(new ks(this.form))}_updateDomValue(){this.directives.forEach(e=>{let t=e.control,o=this.form.get(e.path);t!==o&&(ya(t||null,e),Yb(o)&&(so(o,e,this.callSetDisabledState),e.control=o))}),this.form._updateTreeValidity({emitEvent:!1})}_setUpFormContainer(e){let t=this.form.get(e.path);Ah(t,e),t.updateValueAndValidity({emitEvent:!1})}_cleanUpFormContainer(e){if(this.form){let t=this.form.get(e.path);t&&Wb(t,e)&&t.updateValueAndValidity({emitEvent:!1})}}_updateRegistrations(){this.form._registerOnCollectionChange(this._onCollectionChange),this._oldForm&&this._oldForm._registerOnCollectionChange(()=>{})}_updateValidators(){Ss(this.form,this),this._oldForm&&va(this._oldForm,this)}_checkFormPresent(){this.form}static{this.\u0275fac=function(t){return new(t||i)(c(tn,10),c(ka,10),c(nn,8))}}static{this.\u0275dir=k({type:i,selectors:[["","formGroup",""]],hostBindings:function(t,o){t&1&&H("submit",function(r){return o.onSubmit(r)})("reset",function(){return o.onReset()})},inputs:{form:[0,"formGroup","form"]},outputs:{ngSubmit:"ngSubmit"},exportAs:["ngForm"],features:[W([$b]),Z,be]})}}return i})();var Oh=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({})}}return i})();var Fh=(()=>{class i{static withConfig(e){return{ngModule:i,providers:[{provide:nn,useValue:e.callSetDisabledState??Ca}]}}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[Oh]})}}return i})(),Ph=(()=>{class i{static withConfig(e){return{ngModule:i,providers:[{provide:qh,useValue:e.warnOnNgModelWithFormControl??"always"},{provide:nn,useValue:e.callSetDisabledState??Ca}]}}static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[Oh]})}}return i})();var Jb=new w("MAT_INPUT_VALUE_ACCESSOR"),Qb=["button","checkbox","file","hidden","image","radio","range","reset","submit"],Xb=0,Bh=(()=>{class i{get disabled(){return this._disabled}set disabled(e){this._disabled=We(e),this.focused&&(this.focused=!1,this.stateChanges.next())}get id(){return this._id}set id(e){this._id=e||this._uid}get required(){return this._required??this.ngControl?.control?.hasValidator(Ut.required)??!1}set required(e){this._required=We(e)}get type(){return this._type}set type(e){this._type=e||"text",this._validateType(),!this._isTextarea&&ts().has(this._type)&&(this._elementRef.nativeElement.type=this._type),this._ensureWheelDefaultBehavior()}get errorStateMatcher(){return this._errorStateTracker.matcher}set errorStateMatcher(e){this._errorStateTracker.matcher=e}get value(){return this._inputValueAccessor.value}set value(e){e!==this.value&&(this._inputValueAccessor.value=e,this.stateChanges.next())}get readonly(){return this._readonly}set readonly(e){this._readonly=We(e)}get errorState(){return this._errorStateTracker.errorState}set errorState(e){this._errorStateTracker.errorState=e}constructor(e,t,o,a,r,s,l,d,h,u){this._elementRef=e,this._platform=t,this.ngControl=o,this._autofillMonitor=d,this._ngZone=h,this._formField=u,this._uid=`mat-input-${Xb++}`,this._webkitBlinkWheelListenerAttached=!1,this.focused=!1,this.stateChanges=new D,this.controlType="mat-input",this.autofilled=!1,this._disabled=!1,this._type="text",this._readonly=!1,this._neverEmptyInputTypes=["date","datetime","datetime-local","month","time","week"].filter(O=>ts().has(O)),this._iOSKeyupListener=O=>{let U=O.target;!U.value&&U.selectionStart===0&&U.selectionEnd===0&&(U.setSelectionRange(1,1),U.setSelectionRange(0,0))},this._webkitBlinkWheelListener=()=>{};let v=this._elementRef.nativeElement,y=v.nodeName.toLowerCase();this._inputValueAccessor=l||v,this._previousNativeValue=this.value,this.id=this.id,t.IOS&&h.runOutsideAngular(()=>{e.nativeElement.addEventListener("keyup",this._iOSKeyupListener)}),this._errorStateTracker=new zt(s,o,r,a,this.stateChanges),this._isServer=!this._platform.isBrowser,this._isNativeSelect=y==="select",this._isTextarea=y==="textarea",this._isInFormField=!!u,this._isNativeSelect&&(this.controlType=v.multiple?"mat-native-select-multiple":"mat-native-select")}ngAfterViewInit(){this._platform.isBrowser&&this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(e=>{this.autofilled=e.isAutofilled,this.stateChanges.next()})}ngOnChanges(){this.stateChanges.next()}ngOnDestroy(){this.stateChanges.complete(),this._platform.isBrowser&&this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement),this._platform.IOS&&this._elementRef.nativeElement.removeEventListener("keyup",this._iOSKeyupListener),this._webkitBlinkWheelListenerAttached&&this._elementRef.nativeElement.removeEventListener("wheel",this._webkitBlinkWheelListener)}ngDoCheck(){this.ngControl&&(this.updateErrorState(),this.ngControl.disabled!==null&&this.ngControl.disabled!==this.disabled&&(this.disabled=this.ngControl.disabled,this.stateChanges.next())),this._dirtyCheckNativeValue(),this._dirtyCheckPlaceholder()}focus(e){this._elementRef.nativeElement.focus(e)}updateErrorState(){this._errorStateTracker.updateErrorState()}_focusChanged(e){e!==this.focused&&(this.focused=e,this.stateChanges.next())}_onInput(){}_dirtyCheckNativeValue(){let e=this._elementRef.nativeElement.value;this._previousNativeValue!==e&&(this._previousNativeValue=e,this.stateChanges.next())}_dirtyCheckPlaceholder(){let e=this._getPlaceholder();if(e!==this._previousPlaceholder){let t=this._elementRef.nativeElement;this._previousPlaceholder=e,e?t.setAttribute("placeholder",e):t.removeAttribute("placeholder")}}_getPlaceholder(){return this.placeholder||null}_validateType(){Qb.indexOf(this._type)>-1}_isNeverEmpty(){return this._neverEmptyInputTypes.indexOf(this._type)>-1}_isBadInput(){let e=this._elementRef.nativeElement.validity;return e&&e.badInput}get empty(){return!this._isNeverEmpty()&&!this._elementRef.nativeElement.value&&!this._isBadInput()&&!this.autofilled}get shouldLabelFloat(){if(this._isNativeSelect){let e=this._elementRef.nativeElement,t=e.options[0];return this.focused||e.multiple||!this.empty||!!(e.selectedIndex>-1&&t&&t.label)}else return this.focused||!this.empty}setDescribedByIds(e){e.length?this._elementRef.nativeElement.setAttribute("aria-describedby",e.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focused||this.focus()}_isInlineSelect(){let e=this._elementRef.nativeElement;return this._isNativeSelect&&(e.multiple||e.size>1)}_ensureWheelDefaultBehavior(){!this._webkitBlinkWheelListenerAttached&&this._type==="number"&&(this._platform.BLINK||this._platform.WEBKIT)&&(this._ngZone.runOutsideAngular(()=>{this._elementRef.nativeElement.addEventListener("wheel",this._webkitBlinkWheelListener)}),this._webkitBlinkWheelListenerAttached=!0),this._webkitBlinkWheelListenerAttached&&this._type!=="number"&&(this._elementRef.nativeElement.removeEventListener("wheel",this._webkitBlinkWheelListener),this._webkitBlinkWheelListenerAttached=!0)}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(se),c(Ke,10),c(Tt,8),c(_i,8),c(jt),c(Jb,10),c(nh),c(I),c(Mt,8))}}static{this.\u0275dir=k({type:i,selectors:[["input","matInput",""],["textarea","matInput",""],["select","matNativeControl",""],["input","matNativeControl",""],["textarea","matNativeControl",""]],hostAttrs:[1,"mat-mdc-input-element"],hostVars:18,hostBindings:function(t,o){t&1&&H("focus",function(){return o._focusChanged(!0)})("blur",function(){return o._focusChanged(!1)})("input",function(){return o._onInput()}),t&2&&(Je("id",o.id)("disabled",o.disabled)("required",o.required),X("name",o.name||null)("readonly",o.readonly&&!o._isNativeSelect||null)("aria-invalid",o.empty&&o.required?null:o.errorState)("aria-required",o.required)("id",o.id),z("mat-input-server",o._isServer)("mat-mdc-form-field-textarea-control",o._isInFormField&&o._isTextarea)("mat-mdc-form-field-input-control",o._isInFormField)("mdc-text-field__input",o._isInFormField)("mat-mdc-native-select-inline",o._isInlineSelect()))},inputs:{disabled:"disabled",id:"id",placeholder:"placeholder",name:"name",required:"required",type:"type",errorStateMatcher:"errorStateMatcher",userAriaDescribedBy:[0,"aria-describedby","userAriaDescribedBy"],value:"value",readonly:"readonly"},exportAs:["matInput"],standalone:!0,features:[W([{provide:gi,useExisting:i}]),be]})}}return i})(),Nh=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[ne,bi,bi,oh,ne]})}}return i})();var ty=".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}";var iy=["mat-icon-button",""],ny=["*"];var oy=new w("MAT_BUTTON_CONFIG");var ay=[{attribute:"mat-button",mdcClasses:["mdc-button","mat-mdc-button"]},{attribute:"mat-flat-button",mdcClasses:["mdc-button","mdc-button--unelevated","mat-mdc-unelevated-button"]},{attribute:"mat-raised-button",mdcClasses:["mdc-button","mdc-button--raised","mat-mdc-raised-button"]},{attribute:"mat-stroked-button",mdcClasses:["mdc-button","mdc-button--outlined","mat-mdc-outlined-button"]},{attribute:"mat-fab",mdcClasses:["mdc-fab","mat-mdc-fab-base","mat-mdc-fab"]},{attribute:"mat-mini-fab",mdcClasses:["mdc-fab","mat-mdc-fab-base","mdc-fab--mini","mat-mdc-mini-fab"]},{attribute:"mat-icon-button",mdcClasses:["mdc-icon-button","mat-mdc-icon-button"]}],ry=(()=>{class i{get ripple(){return this._rippleLoader?.getRipple(this._elementRef.nativeElement)}set ripple(e){this._rippleLoader?.attachRipple(this._elementRef.nativeElement,e)}get disableRipple(){return this._disableRipple}set disableRipple(e){this._disableRipple=e,this._updateRippleDisabled()}get disabled(){return this._disabled}set disabled(e){this._disabled=e,this._updateRippleDisabled()}constructor(e,t,o,a){this._elementRef=e,this._platform=t,this._ngZone=o,this._animationMode=a,this._focusMonitor=b(pi),this._rippleLoader=b(ia),this._isFab=!1,this._disableRipple=!1,this._disabled=!1;let r=b(oy,{optional:!0}),s=e.nativeElement,l=s.classList;this.disabledInteractive=r?.disabledInteractive??!1,this.color=r?.color??null,this._rippleLoader?.configureRipple(s,{className:"mat-mdc-button-ripple"});for(let{attribute:d,mdcClasses:h}of ay)s.hasAttribute(d)&&l.add(...h)}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0)}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef),this._rippleLoader?.destroyRipple(this._elementRef.nativeElement)}focus(e="program",t){e?this._focusMonitor.focusVia(this._elementRef.nativeElement,e,t):this._elementRef.nativeElement.focus(t)}_getAriaDisabled(){return this.ariaDisabled!=null?this.ariaDisabled:this.disabled&&this.disabledInteractive?!0:null}_getDisabledAttribute(){return this.disabledInteractive||!this.disabled?null:!0}_updateRippleDisabled(){this._rippleLoader?.setDisabled(this._elementRef.nativeElement,this.disableRipple||this.disabled)}static{this.\u0275fac=function(t){fn()}}static{this.\u0275dir=k({type:i,inputs:{color:"color",disableRipple:[2,"disableRipple","disableRipple",M],disabled:[2,"disabled","disabled",M],ariaDisabled:[2,"aria-disabled","ariaDisabled",M],disabledInteractive:[2,"disabledInteractive","disabledInteractive",M]},features:[le]})}}return i})();var Hh=(()=>{class i extends ry{constructor(e,t,o,a){super(e,t,o,a),this._rippleLoader.configureRipple(this._elementRef.nativeElement,{centered:!0})}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(se),c(I),c(Se,8))}}static{this.\u0275cmp=V({type:i,selectors:[["button","mat-icon-button",""]],hostVars:14,hostBindings:function(t,o){t&2&&(X("disabled",o._getDisabledAttribute())("aria-disabled",o._getAriaDisabled()),st(o.color?"mat-"+o.color:""),z("mat-mdc-button-disabled",o.disabled)("mat-mdc-button-disabled-interactive",o.disabledInteractive)("_mat-animation-noopable",o._animationMode==="NoopAnimations")("mat-unthemed",!o.color)("mat-mdc-button-base",!0))},exportAs:["matButton"],standalone:!0,features:[Z,G],attrs:iy,ngContentSelectors:ny,decls:4,vars:0,consts:[[1,"mat-mdc-button-persistent-ripple","mdc-icon-button__ripple"],[1,"mat-mdc-focus-indicator"],[1,"mat-mdc-button-touch-target"]],template:function(t,o){t&1&&(re(),ae(0,"span",0),q(1),ae(2,"span",1)(3,"span",2))},styles:['.mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color, var(--mat-app-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',ty],encapsulation:2,changeDetection:0})}}return i})();var Lh=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[ne,Qn,ne]})}}return i})();var ly=["input"],cy=["label"],dy=["*"],hy=new w("mat-checkbox-default-options",{providedIn:"root",factory:jh});function jh(){return{color:"accent",clickAction:"check-indeterminate",disabledInteractive:!1}}var qe=function(i){return i[i.Init=0]="Init",i[i.Checked=1]="Checked",i[i.Unchecked=2]="Unchecked",i[i.Indeterminate=3]="Indeterminate",i}(qe||{}),uy={provide:Yt,useExisting:Le(()=>Da),multi:!0},As=class{},my=0,zh=jh(),Da=(()=>{class i{focus(){this._inputElement.nativeElement.focus()}_createChangeEvent(e){let t=new As;return t.source=this,t.checked=e,t}_getAnimationTargetElement(){return this._inputElement?.nativeElement}get inputId(){return`${this.id||this._uniqueId}-input`}constructor(e,t,o,a,r,s){this._elementRef=e,this._changeDetectorRef=t,this._ngZone=o,this._animationMode=r,this._options=s,this._animationClasses={uncheckedToChecked:"mdc-checkbox--anim-unchecked-checked",uncheckedToIndeterminate:"mdc-checkbox--anim-unchecked-indeterminate",checkedToUnchecked:"mdc-checkbox--anim-checked-unchecked",checkedToIndeterminate:"mdc-checkbox--anim-checked-indeterminate",indeterminateToChecked:"mdc-checkbox--anim-indeterminate-checked",indeterminateToUnchecked:"mdc-checkbox--anim-indeterminate-unchecked"},this.ariaLabel="",this.ariaLabelledby=null,this.labelPosition="after",this.name=null,this.change=new N,this.indeterminateChange=new N,this._onTouched=()=>{},this._currentAnimationClass="",this._currentCheckState=qe.Init,this._controlValueAccessorChangeFn=()=>{},this._validatorChangeFn=()=>{},this._checked=!1,this._disabled=!1,this._indeterminate=!1,this._options=this._options||zh,this.color=this._options.color||zh.color,this.tabIndex=parseInt(a)||0,this.id=this._uniqueId=`mat-mdc-checkbox-${++my}`,this.disabledInteractive=s?.disabledInteractive??!1}ngOnChanges(e){e.required&&this._validatorChangeFn()}ngAfterViewInit(){this._syncIndeterminate(this._indeterminate)}get checked(){return this._checked}set checked(e){e!=this.checked&&(this._checked=e,this._changeDetectorRef.markForCheck())}get disabled(){return this._disabled}set disabled(e){e!==this.disabled&&(this._disabled=e,this._changeDetectorRef.markForCheck())}get indeterminate(){return this._indeterminate}set indeterminate(e){let t=e!=this._indeterminate;this._indeterminate=e,t&&(this._indeterminate?this._transitionCheckState(qe.Indeterminate):this._transitionCheckState(this.checked?qe.Checked:qe.Unchecked),this.indeterminateChange.emit(this._indeterminate)),this._syncIndeterminate(this._indeterminate)}_isRippleDisabled(){return this.disableRipple||this.disabled}_onLabelTextChange(){this._changeDetectorRef.detectChanges()}writeValue(e){this.checked=!!e}registerOnChange(e){this._controlValueAccessorChangeFn=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e}validate(e){return this.required&&e.value!==!0?{required:!0}:null}registerOnValidatorChange(e){this._validatorChangeFn=e}_transitionCheckState(e){let t=this._currentCheckState,o=this._getAnimationTargetElement();if(!(t===e||!o)&&(this._currentAnimationClass&&o.classList.remove(this._currentAnimationClass),this._currentAnimationClass=this._getAnimationClassForCheckStateTransition(t,e),this._currentCheckState=e,this._currentAnimationClass.length>0)){o.classList.add(this._currentAnimationClass);let a=this._currentAnimationClass;this._ngZone.runOutsideAngular(()=>{setTimeout(()=>{o.classList.remove(a)},1e3)})}}_emitChangeEvent(){this._controlValueAccessorChangeFn(this.checked),this.change.emit(this._createChangeEvent(this.checked)),this._inputElement&&(this._inputElement.nativeElement.checked=this.checked)}toggle(){this.checked=!this.checked,this._controlValueAccessorChangeFn(this.checked)}_handleInputClick(){let e=this._options?.clickAction;!this.disabled&&e!=="noop"?(this.indeterminate&&e!=="check"&&Promise.resolve().then(()=>{this._indeterminate=!1,this.indeterminateChange.emit(this._indeterminate)}),this._checked=!this._checked,this._transitionCheckState(this._checked?qe.Checked:qe.Unchecked),this._emitChangeEvent()):(this.disabled&&this.disabledInteractive||!this.disabled&&e==="noop")&&(this._inputElement.nativeElement.checked=this.checked,this._inputElement.nativeElement.indeterminate=this.indeterminate)}_onInteractionEvent(e){e.stopPropagation()}_onBlur(){Promise.resolve().then(()=>{this._onTouched(),this._changeDetectorRef.markForCheck()})}_getAnimationClassForCheckStateTransition(e,t){if(this._animationMode==="NoopAnimations")return"";switch(e){case qe.Init:if(t===qe.Checked)return this._animationClasses.uncheckedToChecked;if(t==qe.Indeterminate)return this._checked?this._animationClasses.checkedToIndeterminate:this._animationClasses.uncheckedToIndeterminate;break;case qe.Unchecked:return t===qe.Checked?this._animationClasses.uncheckedToChecked:this._animationClasses.uncheckedToIndeterminate;case qe.Checked:return t===qe.Unchecked?this._animationClasses.checkedToUnchecked:this._animationClasses.checkedToIndeterminate;case qe.Indeterminate:return t===qe.Checked?this._animationClasses.indeterminateToChecked:this._animationClasses.indeterminateToUnchecked}return""}_syncIndeterminate(e){let t=this._inputElement;t&&(t.nativeElement.indeterminate=e)}_onInputClick(){this._handleInputClick()}_onTouchTargetClick(){this._handleInputClick(),this.disabled||this._inputElement.nativeElement.focus()}_preventBubblingFromLabel(e){e.target&&this._labelElement.nativeElement.contains(e.target)&&e.stopPropagation()}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(de),c(I),$e("tabindex"),c(Se,8),c(hy,8))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-checkbox"]],viewQuery:function(t,o){if(t&1&&(oe(ly,5),oe(cy,5),oe(Jn,5)),t&2){let a;x(a=C())&&(o._inputElement=a.first),x(a=C())&&(o._labelElement=a.first),x(a=C())&&(o.ripple=a.first)}},hostAttrs:[1,"mat-mdc-checkbox"],hostVars:16,hostBindings:function(t,o){t&2&&(Je("id",o.id),X("tabindex",null)("aria-label",null)("aria-labelledby",null),st(o.color?"mat-"+o.color:"mat-accent"),z("_mat-animation-noopable",o._animationMode==="NoopAnimations")("mdc-checkbox--disabled",o.disabled)("mat-mdc-checkbox-disabled",o.disabled)("mat-mdc-checkbox-checked",o.checked)("mat-mdc-checkbox-disabled-interactive",o.disabledInteractive))},inputs:{ariaLabel:[0,"aria-label","ariaLabel"],ariaLabelledby:[0,"aria-labelledby","ariaLabelledby"],ariaDescribedby:[0,"aria-describedby","ariaDescribedby"],id:"id",required:[2,"required","required",M],labelPosition:"labelPosition",name:"name",value:"value",disableRipple:[2,"disableRipple","disableRipple",M],tabIndex:[2,"tabIndex","tabIndex",e=>e==null?void 0:vt(e)],color:"color",disabledInteractive:[2,"disabledInteractive","disabledInteractive",M],checked:[2,"checked","checked",M],disabled:[2,"disabled","disabled",M],indeterminate:[2,"indeterminate","indeterminate",M]},outputs:{change:"change",indeterminateChange:"indeterminateChange"},exportAs:["matCheckbox"],standalone:!0,features:[W([uy,{provide:tn,useExisting:i,multi:!0}]),le,be,G],ngContentSelectors:dy,decls:15,vars:20,consts:[["checkbox",""],["input",""],["label",""],["mat-internal-form-field","",3,"click","labelPosition"],[1,"mdc-checkbox"],[1,"mat-mdc-checkbox-touch-target",3,"click"],["type","checkbox",1,"mdc-checkbox__native-control",3,"blur","click","change","checked","indeterminate","disabled","id","required","tabIndex"],[1,"mdc-checkbox__ripple"],[1,"mdc-checkbox__background"],["focusable","false","viewBox","0 0 24 24","aria-hidden","true",1,"mdc-checkbox__checkmark"],["fill","none","d","M1.73,12.91 8.1,19.28 22.79,4.59",1,"mdc-checkbox__checkmark-path"],[1,"mdc-checkbox__mixedmark"],["mat-ripple","",1,"mat-mdc-checkbox-ripple","mat-mdc-focus-indicator",3,"matRippleTrigger","matRippleDisabled","matRippleCentered"],[1,"mdc-label",3,"for"]],template:function(t,o){if(t&1){let a=Ie();re(),m(0,"div",3),H("click",function(s){return J(a),Q(o._preventBubblingFromLabel(s))}),m(1,"div",4,0)(3,"div",5),H("click",function(){return J(a),Q(o._onTouchTargetClick())}),f(),m(4,"input",6,1),H("blur",function(){return J(a),Q(o._onBlur())})("click",function(){return J(a),Q(o._onInputClick())})("change",function(s){return J(a),Q(o._onInteractionEvent(s))}),f(),ae(6,"div",7),m(7,"div",8),un(),m(8,"svg",9),ae(9,"path",10),f(),gl(),ae(10,"div",11),f(),ae(11,"div",12),f(),m(12,"label",13,2),q(14),f()()}if(t&2){let a=Re(2);F("labelPosition",o.labelPosition),g(4),z("mdc-checkbox--selected",o.checked),F("checked",o.checked)("indeterminate",o.indeterminate)("disabled",o.disabled&&!o.disabledInteractive)("id",o.inputId)("required",o.required)("tabIndex",o.disabled&&!o.disabledInteractive?-1:o.tabIndex),X("aria-label",o.ariaLabel||null)("aria-labelledby",o.ariaLabelledby)("aria-describedby",o.ariaDescribedby)("aria-checked",o.indeterminate?"mixed":null)("aria-disabled",o.disabled&&o.disabledInteractive?!0:null)("name",o.name)("value",o.value),g(7),F("matRippleTrigger",a)("matRippleDisabled",o.disableRipple||o.disabled)("matRippleCentered",!0),g(),F("for",o.inputId)}},dependencies:[Jn,Td],styles:['.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mdc-checkbox--disabled{opacity:.5}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__mixedmark{margin:0 1px}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *,.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:""}'],encapsulation:2,changeDetection:0})}}return i})();var Wh=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[Da,ne,ne]})}}return i})();var gy=["*",[["mat-chip-avatar"],["","matChipAvatar",""]],[["mat-chip-trailing-icon"],["","matChipRemove",""],["","matChipTrailingIcon",""]]],by=["*","mat-chip-avatar, [matChipAvatar]","mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]"];function yy(i,n){i&1&&(m(0,"span",3),q(1,1),f())}function _y(i,n){i&1&&(m(0,"span",6),q(1,2),f())}var vy='.mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:"";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-app-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-app-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:"";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:""}',wy=[[["mat-chip-avatar"],["","matChipAvatar",""]],[["","matChipEditInput",""]],"*",[["mat-chip-trailing-icon"],["","matChipRemove",""],["","matChipTrailingIcon",""]]],ky=["mat-chip-avatar, [matChipAvatar]","[matChipEditInput]","*","mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]"];function xy(i,n){i&1&&ae(0,"span",0)}function Cy(i,n){i&1&&(m(0,"span",2),q(1),f())}function Sy(i,n){i&1&&q(0,1)}function Dy(i,n){i&1&&ae(0,"span",7)}function Iy(i,n){if(i&1&&R(0,Sy,1,0)(1,Dy,1,0,"span",7),i&2){let e=ie();$(e.contentEditInput?0:1)}}function Ay(i,n){i&1&&q(0,2)}function My(i,n){i&1&&(m(0,"span",5),q(1,3),f())}var Yh=["*"],Ty=".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}",Kh=new w("mat-chips-default-options",{providedIn:"root",factory:()=>({separatorKeyCodes:[13]})}),Uh=new w("MatChipAvatar"),Vh=new w("MatChipTrailingIcon"),Ts=new w("MatChipRemove"),qs=new w("MatChip"),Ia=(()=>{class i{get disabled(){return this._disabled||this._parentChip.disabled}set disabled(e){this._disabled=e}_getDisabledAttribute(){return this.disabled&&!this._allowFocusWhenDisabled?"":null}_getTabindex(){return this.disabled&&!this._allowFocusWhenDisabled||!this.isInteractive?null:this.tabIndex.toString()}constructor(e,t){this._elementRef=e,this._parentChip=t,this.isInteractive=!0,this._isPrimary=!0,this._disabled=!1,this.tabIndex=-1,this._allowFocusWhenDisabled=!1,e.nativeElement.nodeName==="BUTTON"&&e.nativeElement.setAttribute("type","button")}focus(){this._elementRef.nativeElement.focus()}_handleClick(e){!this.disabled&&this.isInteractive&&this._isPrimary&&(e.preventDefault(),this._parentChip._handlePrimaryActionInteraction())}_handleKeydown(e){(e.keyCode===13||e.keyCode===32)&&!this.disabled&&this.isInteractive&&this._isPrimary&&!this._parentChip._isEditing&&(e.preventDefault(),this._parentChip._handlePrimaryActionInteraction())}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(qs))}}static{this.\u0275dir=k({type:i,selectors:[["","matChipAction",""]],hostAttrs:[1,"mdc-evolution-chip__action","mat-mdc-chip-action"],hostVars:9,hostBindings:function(t,o){t&1&&H("click",function(r){return o._handleClick(r)})("keydown",function(r){return o._handleKeydown(r)}),t&2&&(X("tabindex",o._getTabindex())("disabled",o._getDisabledAttribute())("aria-disabled",o.disabled),z("mdc-evolution-chip__action--primary",o._isPrimary)("mdc-evolution-chip__action--presentational",!o.isInteractive)("mdc-evolution-chip__action--trailing",!o._isPrimary))},inputs:{isInteractive:"isInteractive",disabled:[2,"disabled","disabled",M],tabIndex:[2,"tabIndex","tabIndex",e=>e==null?-1:vt(e)],_allowFocusWhenDisabled:"_allowFocusWhenDisabled"},standalone:!0,features:[le]})}}return i})();var Zh=(()=>{class i extends Ia{constructor(){super(...arguments),this._isPrimary=!1}_handleClick(e){this.disabled||(e.stopPropagation(),e.preventDefault(),this._parentChip.remove())}_handleKeydown(e){(e.keyCode===13||e.keyCode===32)&&!this.disabled&&(e.stopPropagation(),e.preventDefault(),this._parentChip.remove())}static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275dir=k({type:i,selectors:[["","matChipRemove",""]],hostAttrs:["role","button",1,"mat-mdc-chip-remove","mat-mdc-chip-trailing-icon","mat-mdc-focus-indicator","mdc-evolution-chip__icon","mdc-evolution-chip__icon--trailing"],hostVars:1,hostBindings:function(t,o){t&2&&X("aria-hidden",null)},standalone:!0,features:[W([{provide:Ts,useExisting:i}]),Z]})}}return i})(),Ey=0,Es=(()=>{class i{_hasFocus(){return this._hasFocusInternal}get value(){return this._value!==void 0?this._value:this._textElement.textContent.trim()}set value(e){this._value=e}get disabled(){return this._disabled||this._chipListDisabled}set disabled(e){this._disabled=e}get ripple(){return this._rippleLoader?.getRipple(this._elementRef.nativeElement)}set ripple(e){this._rippleLoader?.attachRipple(this._elementRef.nativeElement,e)}constructor(e,t,o,a,r,s,l){this._changeDetectorRef=e,this._elementRef=t,this._ngZone=o,this._focusMonitor=a,this._globalRippleOptions=l,this._onFocus=new D,this._onBlur=new D,this.role=null,this._hasFocusInternal=!1,this.id=`mat-mdc-chip-${Ey++}`,this.ariaLabel=null,this.ariaDescription=null,this._ariaDescriptionId=`${this.id}-aria-description`,this._chipListDisabled=!1,this.removable=!0,this.highlighted=!1,this.disableRipple=!1,this._disabled=!1,this.removed=new N,this.destroyed=new N,this.basicChipAttrName="mat-basic-chip",this._rippleLoader=b(ia),this._injector=b(xe),this._document=r,this._animationsDisabled=s==="NoopAnimations",this._monitorFocus(),this._rippleLoader?.configureRipple(this._elementRef.nativeElement,{className:"mat-mdc-chip-ripple",disabled:this._isRippleDisabled()})}ngOnInit(){let e=this._elementRef.nativeElement;this._isBasicChip=e.hasAttribute(this.basicChipAttrName)||e.tagName.toLowerCase()===this.basicChipAttrName}ngAfterViewInit(){this._textElement=this._elementRef.nativeElement.querySelector(".mat-mdc-chip-action-label"),this._pendingFocus&&(this._pendingFocus=!1,this.focus())}ngAfterContentInit(){this._actionChanges=Ce(this._allLeadingIcons.changes,this._allTrailingIcons.changes,this._allRemoveIcons.changes).subscribe(()=>this._changeDetectorRef.markForCheck())}ngDoCheck(){this._rippleLoader.setDisabled(this._elementRef.nativeElement,this._isRippleDisabled())}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef),this._rippleLoader?.destroyRipple(this._elementRef.nativeElement),this._actionChanges?.unsubscribe(),this.destroyed.emit({chip:this}),this.destroyed.complete()}remove(){this.removable&&this.removed.emit({chip:this})}_isRippleDisabled(){return this.disabled||this.disableRipple||this._animationsDisabled||this._isBasicChip||!!this._globalRippleOptions?.disabled}_hasTrailingIcon(){return!!(this.trailingIcon||this.removeIcon)}_handleKeydown(e){(e.keyCode===8&&!e.repeat||e.keyCode===46)&&(e.preventDefault(),this.remove())}focus(){this.disabled||(this.primaryAction?this.primaryAction.focus():this._pendingFocus=!0)}_getSourceAction(e){return this._getActions().find(t=>{let o=t._elementRef.nativeElement;return o===e||o.contains(e)})}_getActions(){let e=[];return this.primaryAction&&e.push(this.primaryAction),this.removeIcon&&e.push(this.removeIcon),this.trailingIcon&&e.push(this.trailingIcon),e}_handlePrimaryActionInteraction(){}_monitorFocus(){this._focusMonitor.monitor(this._elementRef,!0).subscribe(e=>{let t=e!==null;t!==this._hasFocusInternal&&(this._hasFocusInternal=t,t?this._onFocus.next({chip:this}):Fe(()=>this._ngZone.run(()=>this._onBlur.next({chip:this})),{injector:this._injector}))})}static{this.\u0275fac=function(t){return new(t||i)(c(de),c(A),c(I),c(pi),c(L),c(Se,8),c($n,8))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-basic-chip"],["","mat-basic-chip",""],["mat-chip"],["","mat-chip",""]],contentQueries:function(t,o,a){if(t&1&&(ee(a,Uh,5),ee(a,Vh,5),ee(a,Ts,5),ee(a,Uh,5),ee(a,Vh,5),ee(a,Ts,5)),t&2){let r;x(r=C())&&(o.leadingIcon=r.first),x(r=C())&&(o.trailingIcon=r.first),x(r=C())&&(o.removeIcon=r.first),x(r=C())&&(o._allLeadingIcons=r),x(r=C())&&(o._allTrailingIcons=r),x(r=C())&&(o._allRemoveIcons=r)}},viewQuery:function(t,o){if(t&1&&oe(Ia,5),t&2){let a;x(a=C())&&(o.primaryAction=a.first)}},hostAttrs:[1,"mat-mdc-chip"],hostVars:31,hostBindings:function(t,o){t&1&&H("keydown",function(r){return o._handleKeydown(r)}),t&2&&(Je("id",o.id),X("role",o.role)("aria-label",o.ariaLabel),st("mat-"+(o.color||"primary")),z("mdc-evolution-chip",!o._isBasicChip)("mdc-evolution-chip--disabled",o.disabled)("mdc-evolution-chip--with-trailing-action",o._hasTrailingIcon())("mdc-evolution-chip--with-primary-graphic",o.leadingIcon)("mdc-evolution-chip--with-primary-icon",o.leadingIcon)("mdc-evolution-chip--with-avatar",o.leadingIcon)("mat-mdc-chip-with-avatar",o.leadingIcon)("mat-mdc-chip-highlighted",o.highlighted)("mat-mdc-chip-disabled",o.disabled)("mat-mdc-basic-chip",o._isBasicChip)("mat-mdc-standard-chip",!o._isBasicChip)("mat-mdc-chip-with-trailing-icon",o._hasTrailingIcon())("_mat-animation-noopable",o._animationsDisabled))},inputs:{role:"role",id:"id",ariaLabel:[0,"aria-label","ariaLabel"],ariaDescription:[0,"aria-description","ariaDescription"],value:"value",color:"color",removable:[2,"removable","removable",M],highlighted:[2,"highlighted","highlighted",M],disableRipple:[2,"disableRipple","disableRipple",M],disabled:[2,"disabled","disabled",M]},outputs:{removed:"removed",destroyed:"destroyed"},exportAs:["matChip"],standalone:!0,features:[W([{provide:qs,useExisting:i}]),le,G],ngContentSelectors:by,decls:8,vars:3,consts:[[1,"mat-mdc-chip-focus-overlay"],[1,"mdc-evolution-chip__cell","mdc-evolution-chip__cell--primary"],["matChipAction","",3,"isInteractive"],[1,"mdc-evolution-chip__graphic","mat-mdc-chip-graphic"],[1,"mdc-evolution-chip__text-label","mat-mdc-chip-action-label"],[1,"mat-mdc-chip-primary-focus-indicator","mat-mdc-focus-indicator"],[1,"mdc-evolution-chip__cell","mdc-evolution-chip__cell--trailing"]],template:function(t,o){t&1&&(re(gy),ae(0,"span",0),m(1,"span",1)(2,"span",2),R(3,yy,2,0,"span",3),m(4,"span",4),q(5),ae(6,"span",5),f()()(),R(7,_y,2,0,"span",6)),t&2&&(g(2),F("isInteractive",!1),g(),$(o.leadingIcon?3:-1),g(4),$(o._hasTrailingIcon()?7:-1))},dependencies:[Ia],styles:['.mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:"";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-app-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-app-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:"";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:""}'],encapsulation:2,changeDetection:0})}}return i})();var Ms=(()=>{class i{constructor(e,t){this._elementRef=e,this._document=t}initialize(e){this.getNativeElement().focus(),this.setValue(e)}getNativeElement(){return this._elementRef.nativeElement}setValue(e){this.getNativeElement().textContent=e,this._moveCursorToEndOfInput()}getValue(){return this.getNativeElement().textContent||""}_moveCursorToEndOfInput(){let e=this._document.createRange();e.selectNodeContents(this.getNativeElement()),e.collapse(!1);let t=window.getSelection();t.removeAllRanges(),t.addRange(e)}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(L))}}static{this.\u0275dir=k({type:i,selectors:[["span","matChipEditInput",""]],hostAttrs:["role","textbox","tabindex","-1","contenteditable","true",1,"mat-chip-edit-input"],standalone:!0})}}return i})(),Os=(()=>{class i extends Es{constructor(e,t,o,a,r,s,l,d){super(e,t,o,a,r,s,l),this.basicChipAttrName="mat-basic-chip-row",this._editStartPending=!1,this.editable=!1,this.edited=new N,this._isEditing=!1,this.role="row",this._onBlur.pipe(j(this.destroyed)).subscribe(()=>{this._isEditing&&!this._editStartPending&&this._onEditFinish()})}_hasTrailingIcon(){return!this._isEditing&&super._hasTrailingIcon()}_handleFocus(){!this._isEditing&&!this.disabled&&this.focus()}_handleKeydown(e){e.keyCode===13&&!this.disabled?this._isEditing?(e.preventDefault(),this._onEditFinish()):this.editable&&this._startEditing(e):this._isEditing?e.stopPropagation():super._handleKeydown(e)}_handleDoubleclick(e){!this.disabled&&this.editable&&this._startEditing(e)}_startEditing(e){if(!this.primaryAction||this.removeIcon&&this._getSourceAction(e.target)===this.removeIcon)return;let t=this.value;this._isEditing=this._editStartPending=!0,Fe(()=>{this._getEditInput().initialize(t),this._editStartPending=!1},{injector:this._injector})}_onEditFinish(){this._isEditing=this._editStartPending=!1,this.edited.emit({chip:this,value:this._getEditInput().getValue()}),(this._document.activeElement===this._getEditInput().getNativeElement()||this._document.activeElement===this._document.body)&&this.primaryAction.focus()}_isRippleDisabled(){return super._isRippleDisabled()||this._isEditing}_getEditInput(){return this.contentEditInput||this.defaultEditInput}static{this.\u0275fac=function(t){return new(t||i)(c(de),c(A),c(I),c(pi),c(L),c(Se,8),c($n,8),$e("tabindex"))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-chip-row"],["","mat-chip-row",""],["mat-basic-chip-row"],["","mat-basic-chip-row",""]],contentQueries:function(t,o,a){if(t&1&&ee(a,Ms,5),t&2){let r;x(r=C())&&(o.contentEditInput=r.first)}},viewQuery:function(t,o){if(t&1&&oe(Ms,5),t&2){let a;x(a=C())&&(o.defaultEditInput=a.first)}},hostAttrs:[1,"mat-mdc-chip","mat-mdc-chip-row","mdc-evolution-chip"],hostVars:27,hostBindings:function(t,o){t&1&&H("focus",function(r){return o._handleFocus(r)})("dblclick",function(r){return o._handleDoubleclick(r)}),t&2&&(Je("id",o.id),X("tabindex",o.disabled?null:-1)("aria-label",null)("aria-description",null)("role",o.role),z("mat-mdc-chip-with-avatar",o.leadingIcon)("mat-mdc-chip-disabled",o.disabled)("mat-mdc-chip-editing",o._isEditing)("mat-mdc-chip-editable",o.editable)("mdc-evolution-chip--disabled",o.disabled)("mdc-evolution-chip--with-trailing-action",o._hasTrailingIcon())("mdc-evolution-chip--with-primary-graphic",o.leadingIcon)("mdc-evolution-chip--with-primary-icon",o.leadingIcon)("mdc-evolution-chip--with-avatar",o.leadingIcon)("mat-mdc-chip-highlighted",o.highlighted)("mat-mdc-chip-with-trailing-icon",o._hasTrailingIcon()))},inputs:{editable:"editable"},outputs:{edited:"edited"},standalone:!0,features:[W([{provide:Es,useExisting:i},{provide:qs,useExisting:i}]),Z,G],ngContentSelectors:ky,decls:10,vars:9,consts:[[1,"mat-mdc-chip-focus-overlay"],["role","gridcell","matChipAction","",1,"mdc-evolution-chip__cell","mdc-evolution-chip__cell--primary",3,"disabled"],[1,"mdc-evolution-chip__graphic","mat-mdc-chip-graphic"],[1,"mdc-evolution-chip__text-label","mat-mdc-chip-action-label"],["aria-hidden","true",1,"mat-mdc-chip-primary-focus-indicator","mat-mdc-focus-indicator"],["role","gridcell",1,"mdc-evolution-chip__cell","mdc-evolution-chip__cell--trailing"],[1,"cdk-visually-hidden",3,"id"],["matChipEditInput",""]],template:function(t,o){t&1&&(re(wy),R(0,xy,1,0,"span",0),m(1,"span",1),R(2,Cy,2,0,"span",2),m(3,"span",3),R(4,Iy,2,1)(5,Ay,1,0),ae(6,"span",4),f()(),R(7,My,2,0,"span",5),m(8,"span",6),te(9),f()),t&2&&($(o._isEditing?-1:0),g(),F("disabled",o.disabled),X("aria-label",o.ariaLabel)("aria-describedby",o._ariaDescriptionId),g(),$(o.leadingIcon?2:-1),g(2),$(o._isEditing?4:5),g(3),$(o._hasTrailingIcon()?7:-1),g(),F("id",o._ariaDescriptionId),g(),Qe(o.ariaDescription))},dependencies:[Ia,Ms],styles:[vy],encapsulation:2,changeDetection:0})}}return i})(),Ry=(()=>{class i{get chipFocusChanges(){return this._getChipStream(e=>e._onFocus)}get chipDestroyedChanges(){return this._getChipStream(e=>e.destroyed)}get chipRemovedChanges(){return this._getChipStream(e=>e.removed)}get disabled(){return this._disabled}set disabled(e){this._disabled=e,this._syncChipsState()}get empty(){return!this._chips||this._chips.length===0}get role(){return this._explicitRole?this._explicitRole:this.empty?null:this._defaultRole}set role(e){this._explicitRole=e}get focused(){return this._hasFocusedChip()}constructor(e,t,o){this._elementRef=e,this._changeDetectorRef=t,this._dir=o,this._lastDestroyedFocusedChipIndex=null,this._destroyed=new D,this._defaultRole="presentation",this._disabled=!1,this.tabIndex=0,this._explicitRole=null,this._chipActions=new ii}ngAfterViewInit(){this._setUpFocusManagement(),this._trackChipSetChanges(),this._trackDestroyedFocusedChip()}ngOnDestroy(){this._keyManager?.destroy(),this._chipActions.destroy(),this._destroyed.next(),this._destroyed.complete()}_hasFocusedChip(){return this._chips&&this._chips.some(e=>e._hasFocus())}_syncChipsState(){this._chips?.forEach(e=>{e._chipListDisabled=this._disabled,e._changeDetectorRef.markForCheck()})}focus(){}_handleKeydown(e){this._originatesFromChip(e)&&this._keyManager.onKeydown(e)}_isValidIndex(e){return e>=0&&e<this._chips.length}_allowFocusEscape(){let e=this._elementRef.nativeElement.tabIndex;e!==-1&&(this._elementRef.nativeElement.tabIndex=-1,setTimeout(()=>this._elementRef.nativeElement.tabIndex=e))}_getChipStream(e){return this._chips.changes.pipe(_e(null),ve(()=>Ce(...this._chips.map(e))))}_originatesFromChip(e){let t=e.target;for(;t&&t!==this._elementRef.nativeElement;){if(t.classList.contains("mat-mdc-chip"))return!0;t=t.parentElement}return!1}_setUpFocusManagement(){this._chips.changes.pipe(_e(this._chips)).subscribe(e=>{let t=[];e.forEach(o=>o._getActions().forEach(a=>t.push(a))),this._chipActions.reset(t),this._chipActions.notifyOnChanges()}),this._keyManager=new Jo(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir?this._dir.value:"ltr").withHomeAndEnd().skipPredicate(e=>this._skipPredicate(e)),this.chipFocusChanges.pipe(j(this._destroyed)).subscribe(({chip:e})=>{let t=e._getSourceAction(document.activeElement);t&&this._keyManager.updateActiveItem(t)}),this._dir?.change.pipe(j(this._destroyed)).subscribe(e=>this._keyManager.withHorizontalOrientation(e))}_skipPredicate(e){return!e.isInteractive||e.disabled}_trackChipSetChanges(){this._chips.changes.pipe(_e(null),j(this._destroyed)).subscribe(()=>{this.disabled&&Promise.resolve().then(()=>this._syncChipsState()),this._redirectDestroyedChipFocus()})}_trackDestroyedFocusedChip(){this.chipDestroyedChanges.pipe(j(this._destroyed)).subscribe(e=>{let o=this._chips.toArray().indexOf(e.chip);this._isValidIndex(o)&&e.chip._hasFocus()&&(this._lastDestroyedFocusedChipIndex=o)})}_redirectDestroyedChipFocus(){if(this._lastDestroyedFocusedChipIndex!=null){if(this._chips.length){let e=Math.min(this._lastDestroyedFocusedChipIndex,this._chips.length-1),t=this._chips.toArray()[e];t.disabled?this._chips.length===1?this.focus():this._keyManager.setPreviousItemActive():t.focus()}else this.focus();this._lastDestroyedFocusedChipIndex=null}}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(de),c(Ae,8))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-chip-set"]],contentQueries:function(t,o,a){if(t&1&&ee(a,Es,5),t&2){let r;x(r=C())&&(o._chips=r)}},hostAttrs:[1,"mat-mdc-chip-set","mdc-evolution-chip-set"],hostVars:1,hostBindings:function(t,o){t&1&&H("keydown",function(r){return o._handleKeydown(r)}),t&2&&X("role",o.role)},inputs:{disabled:[2,"disabled","disabled",M],role:"role",tabIndex:[2,"tabIndex","tabIndex",e=>e==null?0:vt(e)]},standalone:!0,features:[le,G],ngContentSelectors:Yh,decls:2,vars:0,consts:[["role","presentation",1,"mdc-evolution-chip-set__chips"]],template:function(t,o){t&1&&(re(),m(0,"div",0),q(1),f())},styles:[".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}"],encapsulation:2,changeDetection:0})}}return i})();var Rs=class{constructor(n,e){this.source=n,this.value=e}},$h=(()=>{class i extends Ry{get disabled(){return this.ngControl?!!this.ngControl.disabled:this._disabled}set disabled(e){this._disabled=e,this._syncChipsState()}get id(){return this._chipInput.id}get empty(){return(!this._chipInput||this._chipInput.empty)&&(!this._chips||this._chips.length===0)}get placeholder(){return this._chipInput?this._chipInput.placeholder:this._placeholder}set placeholder(e){this._placeholder=e,this.stateChanges.next()}get focused(){return this._chipInput.focused||this._hasFocusedChip()}get required(){return this._required??this.ngControl?.control?.hasValidator(Ut.required)??!1}set required(e){this._required=e,this.stateChanges.next()}get shouldLabelFloat(){return!this.empty||this.focused}get value(){return this._value}set value(e){this._value=e}get errorStateMatcher(){return this._errorStateTracker.matcher}set errorStateMatcher(e){this._errorStateTracker.matcher=e}get chipBlurChanges(){return this._getChipStream(e=>e._onBlur)}get errorState(){return this._errorStateTracker.errorState}set errorState(e){this._errorStateTracker.errorState=e}constructor(e,t,o,a,r,s,l){super(e,t,o),this.ngControl=l,this.controlType="mat-chip-grid",this._defaultRole="grid",this._ariaDescribedbyIds=[],this._onTouched=()=>{},this._onChange=()=>{},this._value=[],this.change=new N,this.valueChange=new N,this._chips=void 0,this.stateChanges=new D,this.ngControl&&(this.ngControl.valueAccessor=this),this._errorStateTracker=new zt(s,l,r,a,this.stateChanges)}ngAfterContentInit(){this.chipBlurChanges.pipe(j(this._destroyed)).subscribe(()=>{this._blur(),this.stateChanges.next()}),Ce(this.chipFocusChanges,this._chips.changes).pipe(j(this._destroyed)).subscribe(()=>this.stateChanges.next())}ngAfterViewInit(){super.ngAfterViewInit(),this._chipInput}ngDoCheck(){this.ngControl&&this.updateErrorState()}ngOnDestroy(){super.ngOnDestroy(),this.stateChanges.complete()}registerInput(e){this._chipInput=e,this._chipInput.setDescribedByIds(this._ariaDescribedbyIds)}onContainerClick(e){!this.disabled&&!this._originatesFromChip(e)&&this.focus()}focus(){if(!(this.disabled||this._chipInput.focused)){if(!this._chips.length||this._chips.first.disabled)Promise.resolve().then(()=>this._chipInput.focus());else{let e=this._keyManager.activeItem;e?e.focus():this._keyManager.setFirstItemActive()}this.stateChanges.next()}}setDescribedByIds(e){this._ariaDescribedbyIds=e,this._chipInput?.setDescribedByIds(e)}writeValue(e){this._value=e}registerOnChange(e){this._onChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e,this.stateChanges.next()}updateErrorState(){this._errorStateTracker.updateErrorState()}_blur(){this.disabled||setTimeout(()=>{this.focused||(this._propagateChanges(),this._markAsTouched())})}_allowFocusEscape(){this._chipInput.focused||super._allowFocusEscape()}_handleKeydown(e){let t=e.keyCode,o=this._keyManager.activeItem;if(t===9)this._chipInput.focused&&Me(e,"shiftKey")&&this._chips.length&&!this._chips.last.disabled?(e.preventDefault(),o?this._keyManager.setActiveItem(o):this._focusLastChip()):super._allowFocusEscape();else if(!this._chipInput.focused)if((t===38||t===40)&&o){let a=this._chipActions.filter(l=>l._isPrimary===o._isPrimary&&!this._skipPredicate(l)),r=a.indexOf(o),s=e.keyCode===38?-1:1;e.preventDefault(),r>-1&&this._isValidIndex(r+s)&&this._keyManager.setActiveItem(a[r+s])}else super._handleKeydown(e);this.stateChanges.next()}_focusLastChip(){this._chips.length&&this._chips.last.focus()}_propagateChanges(){let e=this._chips.length?this._chips.toArray().map(t=>t.value):[];this._value=e,this.change.emit(new Rs(this,e)),this.valueChange.emit(e),this._onChange(e),this._changeDetectorRef.markForCheck()}_markAsTouched(){this._onTouched(),this._changeDetectorRef.markForCheck(),this.stateChanges.next()}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(de),c(Ae,8),c(Tt,8),c(_i,8),c(jt),c(Ke,10))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-chip-grid"]],contentQueries:function(t,o,a){if(t&1&&ee(a,Os,5),t&2){let r;x(r=C())&&(o._chips=r)}},hostAttrs:[1,"mat-mdc-chip-set","mat-mdc-chip-grid","mdc-evolution-chip-set"],hostVars:10,hostBindings:function(t,o){t&1&&H("focus",function(){return o.focus()})("blur",function(){return o._blur()}),t&2&&(X("role",o.role)("tabindex",o.disabled||o._chips&&o._chips.length===0?-1:o.tabIndex)("aria-disabled",o.disabled.toString())("aria-invalid",o.errorState),z("mat-mdc-chip-list-disabled",o.disabled)("mat-mdc-chip-list-invalid",o.errorState)("mat-mdc-chip-list-required",o.required))},inputs:{disabled:[2,"disabled","disabled",M],placeholder:"placeholder",required:[2,"required","required",M],value:"value",errorStateMatcher:"errorStateMatcher"},outputs:{change:"change",valueChange:"valueChange"},standalone:!0,features:[W([{provide:gi,useExisting:i}]),le,Z,G],ngContentSelectors:Yh,decls:2,vars:0,consts:[["role","presentation",1,"mdc-evolution-chip-set__chips"]],template:function(t,o){t&1&&(re(),m(0,"div",0),q(1),f())},styles:[Ty],encapsulation:2,changeDetection:0})}}return i})(),qy=0,Jh=(()=>{class i{get chipGrid(){return this._chipGrid}set chipGrid(e){e&&(this._chipGrid=e,this._chipGrid.registerInput(this))}get disabled(){return this._disabled||this._chipGrid&&this._chipGrid.disabled}set disabled(e){this._disabled=e}get empty(){return!this.inputElement.value}constructor(e,t,o){this._elementRef=e,this.focused=!1,this.addOnBlur=!1,this.chipEnd=new N,this.placeholder="",this.id=`mat-mdc-chip-list-input-${qy++}`,this._disabled=!1,this.inputElement=this._elementRef.nativeElement,this.separatorKeyCodes=t.separatorKeyCodes,o&&this.inputElement.classList.add("mat-mdc-form-field-input-control")}ngOnChanges(){this._chipGrid.stateChanges.next()}ngOnDestroy(){this.chipEnd.complete()}_keydown(e){this.empty&&e.keyCode===8?(e.repeat||this._chipGrid._focusLastChip(),e.preventDefault()):this._emitChipEnd(e)}_blur(){this.addOnBlur&&this._emitChipEnd(),this.focused=!1,this._chipGrid.focused||this._chipGrid._blur(),this._chipGrid.stateChanges.next()}_focus(){this.focused=!0,this._chipGrid.stateChanges.next()}_emitChipEnd(e){(!e||this._isSeparatorKey(e)&&!e.repeat)&&(this.chipEnd.emit({input:this.inputElement,value:this.inputElement.value,chipInput:this}),e?.preventDefault())}_onInput(){this._chipGrid.stateChanges.next()}focus(){this.inputElement.focus()}clear(){this.inputElement.value=""}setDescribedByIds(e){let t=this._elementRef.nativeElement;e.length?t.setAttribute("aria-describedby",e.join(" ")):t.removeAttribute("aria-describedby")}_isSeparatorKey(e){return!Me(e)&&new Set(this.separatorKeyCodes).has(e.keyCode)}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(Kh),c(Mt,8))}}static{this.\u0275dir=k({type:i,selectors:[["input","matChipInputFor",""]],hostAttrs:[1,"mat-mdc-chip-input","mat-mdc-input-element","mdc-text-field__input","mat-input-element"],hostVars:6,hostBindings:function(t,o){t&1&&H("keydown",function(r){return o._keydown(r)})("blur",function(){return o._blur()})("focus",function(){return o._focus()})("input",function(){return o._onInput()}),t&2&&(Je("id",o.id),X("disabled",o.disabled||null)("placeholder",o.placeholder||null)("aria-invalid",o._chipGrid&&o._chipGrid.ngControl?o._chipGrid.ngControl.invalid:null)("aria-required",o._chipGrid&&o._chipGrid.required||null)("required",o._chipGrid&&o._chipGrid.required||null))},inputs:{chipGrid:[0,"matChipInputFor","chipGrid"],addOnBlur:[2,"matChipInputAddOnBlur","addOnBlur",M],separatorKeyCodes:[0,"matChipInputSeparatorKeyCodes","separatorKeyCodes"],placeholder:"placeholder",id:"id",disabled:[2,"disabled","disabled",M]},outputs:{chipEnd:"matChipInputTokenEnd"},exportAs:["matChipInput","matChipInputFor"],standalone:!0,features:[le,be]})}}return i})();var Qh=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({providers:[jt,{provide:Kh,useValue:{separatorKeyCodes:[13]}}],imports:[ne,Qn,ne]})}}return i})();var lo=class{attach(n){return this._attachedHost=n,n.attach(this)}detach(){let n=this._attachedHost;n!=null&&(this._attachedHost=null,n.detach())}get isAttached(){return this._attachedHost!=null}setAttachedHost(n){this._attachedHost=n}},Fs=class extends lo{constructor(n,e,t,o,a){super(),this.component=n,this.viewContainerRef=e,this.injector=t,this.componentFactoryResolver=o,this.projectableNodes=a}},vi=class extends lo{constructor(n,e,t,o){super(),this.templateRef=n,this.viewContainerRef=e,this.context=t,this.injector=o}get origin(){return this.templateRef.elementRef}attach(n,e=this.context){return this.context=e,super.attach(n)}detach(){return this.context=void 0,super.detach()}},Ps=class extends lo{constructor(n){super(),this.element=n instanceof A?n.nativeElement:n}},Bs=class{constructor(){this._isDisposed=!1,this.attachDomPortal=null}hasAttached(){return!!this._attachedPortal}attach(n){if(n instanceof Fs)return this._attachedPortal=n,this.attachComponentPortal(n);if(n instanceof vi)return this._attachedPortal=n,this.attachTemplatePortal(n);if(this.attachDomPortal&&n instanceof Ps)return this._attachedPortal=n,this.attachDomPortal(n)}detach(){this._attachedPortal&&(this._attachedPortal.setAttachedHost(null),this._attachedPortal=null),this._invokeDisposeFn()}dispose(){this.hasAttached()&&this.detach(),this._invokeDisposeFn(),this._isDisposed=!0}setDisposeFn(n){this._disposeFn=n}_invokeDisposeFn(){this._disposeFn&&(this._disposeFn(),this._disposeFn=null)}};var Aa=class extends Bs{constructor(n,e,t,o,a){super(),this.outletElement=n,this._componentFactoryResolver=e,this._appRef=t,this._defaultInjector=o,this.attachDomPortal=r=>{this._document;let s=r.element;s.parentNode;let l=this._document.createComment("dom-portal");s.parentNode.insertBefore(l,s),this.outletElement.appendChild(s),this._attachedPortal=r,super.setDisposeFn(()=>{l.parentNode&&l.parentNode.replaceChild(s,l)})},this._document=a}attachComponentPortal(n){let t=(n.componentFactoryResolver||this._componentFactoryResolver).resolveComponentFactory(n.component),o;return n.viewContainerRef?(o=n.viewContainerRef.createComponent(t,n.viewContainerRef.length,n.injector||n.viewContainerRef.injector,n.projectableNodes||void 0),this.setDisposeFn(()=>o.destroy())):(o=t.create(n.injector||this._defaultInjector||xe.NULL),this._appRef.attachView(o.hostView),this.setDisposeFn(()=>{this._appRef.viewCount>0&&this._appRef.detachView(o.hostView),o.destroy()})),this.outletElement.appendChild(this._getComponentRootNode(o)),this._attachedPortal=n,o}attachTemplatePortal(n){let e=n.viewContainerRef,t=e.createEmbeddedView(n.templateRef,n.context,{injector:n.injector});return t.rootNodes.forEach(o=>this.outletElement.appendChild(o)),t.detectChanges(),this.setDisposeFn(()=>{let o=e.indexOf(t);o!==-1&&e.remove(o)}),this._attachedPortal=n,t}dispose(){super.dispose(),this.outletElement.remove()}_getComponentRootNode(n){return n.hostView.rootNodes[0]}};var Xh=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({})}}return i})();var eu=Uo(),Ns=class{constructor(n,e){this._viewportRuler=n,this._previousHTMLStyles={top:"",left:""},this._isEnabled=!1,this._document=e}attach(){}enable(){if(this._canBeEnabled()){let n=this._document.documentElement;this._previousScrollPosition=this._viewportRuler.getViewportScrollPosition(),this._previousHTMLStyles.left=n.style.left||"",this._previousHTMLStyles.top=n.style.top||"",n.style.left=we(-this._previousScrollPosition.left),n.style.top=we(-this._previousScrollPosition.top),n.classList.add("cdk-global-scrollblock"),this._isEnabled=!0}}disable(){if(this._isEnabled){let n=this._document.documentElement,e=this._document.body,t=n.style,o=e.style,a=t.scrollBehavior||"",r=o.scrollBehavior||"";this._isEnabled=!1,t.left=this._previousHTMLStyles.left,t.top=this._previousHTMLStyles.top,n.classList.remove("cdk-global-scrollblock"),eu&&(t.scrollBehavior=o.scrollBehavior="auto"),window.scroll(this._previousScrollPosition.left,this._previousScrollPosition.top),eu&&(t.scrollBehavior=a,o.scrollBehavior=r)}}_canBeEnabled(){if(this._document.documentElement.classList.contains("cdk-global-scrollblock")||this._isEnabled)return!1;let e=this._document.body,t=this._viewportRuler.getViewportSize();return e.scrollHeight>t.height||e.scrollWidth>t.width}};var Hs=class{constructor(n,e,t,o){this._scrollDispatcher=n,this._ngZone=e,this._viewportRuler=t,this._config=o,this._scrollSubscription=null,this._detach=()=>{this.disable(),this._overlayRef.hasAttached()&&this._ngZone.run(()=>this._overlayRef.detach())}}attach(n){this._overlayRef,this._overlayRef=n}enable(){if(this._scrollSubscription)return;let n=this._scrollDispatcher.scrolled(0).pipe(ce(e=>!e||!this._overlayRef.overlayElement.contains(e.getElementRef().nativeElement)));this._config&&this._config.threshold&&this._config.threshold>1?(this._initialScrollPosition=this._viewportRuler.getViewportScrollPosition().top,this._scrollSubscription=n.subscribe(()=>{let e=this._viewportRuler.getViewportScrollPosition().top;Math.abs(e-this._initialScrollPosition)>this._config.threshold?this._detach():this._overlayRef.updatePosition()})):this._scrollSubscription=n.subscribe(this._detach)}disable(){this._scrollSubscription&&(this._scrollSubscription.unsubscribe(),this._scrollSubscription=null)}detach(){this.disable(),this._overlayRef=null}},Ma=class{enable(){}disable(){}attach(){}};function Ls(i,n){return n.some(e=>{let t=i.bottom<e.top,o=i.top>e.bottom,a=i.right<e.left,r=i.left>e.right;return t||o||a||r})}function tu(i,n){return n.some(e=>{let t=i.top<e.top,o=i.bottom>e.bottom,a=i.left<e.left,r=i.right>e.right;return t||o||a||r})}var zs=class{constructor(n,e,t,o){this._scrollDispatcher=n,this._viewportRuler=e,this._ngZone=t,this._config=o,this._scrollSubscription=null}attach(n){this._overlayRef,this._overlayRef=n}enable(){if(!this._scrollSubscription){let n=this._config?this._config.scrollThrottle:0;this._scrollSubscription=this._scrollDispatcher.scrolled(n).subscribe(()=>{if(this._overlayRef.updatePosition(),this._config&&this._config.autoClose){let e=this._overlayRef.overlayElement.getBoundingClientRect(),{width:t,height:o}=this._viewportRuler.getViewportSize();Ls(e,[{width:t,height:o,bottom:o,right:t,top:0,left:0}])&&(this.disable(),this._ngZone.run(()=>this._overlayRef.detach()))}})}}disable(){this._scrollSubscription&&(this._scrollSubscription.unsubscribe(),this._scrollSubscription=null)}detach(){this.disable(),this._overlayRef=null}},Py=(()=>{class i{constructor(e,t,o,a){this._scrollDispatcher=e,this._viewportRuler=t,this._ngZone=o,this.noop=()=>new Ma,this.close=r=>new Hs(this._scrollDispatcher,this._ngZone,this._viewportRuler,r),this.block=()=>new Ns(this._viewportRuler,this._document),this.reposition=r=>new zs(this._scrollDispatcher,this._viewportRuler,this._ngZone,r),this._document=a}static{this.\u0275fac=function(t){return new(t||i)(p(Gi),p(ht),p(I),p(L))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),on=class{constructor(n){if(this.scrollStrategy=new Ma,this.panelClass="",this.hasBackdrop=!1,this.backdropClass="cdk-overlay-dark-backdrop",this.disposeOnNavigation=!1,n){let e=Object.keys(n);for(let t of e)n[t]!==void 0&&(this[t]=n[t])}}};var js=class{constructor(n,e){this.connectionPair=n,this.scrollableViewProperties=e}};var su=(()=>{class i{constructor(e){this._attachedOverlays=[],this._document=e}ngOnDestroy(){this.detach()}add(e){this.remove(e),this._attachedOverlays.push(e)}remove(e){let t=this._attachedOverlays.indexOf(e);t>-1&&this._attachedOverlays.splice(t,1),this._attachedOverlays.length===0&&this.detach()}static{this.\u0275fac=function(t){return new(t||i)(p(L))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),By=(()=>{class i extends su{constructor(e,t){super(e),this._ngZone=t,this._keydownListener=o=>{let a=this._attachedOverlays;for(let r=a.length-1;r>-1;r--)if(a[r]._keydownEvents.observers.length>0){let s=a[r]._keydownEvents;this._ngZone?this._ngZone.run(()=>s.next(o)):s.next(o);break}}}add(e){super.add(e),this._isAttached||(this._ngZone?this._ngZone.runOutsideAngular(()=>this._document.body.addEventListener("keydown",this._keydownListener)):this._document.body.addEventListener("keydown",this._keydownListener),this._isAttached=!0)}detach(){this._isAttached&&(this._document.body.removeEventListener("keydown",this._keydownListener),this._isAttached=!1)}static{this.\u0275fac=function(t){return new(t||i)(p(L),p(I,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Ny=(()=>{class i extends su{constructor(e,t,o){super(e),this._platform=t,this._ngZone=o,this._cursorStyleIsSet=!1,this._pointerDownListener=a=>{this._pointerDownEventTarget=Ne(a)},this._clickListener=a=>{let r=Ne(a),s=a.type==="click"&&this._pointerDownEventTarget?this._pointerDownEventTarget:r;this._pointerDownEventTarget=null;let l=this._attachedOverlays.slice();for(let d=l.length-1;d>-1;d--){let h=l[d];if(h._outsidePointerEvents.observers.length<1||!h.hasAttached())continue;if(iu(h.overlayElement,r)||iu(h.overlayElement,s))break;let u=h._outsidePointerEvents;this._ngZone?this._ngZone.run(()=>u.next(a)):u.next(a)}}}add(e){if(super.add(e),!this._isAttached){let t=this._document.body;this._ngZone?this._ngZone.runOutsideAngular(()=>this._addEventListeners(t)):this._addEventListeners(t),this._platform.IOS&&!this._cursorStyleIsSet&&(this._cursorOriginalValue=t.style.cursor,t.style.cursor="pointer",this._cursorStyleIsSet=!0),this._isAttached=!0}}detach(){if(this._isAttached){let e=this._document.body;e.removeEventListener("pointerdown",this._pointerDownListener,!0),e.removeEventListener("click",this._clickListener,!0),e.removeEventListener("auxclick",this._clickListener,!0),e.removeEventListener("contextmenu",this._clickListener,!0),this._platform.IOS&&this._cursorStyleIsSet&&(e.style.cursor=this._cursorOriginalValue,this._cursorStyleIsSet=!1),this._isAttached=!1}}_addEventListeners(e){e.addEventListener("pointerdown",this._pointerDownListener,!0),e.addEventListener("click",this._clickListener,!0),e.addEventListener("auxclick",this._clickListener,!0),e.addEventListener("contextmenu",this._clickListener,!0)}static{this.\u0275fac=function(t){return new(t||i)(p(L),p(se),p(I,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();function iu(i,n){let e=typeof ShadowRoot<"u"&&ShadowRoot,t=n;for(;t;){if(t===i)return!0;t=e&&t instanceof ShadowRoot?t.host:t.parentNode}return!1}var lu=(()=>{class i{constructor(e,t){this._platform=t,this._document=e}ngOnDestroy(){this._containerElement?.remove()}getContainerElement(){return this._containerElement||this._createContainer(),this._containerElement}_createContainer(){let e="cdk-overlay-container";if(this._platform.isBrowser||Wn()){let o=this._document.querySelectorAll(`.${e}[platform="server"], .${e}[platform="test"]`);for(let a=0;a<o.length;a++)o[a].remove()}let t=this._document.createElement("div");t.classList.add(e),Wn()?t.setAttribute("platform","test"):this._platform.isBrowser||t.setAttribute("platform","server"),this._document.body.appendChild(t),this._containerElement=t}static{this.\u0275fac=function(t){return new(t||i)(p(L),p(se))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Ws=class{constructor(n,e,t,o,a,r,s,l,d,h=!1,u){this._portalOutlet=n,this._host=e,this._pane=t,this._config=o,this._ngZone=a,this._keyboardDispatcher=r,this._document=s,this._location=l,this._outsideClickDispatcher=d,this._animationsDisabled=h,this._injector=u,this._backdropElement=null,this._backdropClick=new D,this._attachments=new D,this._detachments=new D,this._locationChanges=ke.EMPTY,this._backdropClickHandler=v=>this._backdropClick.next(v),this._backdropTransitionendHandler=v=>{this._disposeBackdrop(v.target)},this._keydownEvents=new D,this._outsidePointerEvents=new D,this._renders=new D,o.scrollStrategy&&(this._scrollStrategy=o.scrollStrategy,this._scrollStrategy.attach(this)),this._positionStrategy=o.positionStrategy,this._afterRenderRef=lt(()=>_o(()=>{this._renders.next()},{injector:this._injector}))}get overlayElement(){return this._pane}get backdropElement(){return this._backdropElement}get hostElement(){return this._host}attach(n){!this._host.parentElement&&this._previousHostParent&&this._previousHostParent.appendChild(this._host);let e=this._portalOutlet.attach(n);return this._positionStrategy&&this._positionStrategy.attach(this),this._updateStackingOrder(),this._updateElementSize(),this._updateElementDirection(),this._scrollStrategy&&this._scrollStrategy.enable(),this._afterNextRenderRef?.destroy(),this._afterNextRenderRef=Fe(()=>{this.hasAttached()&&this.updatePosition()},{injector:this._injector}),this._togglePointerEvents(!0),this._config.hasBackdrop&&this._attachBackdrop(),this._config.panelClass&&this._toggleClasses(this._pane,this._config.panelClass,!0),this._attachments.next(),this._keyboardDispatcher.add(this),this._config.disposeOnNavigation&&(this._locationChanges=this._location.subscribe(()=>this.dispose())),this._outsideClickDispatcher.add(this),typeof e?.onDestroy=="function"&&e.onDestroy(()=>{this.hasAttached()&&this._ngZone.runOutsideAngular(()=>Promise.resolve().then(()=>this.detach()))}),e}detach(){if(!this.hasAttached())return;this.detachBackdrop(),this._togglePointerEvents(!1),this._positionStrategy&&this._positionStrategy.detach&&this._positionStrategy.detach(),this._scrollStrategy&&this._scrollStrategy.disable();let n=this._portalOutlet.detach();return this._detachments.next(),this._keyboardDispatcher.remove(this),this._detachContentWhenEmpty(),this._locationChanges.unsubscribe(),this._outsideClickDispatcher.remove(this),n}dispose(){let n=this.hasAttached();this._positionStrategy&&this._positionStrategy.dispose(),this._disposeScrollStrategy(),this._disposeBackdrop(this._backdropElement),this._locationChanges.unsubscribe(),this._keyboardDispatcher.remove(this),this._portalOutlet.dispose(),this._attachments.complete(),this._backdropClick.complete(),this._keydownEvents.complete(),this._outsidePointerEvents.complete(),this._outsideClickDispatcher.remove(this),this._host?.remove(),this._afterNextRenderRef?.destroy(),this._previousHostParent=this._pane=this._host=null,n&&this._detachments.next(),this._detachments.complete(),this._afterRenderRef.destroy(),this._renders.complete()}hasAttached(){return this._portalOutlet.hasAttached()}backdropClick(){return this._backdropClick}attachments(){return this._attachments}detachments(){return this._detachments}keydownEvents(){return this._keydownEvents}outsidePointerEvents(){return this._outsidePointerEvents}getConfig(){return this._config}updatePosition(){this._positionStrategy&&this._positionStrategy.apply()}updatePositionStrategy(n){n!==this._positionStrategy&&(this._positionStrategy&&this._positionStrategy.dispose(),this._positionStrategy=n,this.hasAttached()&&(n.attach(this),this.updatePosition()))}updateSize(n){this._config=_(_({},this._config),n),this._updateElementSize()}setDirection(n){this._config=me(_({},this._config),{direction:n}),this._updateElementDirection()}addPanelClass(n){this._pane&&this._toggleClasses(this._pane,n,!0)}removePanelClass(n){this._pane&&this._toggleClasses(this._pane,n,!1)}getDirection(){let n=this._config.direction;return n?typeof n=="string"?n:n.value:"ltr"}updateScrollStrategy(n){n!==this._scrollStrategy&&(this._disposeScrollStrategy(),this._scrollStrategy=n,this.hasAttached()&&(n.attach(this),n.enable()))}_updateElementDirection(){this._host.setAttribute("dir",this.getDirection())}_updateElementSize(){if(!this._pane)return;let n=this._pane.style;n.width=we(this._config.width),n.height=we(this._config.height),n.minWidth=we(this._config.minWidth),n.minHeight=we(this._config.minHeight),n.maxWidth=we(this._config.maxWidth),n.maxHeight=we(this._config.maxHeight)}_togglePointerEvents(n){this._pane.style.pointerEvents=n?"":"none"}_attachBackdrop(){let n="cdk-overlay-backdrop-showing";this._backdropElement=this._document.createElement("div"),this._backdropElement.classList.add("cdk-overlay-backdrop"),this._animationsDisabled&&this._backdropElement.classList.add("cdk-overlay-backdrop-noop-animation"),this._config.backdropClass&&this._toggleClasses(this._backdropElement,this._config.backdropClass,!0),this._host.parentElement.insertBefore(this._backdropElement,this._host),this._backdropElement.addEventListener("click",this._backdropClickHandler),!this._animationsDisabled&&typeof requestAnimationFrame<"u"?this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>{this._backdropElement&&this._backdropElement.classList.add(n)})}):this._backdropElement.classList.add(n)}_updateStackingOrder(){this._host.nextSibling&&this._host.parentNode.appendChild(this._host)}detachBackdrop(){let n=this._backdropElement;if(n){if(this._animationsDisabled){this._disposeBackdrop(n);return}n.classList.remove("cdk-overlay-backdrop-showing"),this._ngZone.runOutsideAngular(()=>{n.addEventListener("transitionend",this._backdropTransitionendHandler)}),n.style.pointerEvents="none",this._backdropTimeout=this._ngZone.runOutsideAngular(()=>setTimeout(()=>{this._disposeBackdrop(n)},500))}}_toggleClasses(n,e,t){let o=zi(e||[]).filter(a=>!!a);o.length&&(t?n.classList.add(...o):n.classList.remove(...o))}_detachContentWhenEmpty(){this._ngZone.runOutsideAngular(()=>{let n=this._renders.pipe(j(Ce(this._attachments,this._detachments))).subscribe(()=>{(!this._pane||!this._host||this._pane.children.length===0)&&(this._pane&&this._config.panelClass&&this._toggleClasses(this._pane,this._config.panelClass,!1),this._host&&this._host.parentElement&&(this._previousHostParent=this._host.parentElement,this._host.remove()),n.unsubscribe())})})}_disposeScrollStrategy(){let n=this._scrollStrategy;n&&(n.disable(),n.detach&&n.detach())}_disposeBackdrop(n){n&&(n.removeEventListener("click",this._backdropClickHandler),n.removeEventListener("transitionend",this._backdropTransitionendHandler),n.remove(),this._backdropElement===n&&(this._backdropElement=null)),this._backdropTimeout&&(clearTimeout(this._backdropTimeout),this._backdropTimeout=void 0)}},nu="cdk-overlay-connected-position-bounding-box",Hy=/([A-Za-z%]+)$/,Us=class{get positions(){return this._preferredPositions}constructor(n,e,t,o,a){this._viewportRuler=e,this._document=t,this._platform=o,this._overlayContainer=a,this._lastBoundingBoxSize={width:0,height:0},this._isPushed=!1,this._canPush=!0,this._growAfterOpen=!1,this._hasFlexibleDimensions=!0,this._positionLocked=!1,this._viewportMargin=0,this._scrollables=[],this._preferredPositions=[],this._positionChanges=new D,this._resizeSubscription=ke.EMPTY,this._offsetX=0,this._offsetY=0,this._appliedPanelClasses=[],this.positionChanges=this._positionChanges,this.setOrigin(n)}attach(n){this._overlayRef&&this._overlayRef,this._validatePositions(),n.hostElement.classList.add(nu),this._overlayRef=n,this._boundingBox=n.hostElement,this._pane=n.overlayElement,this._isDisposed=!1,this._isInitialRender=!0,this._lastPosition=null,this._resizeSubscription.unsubscribe(),this._resizeSubscription=this._viewportRuler.change().subscribe(()=>{this._isInitialRender=!0,this.apply()})}apply(){if(this._isDisposed||!this._platform.isBrowser)return;if(!this._isInitialRender&&this._positionLocked&&this._lastPosition){this.reapplyLastPosition();return}this._clearPanelClasses(),this._resetOverlayElementStyles(),this._resetBoundingBoxStyles(),this._viewportRect=this._getNarrowedViewportRect(),this._originRect=this._getOriginRect(),this._overlayRect=this._pane.getBoundingClientRect(),this._containerRect=this._overlayContainer.getContainerElement().getBoundingClientRect();let n=this._originRect,e=this._overlayRect,t=this._viewportRect,o=this._containerRect,a=[],r;for(let s of this._preferredPositions){let l=this._getOriginPoint(n,o,s),d=this._getOverlayPoint(l,e,s),h=this._getOverlayFit(d,e,t,s);if(h.isCompletelyWithinViewport){this._isPushed=!1,this._applyPosition(s,l);return}if(this._canFitWithFlexibleDimensions(h,d,t)){a.push({position:s,origin:l,overlayRect:e,boundingBoxRect:this._calculateBoundingBoxRect(l,s)});continue}(!r||r.overlayFit.visibleArea<h.visibleArea)&&(r={overlayFit:h,overlayPoint:d,originPoint:l,position:s,overlayRect:e})}if(a.length){let s=null,l=-1;for(let d of a){let h=d.boundingBoxRect.width*d.boundingBoxRect.height*(d.position.weight||1);h>l&&(l=h,s=d)}this._isPushed=!1,this._applyPosition(s.position,s.origin);return}if(this._canPush){this._isPushed=!0,this._applyPosition(r.position,r.originPoint);return}this._applyPosition(r.position,r.originPoint)}detach(){this._clearPanelClasses(),this._lastPosition=null,this._previousPushAmount=null,this._resizeSubscription.unsubscribe()}dispose(){this._isDisposed||(this._boundingBox&&wi(this._boundingBox.style,{top:"",left:"",right:"",bottom:"",height:"",width:"",alignItems:"",justifyContent:""}),this._pane&&this._resetOverlayElementStyles(),this._overlayRef&&this._overlayRef.hostElement.classList.remove(nu),this.detach(),this._positionChanges.complete(),this._overlayRef=this._boundingBox=null,this._isDisposed=!0)}reapplyLastPosition(){if(this._isDisposed||!this._platform.isBrowser)return;let n=this._lastPosition;if(n){this._originRect=this._getOriginRect(),this._overlayRect=this._pane.getBoundingClientRect(),this._viewportRect=this._getNarrowedViewportRect(),this._containerRect=this._overlayContainer.getContainerElement().getBoundingClientRect();let e=this._getOriginPoint(this._originRect,this._containerRect,n);this._applyPosition(n,e)}else this.apply()}withScrollableContainers(n){return this._scrollables=n,this}withPositions(n){return this._preferredPositions=n,n.indexOf(this._lastPosition)===-1&&(this._lastPosition=null),this._validatePositions(),this}withViewportMargin(n){return this._viewportMargin=n,this}withFlexibleDimensions(n=!0){return this._hasFlexibleDimensions=n,this}withGrowAfterOpen(n=!0){return this._growAfterOpen=n,this}withPush(n=!0){return this._canPush=n,this}withLockedPosition(n=!0){return this._positionLocked=n,this}setOrigin(n){return this._origin=n,this}withDefaultOffsetX(n){return this._offsetX=n,this}withDefaultOffsetY(n){return this._offsetY=n,this}withTransformOriginOn(n){return this._transformOriginSelector=n,this}_getOriginPoint(n,e,t){let o;if(t.originX=="center")o=n.left+n.width/2;else{let r=this._isRtl()?n.right:n.left,s=this._isRtl()?n.left:n.right;o=t.originX=="start"?r:s}e.left<0&&(o-=e.left);let a;return t.originY=="center"?a=n.top+n.height/2:a=t.originY=="top"?n.top:n.bottom,e.top<0&&(a-=e.top),{x:o,y:a}}_getOverlayPoint(n,e,t){let o;t.overlayX=="center"?o=-e.width/2:t.overlayX==="start"?o=this._isRtl()?-e.width:0:o=this._isRtl()?0:-e.width;let a;return t.overlayY=="center"?a=-e.height/2:a=t.overlayY=="top"?0:-e.height,{x:n.x+o,y:n.y+a}}_getOverlayFit(n,e,t,o){let a=au(e),{x:r,y:s}=n,l=this._getOffset(o,"x"),d=this._getOffset(o,"y");l&&(r+=l),d&&(s+=d);let h=0-r,u=r+a.width-t.width,v=0-s,y=s+a.height-t.height,O=this._subtractOverflows(a.width,h,u),U=this._subtractOverflows(a.height,v,y),K=O*U;return{visibleArea:K,isCompletelyWithinViewport:a.width*a.height===K,fitsInViewportVertically:U===a.height,fitsInViewportHorizontally:O==a.width}}_canFitWithFlexibleDimensions(n,e,t){if(this._hasFlexibleDimensions){let o=t.bottom-e.y,a=t.right-e.x,r=ou(this._overlayRef.getConfig().minHeight),s=ou(this._overlayRef.getConfig().minWidth),l=n.fitsInViewportVertically||r!=null&&r<=o,d=n.fitsInViewportHorizontally||s!=null&&s<=a;return l&&d}return!1}_pushOverlayOnScreen(n,e,t){if(this._previousPushAmount&&this._positionLocked)return{x:n.x+this._previousPushAmount.x,y:n.y+this._previousPushAmount.y};let o=au(e),a=this._viewportRect,r=Math.max(n.x+o.width-a.width,0),s=Math.max(n.y+o.height-a.height,0),l=Math.max(a.top-t.top-n.y,0),d=Math.max(a.left-t.left-n.x,0),h=0,u=0;return o.width<=a.width?h=d||-r:h=n.x<this._viewportMargin?a.left-t.left-n.x:0,o.height<=a.height?u=l||-s:u=n.y<this._viewportMargin?a.top-t.top-n.y:0,this._previousPushAmount={x:h,y:u},{x:n.x+h,y:n.y+u}}_applyPosition(n,e){if(this._setTransformOrigin(n),this._setOverlayElementStyles(e,n),this._setBoundingBoxStyles(e,n),n.panelClass&&this._addPanelClasses(n.panelClass),this._positionChanges.observers.length){let t=this._getScrollVisibility();if(n!==this._lastPosition||!this._lastScrollVisibility||!Ly(this._lastScrollVisibility,t)){let o=new js(n,t);this._positionChanges.next(o)}this._lastScrollVisibility=t}this._lastPosition=n,this._isInitialRender=!1}_setTransformOrigin(n){if(!this._transformOriginSelector)return;let e=this._boundingBox.querySelectorAll(this._transformOriginSelector),t,o=n.overlayY;n.overlayX==="center"?t="center":this._isRtl()?t=n.overlayX==="start"?"right":"left":t=n.overlayX==="start"?"left":"right";for(let a=0;a<e.length;a++)e[a].style.transformOrigin=`${t} ${o}`}_calculateBoundingBoxRect(n,e){let t=this._viewportRect,o=this._isRtl(),a,r,s;if(e.overlayY==="top")r=n.y,a=t.height-r+this._viewportMargin;else if(e.overlayY==="bottom")s=t.height-n.y+this._viewportMargin*2,a=t.height-s+this._viewportMargin;else{let y=Math.min(t.bottom-n.y+t.top,n.y),O=this._lastBoundingBoxSize.height;a=y*2,r=n.y-y,a>O&&!this._isInitialRender&&!this._growAfterOpen&&(r=n.y-O/2)}let l=e.overlayX==="start"&&!o||e.overlayX==="end"&&o,d=e.overlayX==="end"&&!o||e.overlayX==="start"&&o,h,u,v;if(d)v=t.width-n.x+this._viewportMargin*2,h=n.x-this._viewportMargin;else if(l)u=n.x,h=t.right-n.x;else{let y=Math.min(t.right-n.x+t.left,n.x),O=this._lastBoundingBoxSize.width;h=y*2,u=n.x-y,h>O&&!this._isInitialRender&&!this._growAfterOpen&&(u=n.x-O/2)}return{top:r,left:u,bottom:s,right:v,width:h,height:a}}_setBoundingBoxStyles(n,e){let t=this._calculateBoundingBoxRect(n,e);!this._isInitialRender&&!this._growAfterOpen&&(t.height=Math.min(t.height,this._lastBoundingBoxSize.height),t.width=Math.min(t.width,this._lastBoundingBoxSize.width));let o={};if(this._hasExactPosition())o.top=o.left="0",o.bottom=o.right=o.maxHeight=o.maxWidth="",o.width=o.height="100%";else{let a=this._overlayRef.getConfig().maxHeight,r=this._overlayRef.getConfig().maxWidth;o.height=we(t.height),o.top=we(t.top),o.bottom=we(t.bottom),o.width=we(t.width),o.left=we(t.left),o.right=we(t.right),e.overlayX==="center"?o.alignItems="center":o.alignItems=e.overlayX==="end"?"flex-end":"flex-start",e.overlayY==="center"?o.justifyContent="center":o.justifyContent=e.overlayY==="bottom"?"flex-end":"flex-start",a&&(o.maxHeight=we(a)),r&&(o.maxWidth=we(r))}this._lastBoundingBoxSize=t,wi(this._boundingBox.style,o)}_resetBoundingBoxStyles(){wi(this._boundingBox.style,{top:"0",left:"0",right:"0",bottom:"0",height:"",width:"",alignItems:"",justifyContent:""})}_resetOverlayElementStyles(){wi(this._pane.style,{top:"",left:"",bottom:"",right:"",position:"",transform:""})}_setOverlayElementStyles(n,e){let t={},o=this._hasExactPosition(),a=this._hasFlexibleDimensions,r=this._overlayRef.getConfig();if(o){let h=this._viewportRuler.getViewportScrollPosition();wi(t,this._getExactOverlayY(e,n,h)),wi(t,this._getExactOverlayX(e,n,h))}else t.position="static";let s="",l=this._getOffset(e,"x"),d=this._getOffset(e,"y");l&&(s+=`translateX(${l}px) `),d&&(s+=`translateY(${d}px)`),t.transform=s.trim(),r.maxHeight&&(o?t.maxHeight=we(r.maxHeight):a&&(t.maxHeight="")),r.maxWidth&&(o?t.maxWidth=we(r.maxWidth):a&&(t.maxWidth="")),wi(this._pane.style,t)}_getExactOverlayY(n,e,t){let o={top:"",bottom:""},a=this._getOverlayPoint(e,this._overlayRect,n);if(this._isPushed&&(a=this._pushOverlayOnScreen(a,this._overlayRect,t)),n.overlayY==="bottom"){let r=this._document.documentElement.clientHeight;o.bottom=`${r-(a.y+this._overlayRect.height)}px`}else o.top=we(a.y);return o}_getExactOverlayX(n,e,t){let o={left:"",right:""},a=this._getOverlayPoint(e,this._overlayRect,n);this._isPushed&&(a=this._pushOverlayOnScreen(a,this._overlayRect,t));let r;if(this._isRtl()?r=n.overlayX==="end"?"left":"right":r=n.overlayX==="end"?"right":"left",r==="right"){let s=this._document.documentElement.clientWidth;o.right=`${s-(a.x+this._overlayRect.width)}px`}else o.left=we(a.x);return o}_getScrollVisibility(){let n=this._getOriginRect(),e=this._pane.getBoundingClientRect(),t=this._scrollables.map(o=>o.getElementRef().nativeElement.getBoundingClientRect());return{isOriginClipped:tu(n,t),isOriginOutsideView:Ls(n,t),isOverlayClipped:tu(e,t),isOverlayOutsideView:Ls(e,t)}}_subtractOverflows(n,...e){return e.reduce((t,o)=>t-Math.max(o,0),n)}_getNarrowedViewportRect(){let n=this._document.documentElement.clientWidth,e=this._document.documentElement.clientHeight,t=this._viewportRuler.getViewportScrollPosition();return{top:t.top+this._viewportMargin,left:t.left+this._viewportMargin,right:t.left+n-this._viewportMargin,bottom:t.top+e-this._viewportMargin,width:n-2*this._viewportMargin,height:e-2*this._viewportMargin}}_isRtl(){return this._overlayRef.getDirection()==="rtl"}_hasExactPosition(){return!this._hasFlexibleDimensions||this._isPushed}_getOffset(n,e){return e==="x"?n.offsetX==null?this._offsetX:n.offsetX:n.offsetY==null?this._offsetY:n.offsetY}_validatePositions(){}_addPanelClasses(n){this._pane&&zi(n).forEach(e=>{e!==""&&this._appliedPanelClasses.indexOf(e)===-1&&(this._appliedPanelClasses.push(e),this._pane.classList.add(e))})}_clearPanelClasses(){this._pane&&(this._appliedPanelClasses.forEach(n=>{this._pane.classList.remove(n)}),this._appliedPanelClasses=[])}_getOriginRect(){let n=this._origin;if(n instanceof A)return n.nativeElement.getBoundingClientRect();if(n instanceof Element)return n.getBoundingClientRect();let e=n.width||0,t=n.height||0;return{top:n.y,bottom:n.y+t,left:n.x,right:n.x+e,height:t,width:e}}};function wi(i,n){for(let e in n)n.hasOwnProperty(e)&&(i[e]=n[e]);return i}function ou(i){if(typeof i!="number"&&i!=null){let[n,e]=i.split(Hy);return!e||e==="px"?parseFloat(n):null}return i||null}function au(i){return{top:Math.floor(i.top),right:Math.floor(i.right),bottom:Math.floor(i.bottom),left:Math.floor(i.left),width:Math.floor(i.width),height:Math.floor(i.height)}}function Ly(i,n){return i===n?!0:i.isOriginClipped===n.isOriginClipped&&i.isOriginOutsideView===n.isOriginOutsideView&&i.isOverlayClipped===n.isOverlayClipped&&i.isOverlayOutsideView===n.isOverlayOutsideView}var ru="cdk-global-overlay-wrapper",Vs=class{constructor(){this._cssPosition="static",this._topOffset="",this._bottomOffset="",this._alignItems="",this._xPosition="",this._xOffset="",this._width="",this._height="",this._isDisposed=!1}attach(n){let e=n.getConfig();this._overlayRef=n,this._width&&!e.width&&n.updateSize({width:this._width}),this._height&&!e.height&&n.updateSize({height:this._height}),n.hostElement.classList.add(ru),this._isDisposed=!1}top(n=""){return this._bottomOffset="",this._topOffset=n,this._alignItems="flex-start",this}left(n=""){return this._xOffset=n,this._xPosition="left",this}bottom(n=""){return this._topOffset="",this._bottomOffset=n,this._alignItems="flex-end",this}right(n=""){return this._xOffset=n,this._xPosition="right",this}start(n=""){return this._xOffset=n,this._xPosition="start",this}end(n=""){return this._xOffset=n,this._xPosition="end",this}width(n=""){return this._overlayRef?this._overlayRef.updateSize({width:n}):this._width=n,this}height(n=""){return this._overlayRef?this._overlayRef.updateSize({height:n}):this._height=n,this}centerHorizontally(n=""){return this.left(n),this._xPosition="center",this}centerVertically(n=""){return this.top(n),this._alignItems="center",this}apply(){if(!this._overlayRef||!this._overlayRef.hasAttached())return;let n=this._overlayRef.overlayElement.style,e=this._overlayRef.hostElement.style,t=this._overlayRef.getConfig(),{width:o,height:a,maxWidth:r,maxHeight:s}=t,l=(o==="100%"||o==="100vw")&&(!r||r==="100%"||r==="100vw"),d=(a==="100%"||a==="100vh")&&(!s||s==="100%"||s==="100vh"),h=this._xPosition,u=this._xOffset,v=this._overlayRef.getConfig().direction==="rtl",y="",O="",U="";l?U="flex-start":h==="center"?(U="center",v?O=u:y=u):v?h==="left"||h==="end"?(U="flex-end",y=u):(h==="right"||h==="start")&&(U="flex-start",O=u):h==="left"||h==="start"?(U="flex-start",y=u):(h==="right"||h==="end")&&(U="flex-end",O=u),n.position=this._cssPosition,n.marginLeft=l?"0":y,n.marginTop=d?"0":this._topOffset,n.marginBottom=this._bottomOffset,n.marginRight=l?"0":O,e.justifyContent=U,e.alignItems=d?"flex-start":this._alignItems}dispose(){if(this._isDisposed||!this._overlayRef)return;let n=this._overlayRef.overlayElement.style,e=this._overlayRef.hostElement,t=e.style;e.classList.remove(ru),t.justifyContent=t.alignItems=n.marginTop=n.marginBottom=n.marginLeft=n.marginRight=n.position="",this._overlayRef=null,this._isDisposed=!0}},zy=(()=>{class i{constructor(e,t,o,a){this._viewportRuler=e,this._document=t,this._platform=o,this._overlayContainer=a}global(){return new Vs}flexibleConnectedTo(e){return new Us(e,this._viewportRuler,this._document,this._platform,this._overlayContainer)}static{this.\u0275fac=function(t){return new(t||i)(p(ht),p(L),p(se),p(lu))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),jy=0,at=(()=>{class i{constructor(e,t,o,a,r,s,l,d,h,u,v,y){this.scrollStrategies=e,this._overlayContainer=t,this._componentFactoryResolver=o,this._positionBuilder=a,this._keyboardDispatcher=r,this._injector=s,this._ngZone=l,this._document=d,this._directionality=h,this._location=u,this._outsideClickDispatcher=v,this._animationsModuleType=y}create(e){let t=this._createHostElement(),o=this._createPaneElement(t),a=this._createPortalOutlet(o),r=new on(e);return r.direction=r.direction||this._directionality.value,new Ws(a,t,o,r,this._ngZone,this._keyboardDispatcher,this._document,this._location,this._outsideClickDispatcher,this._animationsModuleType==="NoopAnimations",this._injector.get(ei))}position(){return this._positionBuilder}_createPaneElement(e){let t=this._document.createElement("div");return t.id=`cdk-overlay-${jy++}`,t.classList.add("cdk-overlay-pane"),e.appendChild(t),t}_createHostElement(){let e=this._document.createElement("div");return this._overlayContainer.getContainerElement().appendChild(e),e}_createPortalOutlet(e){return this._appRef||(this._appRef=this._injector.get(yn)),new Aa(e,this._componentFactoryResolver,this._appRef,this._injector,this._document)}static{this.\u0275fac=function(t){return new(t||i)(p(Py),p(lu),p(Ga),p(zy),p(By),p(xe),p(I),p(L),p(Ae),p(Ai),p(Ny),p(Se,8))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})(),Wy=[{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom"},{originX:"end",originY:"top",overlayX:"end",overlayY:"bottom"},{originX:"end",originY:"bottom",overlayX:"end",overlayY:"top"}],cu=new w("cdk-connected-overlay-scroll-strategy",{providedIn:"root",factory:()=>{let i=b(at);return()=>i.scrollStrategies.reposition()}}),co=(()=>{class i{constructor(e){this.elementRef=e}static{this.\u0275fac=function(t){return new(t||i)(c(A))}}static{this.\u0275dir=k({type:i,selectors:[["","cdk-overlay-origin",""],["","overlay-origin",""],["","cdkOverlayOrigin",""]],exportAs:["cdkOverlayOrigin"],standalone:!0})}}return i})(),Gs=(()=>{class i{get offsetX(){return this._offsetX}set offsetX(e){this._offsetX=e,this._position&&this._updatePositionStrategy(this._position)}get offsetY(){return this._offsetY}set offsetY(e){this._offsetY=e,this._position&&this._updatePositionStrategy(this._position)}get disposeOnNavigation(){return this._disposeOnNavigation}set disposeOnNavigation(e){this._disposeOnNavigation=e}constructor(e,t,o,a,r){this._overlay=e,this._dir=r,this._backdropSubscription=ke.EMPTY,this._attachSubscription=ke.EMPTY,this._detachSubscription=ke.EMPTY,this._positionSubscription=ke.EMPTY,this._disposeOnNavigation=!1,this._ngZone=b(I),this.viewportMargin=0,this.open=!1,this.disableClose=!1,this.hasBackdrop=!1,this.lockPosition=!1,this.flexibleDimensions=!1,this.growAfterOpen=!1,this.push=!1,this.backdropClick=new N,this.positionChange=new N,this.attach=new N,this.detach=new N,this.overlayKeydown=new N,this.overlayOutsideClick=new N,this._templatePortal=new vi(t,o),this._scrollStrategyFactory=a,this.scrollStrategy=this._scrollStrategyFactory()}get overlayRef(){return this._overlayRef}get dir(){return this._dir?this._dir.value:"ltr"}ngOnDestroy(){this._attachSubscription.unsubscribe(),this._detachSubscription.unsubscribe(),this._backdropSubscription.unsubscribe(),this._positionSubscription.unsubscribe(),this._overlayRef&&this._overlayRef.dispose()}ngOnChanges(e){this._position&&(this._updatePositionStrategy(this._position),this._overlayRef.updateSize({width:this.width,minWidth:this.minWidth,height:this.height,minHeight:this.minHeight}),e.origin&&this.open&&this._position.apply()),e.open&&(this.open?this._attachOverlay():this._detachOverlay())}_createOverlay(){(!this.positions||!this.positions.length)&&(this.positions=Wy);let e=this._overlayRef=this._overlay.create(this._buildConfig());this._attachSubscription=e.attachments().subscribe(()=>this.attach.emit()),this._detachSubscription=e.detachments().subscribe(()=>this.detach.emit()),e.keydownEvents().subscribe(t=>{this.overlayKeydown.next(t),t.keyCode===27&&!this.disableClose&&!Me(t)&&(t.preventDefault(),this._detachOverlay())}),this._overlayRef.outsidePointerEvents().subscribe(t=>{let o=this._getOriginElement(),a=Ne(t);(!o||o!==a&&!o.contains(a))&&this.overlayOutsideClick.next(t)})}_buildConfig(){let e=this._position=this.positionStrategy||this._createPositionStrategy(),t=new on({direction:this._dir,positionStrategy:e,scrollStrategy:this.scrollStrategy,hasBackdrop:this.hasBackdrop,disposeOnNavigation:this.disposeOnNavigation});return(this.width||this.width===0)&&(t.width=this.width),(this.height||this.height===0)&&(t.height=this.height),(this.minWidth||this.minWidth===0)&&(t.minWidth=this.minWidth),(this.minHeight||this.minHeight===0)&&(t.minHeight=this.minHeight),this.backdropClass&&(t.backdropClass=this.backdropClass),this.panelClass&&(t.panelClass=this.panelClass),t}_updatePositionStrategy(e){let t=this.positions.map(o=>({originX:o.originX,originY:o.originY,overlayX:o.overlayX,overlayY:o.overlayY,offsetX:o.offsetX||this.offsetX,offsetY:o.offsetY||this.offsetY,panelClass:o.panelClass||void 0}));return e.setOrigin(this._getOrigin()).withPositions(t).withFlexibleDimensions(this.flexibleDimensions).withPush(this.push).withGrowAfterOpen(this.growAfterOpen).withViewportMargin(this.viewportMargin).withLockedPosition(this.lockPosition).withTransformOriginOn(this.transformOriginSelector)}_createPositionStrategy(){let e=this._overlay.position().flexibleConnectedTo(this._getOrigin());return this._updatePositionStrategy(e),e}_getOrigin(){return this.origin instanceof co?this.origin.elementRef:this.origin}_getOriginElement(){return this.origin instanceof co?this.origin.elementRef.nativeElement:this.origin instanceof A?this.origin.nativeElement:typeof Element<"u"&&this.origin instanceof Element?this.origin:null}_attachOverlay(){this._overlayRef?this._overlayRef.getConfig().hasBackdrop=this.hasBackdrop:this._createOverlay(),this._overlayRef.hasAttached()||this._overlayRef.attach(this._templatePortal),this.hasBackdrop?this._backdropSubscription=this._overlayRef.backdropClick().subscribe(e=>{this.backdropClick.emit(e)}):this._backdropSubscription.unsubscribe(),this._positionSubscription.unsubscribe(),this.positionChange.observers.length>0&&(this._positionSubscription=this._position.positionChanges.pipe(ml(()=>this.positionChange.observers.length>0)).subscribe(e=>{this._ngZone.run(()=>this.positionChange.emit(e)),this.positionChange.observers.length===0&&this._positionSubscription.unsubscribe()}))}_detachOverlay(){this._overlayRef&&this._overlayRef.detach(),this._backdropSubscription.unsubscribe(),this._positionSubscription.unsubscribe()}static{this.\u0275fac=function(t){return new(t||i)(c(at),c(Oe),c(ze),c(cu),c(Ae,8))}}static{this.\u0275dir=k({type:i,selectors:[["","cdk-connected-overlay",""],["","connected-overlay",""],["","cdkConnectedOverlay",""]],inputs:{origin:[0,"cdkConnectedOverlayOrigin","origin"],positions:[0,"cdkConnectedOverlayPositions","positions"],positionStrategy:[0,"cdkConnectedOverlayPositionStrategy","positionStrategy"],offsetX:[0,"cdkConnectedOverlayOffsetX","offsetX"],offsetY:[0,"cdkConnectedOverlayOffsetY","offsetY"],width:[0,"cdkConnectedOverlayWidth","width"],height:[0,"cdkConnectedOverlayHeight","height"],minWidth:[0,"cdkConnectedOverlayMinWidth","minWidth"],minHeight:[0,"cdkConnectedOverlayMinHeight","minHeight"],backdropClass:[0,"cdkConnectedOverlayBackdropClass","backdropClass"],panelClass:[0,"cdkConnectedOverlayPanelClass","panelClass"],viewportMargin:[0,"cdkConnectedOverlayViewportMargin","viewportMargin"],scrollStrategy:[0,"cdkConnectedOverlayScrollStrategy","scrollStrategy"],open:[0,"cdkConnectedOverlayOpen","open"],disableClose:[0,"cdkConnectedOverlayDisableClose","disableClose"],transformOriginSelector:[0,"cdkConnectedOverlayTransformOriginOn","transformOriginSelector"],hasBackdrop:[2,"cdkConnectedOverlayHasBackdrop","hasBackdrop",M],lockPosition:[2,"cdkConnectedOverlayLockPosition","lockPosition",M],flexibleDimensions:[2,"cdkConnectedOverlayFlexibleDimensions","flexibleDimensions",M],growAfterOpen:[2,"cdkConnectedOverlayGrowAfterOpen","growAfterOpen",M],push:[2,"cdkConnectedOverlayPush","push",M],disposeOnNavigation:[2,"cdkConnectedOverlayDisposeOnNavigation","disposeOnNavigation",M]},outputs:{backdropClick:"backdropClick",positionChange:"positionChange",attach:"attach",detach:"detach",overlayKeydown:"overlayKeydown",overlayOutsideClick:"overlayOutsideClick"},exportAs:["cdkConnectedOverlay"],standalone:!0,features:[le,be]})}}return i})();function Uy(i){return()=>i.scrollStrategies.reposition()}var Vy={provide:cu,deps:[at],useFactory:Uy},Ta=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({providers:[at,Vy],imports:[Nt,Xh,Vn,Vn]})}}return i})();var Yy=["panel"],Ky=["*"];function Zy(i,n){if(i&1){let e=Ie();m(0,"div",1,0),H("@panelAnimation.done",function(o){J(e);let a=ie();return Q(a._animationDone.next(o))}),q(2),f()}if(i&2){let e=n.id,t=ie();st(t._classList),z("mat-mdc-autocomplete-visible",t.showPanel)("mat-mdc-autocomplete-hidden",!t.showPanel)("mat-primary",t._color==="primary")("mat-accent",t._color==="accent")("mat-warn",t._color==="warn"),F("id",t.id)("@panelAnimation",t.isOpen?"visible":"hidden"),X("aria-label",t.ariaLabel||null)("aria-labelledby",t._getPanelAriaLabelledby(e))}}var $y=xt("panelAnimation",[Ct("void, hidden",Be({opacity:0,transform:"scaleY(0.8)"})),et(":enter, hidden => visible",[tc([Xe("0.03s linear",Be({opacity:1})),Xe("0.12s cubic-bezier(0, 0, 0.2, 1)",Be({transform:"scaleY(1)"}))])]),et(":leave, visible => hidden",[Xe("0.075s linear",Be({opacity:0}))])]),Jy=0,Ys=class{constructor(n,e){this.source=n,this.option=e}},du=new w("mat-autocomplete-default-options",{providedIn:"root",factory:Qy});function Qy(){return{autoActiveFirstOption:!1,autoSelectActiveOption:!1,hideSingleSelectionIndicator:!1,requireSelection:!1}}var hu=(()=>{class i{get isOpen(){return this._isOpen&&this.showPanel}_setColor(e){this._color=e,this._changeDetectorRef.markForCheck()}set classList(e){this._classList=e,this._elementRef.nativeElement.className=""}get hideSingleSelectionIndicator(){return this._hideSingleSelectionIndicator}set hideSingleSelectionIndicator(e){this._hideSingleSelectionIndicator=e,this._syncParentProperties()}_syncParentProperties(){if(this.options)for(let e of this.options)e._changeDetectorRef.markForCheck()}constructor(e,t,o,a){this._changeDetectorRef=e,this._elementRef=t,this._defaults=o,this._activeOptionChanges=ke.EMPTY,this._animationDone=new N,this.showPanel=!1,this._isOpen=!1,this.displayWith=null,this.optionSelected=new N,this.opened=new N,this.closed=new N,this.optionActivated=new N,this.id=`mat-autocomplete-${Jy++}`,this.inertGroups=a?.SAFARI||!1,this.autoActiveFirstOption=!!o.autoActiveFirstOption,this.autoSelectActiveOption=!!o.autoSelectActiveOption,this.requireSelection=!!o.requireSelection,this._hideSingleSelectionIndicator=this._defaults.hideSingleSelectionIndicator??!1}ngAfterContentInit(){this._keyManager=new Zi(this.options).withWrap().skipPredicate(this._skipPredicate),this._activeOptionChanges=this._keyManager.change.subscribe(e=>{this.isOpen&&this.optionActivated.emit({source:this,option:this.options.toArray()[e]||null})}),this._setVisibility()}ngOnDestroy(){this._keyManager?.destroy(),this._activeOptionChanges.unsubscribe(),this._animationDone.complete()}_setScrollTop(e){this.panel&&(this.panel.nativeElement.scrollTop=e)}_getScrollTop(){return this.panel?this.panel.nativeElement.scrollTop:0}_setVisibility(){this.showPanel=!!this.options.length,this._changeDetectorRef.markForCheck()}_emitSelectEvent(e){let t=new Ys(this,e);this.optionSelected.emit(t)}_getPanelAriaLabelledby(e){if(this.ariaLabel)return null;let t=e?e+" ":"";return this.ariaLabelledby?t+this.ariaLabelledby:e}_skipPredicate(){return!1}static{this.\u0275fac=function(t){return new(t||i)(c(de),c(A),c(du),c(se))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-autocomplete"]],contentQueries:function(t,o,a){if(t&1&&(ee(a,$i,5),ee(a,eo,5)),t&2){let r;x(r=C())&&(o.options=r),x(r=C())&&(o.optionGroups=r)}},viewQuery:function(t,o){if(t&1&&(oe(Oe,7),oe(Yy,5)),t&2){let a;x(a=C())&&(o.template=a.first),x(a=C())&&(o.panel=a.first)}},hostAttrs:[1,"mat-mdc-autocomplete"],inputs:{ariaLabel:[0,"aria-label","ariaLabel"],ariaLabelledby:[0,"aria-labelledby","ariaLabelledby"],displayWith:"displayWith",autoActiveFirstOption:[2,"autoActiveFirstOption","autoActiveFirstOption",M],autoSelectActiveOption:[2,"autoSelectActiveOption","autoSelectActiveOption",M],requireSelection:[2,"requireSelection","requireSelection",M],panelWidth:"panelWidth",disableRipple:[2,"disableRipple","disableRipple",M],classList:[0,"class","classList"],hideSingleSelectionIndicator:[2,"hideSingleSelectionIndicator","hideSingleSelectionIndicator",M]},outputs:{optionSelected:"optionSelected",opened:"opened",closed:"closed",optionActivated:"optionActivated"},exportAs:["matAutocomplete"],standalone:!0,features:[W([{provide:Xn,useExisting:i}]),le,G],ngContentSelectors:Ky,decls:1,vars:0,consts:[["panel",""],["role","listbox",1,"mat-mdc-autocomplete-panel","mdc-menu-surface","mdc-menu-surface--open",3,"id"]],template:function(t,o){t&1&&(re(),R(0,Zy,3,16,"ng-template"))},styles:["div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:static;border-radius:var(--mat-autocomplete-container-shape, var(--mat-app-corner-extra-small));box-shadow:var(--mat-autocomplete-container-elevation-shadow);background-color:var(--mat-autocomplete-background-color, var(--mat-app-surface-container))}.cdk-high-contrast-active div.mat-mdc-autocomplete-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}mat-autocomplete{display:none}"],encapsulation:2,data:{animation:[$y]},changeDetection:0})}}return i})();var Xy={provide:Yt,useExisting:Le(()=>Ks),multi:!0};var uu=new w("mat-autocomplete-scroll-strategy",{providedIn:"root",factory:()=>{let i=b(at);return()=>i.scrollStrategies.reposition()}});function e_(i){return()=>i.scrollStrategies.reposition()}var t_={provide:uu,deps:[at],useFactory:e_},Ks=(()=>{class i{constructor(e,t,o,a,r,s,l,d,h,u,v){this._element=e,this._overlay=t,this._viewContainerRef=o,this._zone=a,this._changeDetectorRef=r,this._dir=l,this._formField=d,this._document=h,this._viewportRuler=u,this._defaults=v,this._componentDestroyed=!1,this._manuallyFloatingLabel=!1,this._viewportSubscription=ke.EMPTY,this._breakpointObserver=b(Yo),this._handsetLandscapeSubscription=ke.EMPTY,this._canOpenOnNextFocus=!0,this._closeKeyEventStream=new D,this._windowBlurHandler=()=>{this._canOpenOnNextFocus=this._document.activeElement!==this._element.nativeElement||this.panelOpen},this._onChange=()=>{},this._onTouched=()=>{},this.position="auto",this.autocompleteAttribute="off",this._initialized=new D,this._injector=b(xe),this._aboveClass="mat-mdc-autocomplete-panel-above",this._overlayAttached=!1,this.optionSelections=Jt(()=>{let y=this.autocomplete?this.autocomplete.options:null;return y?y.changes.pipe(_e(y),ve(()=>Ce(...y.map(O=>O.onSelectionChange)))):this._initialized.pipe(ve(()=>this.optionSelections))}),this._handlePanelKeydown=y=>{(y.keyCode===27&&!Me(y)||y.keyCode===38&&Me(y,"altKey"))&&(this._pendingAutoselectedOption&&(this._updateNativeInputValue(this._valueBeforeAutoSelection??""),this._pendingAutoselectedOption=null),this._closeKeyEventStream.next(),this._resetActiveItem(),y.stopPropagation(),y.preventDefault())},this._trackedModal=null,this._scrollStrategy=s}ngAfterViewInit(){this._initialized.next(),this._initialized.complete();let e=this._getWindow();typeof e<"u"&&this._zone.runOutsideAngular(()=>e.addEventListener("blur",this._windowBlurHandler))}ngOnChanges(e){e.position&&this._positionStrategy&&(this._setStrategyPositions(this._positionStrategy),this.panelOpen&&this._overlayRef.updatePosition())}ngOnDestroy(){let e=this._getWindow();typeof e<"u"&&e.removeEventListener("blur",this._windowBlurHandler),this._handsetLandscapeSubscription.unsubscribe(),this._viewportSubscription.unsubscribe(),this._componentDestroyed=!0,this._destroyPanel(),this._closeKeyEventStream.complete(),this._clearFromModal()}get panelOpen(){return this._overlayAttached&&this.autocomplete.showPanel}openPanel(){this._openPanelInternal()}closePanel(){this._resetLabel(),this._overlayAttached&&(this.panelOpen&&this._zone.run(()=>{this.autocomplete.closed.emit()}),this.autocomplete._latestOpeningTrigger===this&&(this.autocomplete._isOpen=!1,this.autocomplete._latestOpeningTrigger=null),this._overlayAttached=!1,this._pendingAutoselectedOption=null,this._overlayRef&&this._overlayRef.hasAttached()&&(this._overlayRef.detach(),this._closingActionsSubscription.unsubscribe()),this._updatePanelState(),this._componentDestroyed||this._changeDetectorRef.detectChanges(),this._trackedModal&&mi(this._trackedModal,"aria-owns",this.autocomplete.id))}updatePosition(){this._overlayAttached&&this._overlayRef.updatePosition()}get panelClosingActions(){return Ce(this.optionSelections,this.autocomplete._keyManager.tabOut.pipe(ce(()=>this._overlayAttached)),this._closeKeyEventStream,this._getOutsideClickStream(),this._overlayRef?this._overlayRef.detachments().pipe(ce(()=>this._overlayAttached)):T()).pipe(E(e=>e instanceof Zn?e:null))}get activeOption(){return this.autocomplete&&this.autocomplete._keyManager?this.autocomplete._keyManager.activeItem:null}_getOutsideClickStream(){return Ce(pt(this._document,"click"),pt(this._document,"auxclick"),pt(this._document,"touchend")).pipe(ce(e=>{let t=Ne(e),o=this._formField?this._formField.getConnectedOverlayOrigin().nativeElement:null,a=this.connectedTo?this.connectedTo.elementRef.nativeElement:null;return this._overlayAttached&&t!==this._element.nativeElement&&this._document.activeElement!==this._element.nativeElement&&(!o||!o.contains(t))&&(!a||!a.contains(t))&&!!this._overlayRef&&!this._overlayRef.overlayElement.contains(t)}))}writeValue(e){Promise.resolve(null).then(()=>this._assignOptionValue(e))}registerOnChange(e){this._onChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this._element.nativeElement.disabled=e}_handleKeydown(e){let t=e.keyCode,o=Me(e);if(t===27&&!o&&e.preventDefault(),this._valueOnLastKeydown=this._element.nativeElement.value,this.activeOption&&t===13&&this.panelOpen&&!o)this.activeOption._selectViaInteraction(),this._resetActiveItem(),e.preventDefault();else if(this.autocomplete){let a=this.autocomplete._keyManager.activeItem,r=t===38||t===40;t===9||r&&!o&&this.panelOpen?this.autocomplete._keyManager.onKeydown(e):r&&this._canOpen()&&this._openPanelInternal(this._valueOnLastKeydown),(r||this.autocomplete._keyManager.activeItem!==a)&&(this._scrollToOption(this.autocomplete._keyManager.activeItemIndex||0),this.autocomplete.autoSelectActiveOption&&this.activeOption&&(this._pendingAutoselectedOption||(this._valueBeforeAutoSelection=this._valueOnLastKeydown),this._pendingAutoselectedOption=this.activeOption,this._assignOptionValue(this.activeOption.value)))}}_handleInput(e){let t=e.target,o=t.value;if(t.type==="number"&&(o=o==""?null:parseFloat(o)),this._previousValue!==o){if(this._previousValue=o,this._pendingAutoselectedOption=null,(!this.autocomplete||!this.autocomplete.requireSelection)&&this._onChange(o),!o)this._clearPreviousSelectedOption(null,!1);else if(this.panelOpen&&!this.autocomplete.requireSelection){let a=this.autocomplete.options?.find(r=>r.selected);if(a){let r=this._getDisplayValue(a.value);o!==r&&a.deselect(!1)}}if(this._canOpen()&&this._document.activeElement===e.target){let a=this._valueOnLastKeydown??this._element.nativeElement.value;this._valueOnLastKeydown=null,this._openPanelInternal(a)}}}_handleFocus(){this._canOpenOnNextFocus?this._canOpen()&&(this._previousValue=this._element.nativeElement.value,this._attachOverlay(this._previousValue),this._floatLabel(!0)):this._canOpenOnNextFocus=!0}_handleClick(){this._canOpen()&&!this.panelOpen&&this._openPanelInternal()}_floatLabel(e=!1){this._formField&&this._formField.floatLabel==="auto"&&(e?this._formField._animateAndLockLabel():this._formField.floatLabel="always",this._manuallyFloatingLabel=!0)}_resetLabel(){this._manuallyFloatingLabel&&(this._formField&&(this._formField.floatLabel="auto"),this._manuallyFloatingLabel=!1)}_subscribeToClosingActions(){let e=new rt(o=>{Fe(()=>{o.next()},{injector:this._injector})}),t=this.autocomplete.options.changes.pipe(ge(()=>this._positionStrategy.reapplyLastPosition()),cl(0));return Ce(e,t).pipe(ve(()=>this._zone.run(()=>{let o=this.panelOpen;return this._resetActiveItem(),this._updatePanelState(),this._changeDetectorRef.detectChanges(),this.panelOpen&&this._overlayRef.updatePosition(),o!==this.panelOpen&&(this.panelOpen?this._emitOpened():this.autocomplete.closed.emit()),this.panelClosingActions})),De(1)).subscribe(o=>this._setValueAndClose(o))}_emitOpened(){this.autocomplete.opened.emit()}_destroyPanel(){this._overlayRef&&(this.closePanel(),this._overlayRef.dispose(),this._overlayRef=null)}_getDisplayValue(e){let t=this.autocomplete;return t&&t.displayWith?t.displayWith(e):e}_assignOptionValue(e){let t=this._getDisplayValue(e);e==null&&this._clearPreviousSelectedOption(null,!1),this._updateNativeInputValue(t??"")}_updateNativeInputValue(e){this._formField?this._formField._control.value=e:this._element.nativeElement.value=e,this._previousValue=e}_setValueAndClose(e){let t=this.autocomplete,o=e?e.source:this._pendingAutoselectedOption;o?(this._clearPreviousSelectedOption(o),this._assignOptionValue(o.value),this._onChange(o.value),t._emitSelectEvent(o),this._element.nativeElement.focus()):t.requireSelection&&this._element.nativeElement.value!==this._valueOnAttach&&(this._clearPreviousSelectedOption(null),this._assignOptionValue(null),t._animationDone?t._animationDone.pipe(De(1)).subscribe(()=>this._onChange(null)):this._onChange(null)),this.closePanel()}_clearPreviousSelectedOption(e,t){this.autocomplete?.options?.forEach(o=>{o!==e&&o.selected&&o.deselect(t)})}_openPanelInternal(e=this._element.nativeElement.value){if(this._attachOverlay(e),this._floatLabel(),this._trackedModal){let t=this.autocomplete.id;Kn(this._trackedModal,"aria-owns",t)}}_attachOverlay(e){this.autocomplete;let t=this._overlayRef;t?(this._positionStrategy.setOrigin(this._getConnectedElement()),t.updateSize({width:this._getPanelWidth()})):(this._portal=new vi(this.autocomplete.template,this._viewContainerRef,{id:this._formField?.getLabelId()}),t=this._overlay.create(this._getOverlayConfig()),this._overlayRef=t,this._viewportSubscription=this._viewportRuler.change().subscribe(()=>{this.panelOpen&&t&&t.updateSize({width:this._getPanelWidth()})}),this._handsetLandscapeSubscription=this._breakpointObserver.observe(hd.HandsetLandscape).subscribe(a=>{a.matches?this._positionStrategy.withFlexibleDimensions(!0).withGrowAfterOpen(!0).withViewportMargin(8):this._positionStrategy.withFlexibleDimensions(!1).withGrowAfterOpen(!1).withViewportMargin(0)})),t&&!t.hasAttached()&&(t.attach(this._portal),this._valueOnAttach=e,this._valueOnLastKeydown=null,this._closingActionsSubscription=this._subscribeToClosingActions());let o=this.panelOpen;this.autocomplete._isOpen=this._overlayAttached=!0,this.autocomplete._latestOpeningTrigger=this,this.autocomplete._setColor(this._formField?.color),this._updatePanelState(),this._applyModalPanelOwnership(),this.panelOpen&&o!==this.panelOpen&&this._emitOpened()}_updatePanelState(){if(this.autocomplete._setVisibility(),this.panelOpen){let e=this._overlayRef;this._keydownSubscription||(this._keydownSubscription=e.keydownEvents().subscribe(this._handlePanelKeydown)),this._outsideClickSubscription||(this._outsideClickSubscription=e.outsidePointerEvents().subscribe())}else this._keydownSubscription?.unsubscribe(),this._outsideClickSubscription?.unsubscribe(),this._keydownSubscription=this._outsideClickSubscription=null}_getOverlayConfig(){return new on({positionStrategy:this._getOverlayPosition(),scrollStrategy:this._scrollStrategy(),width:this._getPanelWidth(),direction:this._dir??void 0,panelClass:this._defaults?.overlayPanelClass})}_getOverlayPosition(){let e=this._overlay.position().flexibleConnectedTo(this._getConnectedElement()).withFlexibleDimensions(!1).withPush(!1);return this._setStrategyPositions(e),this._positionStrategy=e,e}_setStrategyPositions(e){let t=[{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"end",originY:"bottom",overlayX:"end",overlayY:"top"}],o=this._aboveClass,a=[{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom",panelClass:o},{originX:"end",originY:"top",overlayX:"end",overlayY:"bottom",panelClass:o}],r;this.position==="above"?r=a:this.position==="below"?r=t:r=[...t,...a],e.withPositions(r)}_getConnectedElement(){return this.connectedTo?this.connectedTo.elementRef:this._formField?this._formField.getConnectedOverlayOrigin():this._element}_getPanelWidth(){return this.autocomplete.panelWidth||this._getHostWidth()}_getHostWidth(){return this._getConnectedElement().nativeElement.getBoundingClientRect().width}_resetActiveItem(){let e=this.autocomplete;if(e.autoActiveFirstOption){let t=-1;for(let o=0;o<e.options.length;o++)if(!e.options.get(o).disabled){t=o;break}e._keyManager.setActiveItem(t)}else e._keyManager.setActiveItem(-1)}_canOpen(){let e=this._element.nativeElement;return!e.readOnly&&!e.disabled&&!this.autocompleteDisabled}_getWindow(){return this._document?.defaultView||window}_scrollToOption(e){let t=this.autocomplete,o=ea(e,t.options,t.optionGroups);if(e===0&&o===1)t._setScrollTop(0);else if(t.panel){let a=t.options.toArray()[e];if(a){let r=a._getHostElement(),s=ta(r.offsetTop,r.offsetHeight,t._getScrollTop(),t.panel.nativeElement.offsetHeight);t._setScrollTop(s)}}}_applyModalPanelOwnership(){let e=this._element.nativeElement.closest('body > .cdk-overlay-container [aria-modal="true"]');if(!e)return;let t=this.autocomplete.id;this._trackedModal&&mi(this._trackedModal,"aria-owns",t),Kn(e,"aria-owns",t),this._trackedModal=e}_clearFromModal(){if(this._trackedModal){let e=this.autocomplete.id;mi(this._trackedModal,"aria-owns",e),this._trackedModal=null}}static{this.\u0275fac=function(t){return new(t||i)(c(A),c(at),c(ze),c(I),c(de),c(uu),c(Ae,8),c(Mt,9),c(L,8),c(ht),c(du,8))}}static{this.\u0275dir=k({type:i,selectors:[["input","matAutocomplete",""],["textarea","matAutocomplete",""]],hostAttrs:[1,"mat-mdc-autocomplete-trigger"],hostVars:7,hostBindings:function(t,o){t&1&&H("focusin",function(){return o._handleFocus()})("blur",function(){return o._onTouched()})("input",function(r){return o._handleInput(r)})("keydown",function(r){return o._handleKeydown(r)})("click",function(){return o._handleClick()}),t&2&&X("autocomplete",o.autocompleteAttribute)("role",o.autocompleteDisabled?null:"combobox")("aria-autocomplete",o.autocompleteDisabled?null:"list")("aria-activedescendant",o.panelOpen&&o.activeOption?o.activeOption.id:null)("aria-expanded",o.autocompleteDisabled?null:o.panelOpen.toString())("aria-controls",o.autocompleteDisabled||!o.panelOpen||o.autocomplete==null?null:o.autocomplete.id)("aria-haspopup",o.autocompleteDisabled?null:"listbox")},inputs:{autocomplete:[0,"matAutocomplete","autocomplete"],position:[0,"matAutocompletePosition","position"],connectedTo:[0,"matAutocompleteConnectedTo","connectedTo"],autocompleteAttribute:[0,"autocomplete","autocompleteAttribute"],autocompleteDisabled:[2,"matAutocompleteDisabled","autocompleteDisabled",M]},exportAs:["matAutocompleteTrigger"],standalone:!0,features:[W([Xy]),le,be]})}}return i})(),mu=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({providers:[t_],imports:[Ta,Ji,ne,kt,It,Ji,ne]})}}return i})();var n_=["trigger"],o_=["panel"],a_=[[["mat-select-trigger"]],"*"],r_=["mat-select-trigger","*"];function s_(i,n){if(i&1&&(m(0,"span",4),te(1),f()),i&2){let e=ie();g(),Qe(e.placeholder)}}function l_(i,n){i&1&&q(0)}function c_(i,n){if(i&1&&(m(0,"span",11),te(1),f()),i&2){let e=ie(2);g(),Qe(e.triggerValue)}}function d_(i,n){if(i&1&&(m(0,"span",5),R(1,l_,1,0)(2,c_,2,1,"span",11),f()),i&2){let e=ie();g(),$(e.customTrigger?1:2)}}function h_(i,n){if(i&1){let e=Ie();m(0,"div",12,1),H("@transformPanel.done",function(o){J(e);let a=ie();return Q(a._panelDoneAnimatingStream.next(o.toState))})("keydown",function(o){J(e);let a=ie();return Q(a._handleKeydown(o))}),q(2,1),f()}if(i&2){let e=ie();Ol("mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open ",e._getPanelTheme(),""),F("ngClass",e.panelClass)("@transformPanel","showing"),X("id",e.id+"-panel")("aria-multiselectable",e.multiple)("aria-label",e.ariaLabel||null)("aria-labelledby",e._getPanelAriaLabelledby())}}var u_={transformPanelWrap:xt("transformPanelWrap",[et("* => void",nc("@transformPanel",[ic()],{optional:!0}))]),transformPanel:xt("transformPanel",[Ct("void",Be({opacity:0,transform:"scale(1, 0.8)"})),et("void => showing",Xe("120ms cubic-bezier(0, 0, 0.2, 1)",Be({opacity:1,transform:"scale(1, 1)"}))),et("* => void",Xe("100ms linear",Be({opacity:0})))])};var pu=0,fu=new w("mat-select-scroll-strategy",{providedIn:"root",factory:()=>{let i=b(at);return()=>i.scrollStrategies.reposition()}});function m_(i){return()=>i.scrollStrategies.reposition()}var p_=new w("MAT_SELECT_CONFIG"),f_={provide:fu,deps:[at],useFactory:m_},g_=new w("MatSelectTrigger"),Zs=class{constructor(n,e){this.source=n,this.value=e}},gu=(()=>{class i{_scrollOptionIntoView(e){let t=this.options.toArray()[e];if(t){let o=this.panel.nativeElement,a=ea(e,this.options,this.optionGroups),r=t._getHostElement();e===0&&a===1?o.scrollTop=0:o.scrollTop=ta(r.offsetTop,r.offsetHeight,o.scrollTop,o.offsetHeight)}}_positioningSettled(){this._scrollOptionIntoView(this._keyManager.activeItemIndex||0)}_getChangeEvent(e){return new Zs(this,e)}get focused(){return this._focused||this._panelOpen}get hideSingleSelectionIndicator(){return this._hideSingleSelectionIndicator}set hideSingleSelectionIndicator(e){this._hideSingleSelectionIndicator=e,this._syncParentProperties()}get placeholder(){return this._placeholder}set placeholder(e){this._placeholder=e,this.stateChanges.next()}get required(){return this._required??this.ngControl?.control?.hasValidator(Ut.required)??!1}set required(e){this._required=e,this.stateChanges.next()}get multiple(){return this._multiple}set multiple(e){this._selectionModel,this._multiple=e}get compareWith(){return this._compareWith}set compareWith(e){this._compareWith=e,this._selectionModel&&this._initializeSelection()}get value(){return this._value}set value(e){this._assignValue(e)&&this._onChange(e)}get errorStateMatcher(){return this._errorStateTracker.matcher}set errorStateMatcher(e){this._errorStateTracker.matcher=e}get id(){return this._id}set id(e){this._id=e||this._uid,this.stateChanges.next()}get errorState(){return this._errorStateTracker.errorState}set errorState(e){this._errorStateTracker.errorState=e}constructor(e,t,o,a,r,s,l,d,h,u,v,y,O,U){this._viewportRuler=e,this._changeDetectorRef=t,this._elementRef=r,this._dir=s,this._parentFormField=h,this.ngControl=u,this._liveAnnouncer=O,this._defaultOptions=U,this._positions=[{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"end",originY:"bottom",overlayX:"end",overlayY:"top"},{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom",panelClass:"mat-mdc-select-panel-above"},{originX:"end",originY:"top",overlayX:"end",overlayY:"bottom",panelClass:"mat-mdc-select-panel-above"}],this._panelOpen=!1,this._compareWith=(K,ue)=>K===ue,this._uid=`mat-select-${pu++}`,this._triggerAriaLabelledBy=null,this._destroy=new D,this.stateChanges=new D,this.disableAutomaticLabeling=!0,this._onChange=()=>{},this._onTouched=()=>{},this._valueId=`mat-select-value-${pu++}`,this._panelDoneAnimatingStream=new D,this._overlayPanelClass=this._defaultOptions?.overlayPanelClass||"",this._focused=!1,this.controlType="mat-select",this.disabled=!1,this.disableRipple=!1,this.tabIndex=0,this._hideSingleSelectionIndicator=this._defaultOptions?.hideSingleSelectionIndicator??!1,this._multiple=!1,this.disableOptionCentering=this._defaultOptions?.disableOptionCentering??!1,this.ariaLabel="",this.panelWidth=this._defaultOptions&&typeof this._defaultOptions.panelWidth<"u"?this._defaultOptions.panelWidth:"auto",this._initialized=new D,this.optionSelectionChanges=Jt(()=>{let K=this.options;return K?K.changes.pipe(_e(K),ve(()=>Ce(...K.map(ue=>ue.onSelectionChange)))):this._initialized.pipe(ve(()=>this.optionSelectionChanges))}),this.openedChange=new N,this._openedStream=this.openedChange.pipe(ce(K=>K),E(()=>{})),this._closedStream=this.openedChange.pipe(ce(K=>!K),E(()=>{})),this.selectionChange=new N,this.valueChange=new N,this._trackedModal=null,this._skipPredicate=K=>this.panelOpen?!1:K.disabled,this.ngControl&&(this.ngControl.valueAccessor=this),U?.typeaheadDebounceInterval!=null&&(this.typeaheadDebounceInterval=U.typeaheadDebounceInterval),this._errorStateTracker=new zt(a,u,d,l,this.stateChanges),this._scrollStrategyFactory=y,this._scrollStrategy=this._scrollStrategyFactory(),this.tabIndex=parseInt(v)||0,this.id=this.id}ngOnInit(){this._selectionModel=new Vo(this.multiple),this.stateChanges.next(),this._panelDoneAnimatingStream.pipe(cn(),j(this._destroy)).subscribe(()=>this._panelDoneAnimating(this.panelOpen)),this._viewportRuler.change().pipe(j(this._destroy)).subscribe(()=>{this.panelOpen&&(this._overlayWidth=this._getOverlayWidth(this._preferredOverlayOrigin),this._changeDetectorRef.detectChanges())})}ngAfterContentInit(){this._initialized.next(),this._initialized.complete(),this._initKeyManager(),this._selectionModel.changed.pipe(j(this._destroy)).subscribe(e=>{e.added.forEach(t=>t.select()),e.removed.forEach(t=>t.deselect())}),this.options.changes.pipe(_e(null),j(this._destroy)).subscribe(()=>{this._resetOptions(),this._initializeSelection()})}ngDoCheck(){let e=this._getTriggerAriaLabelledby(),t=this.ngControl;if(e!==this._triggerAriaLabelledBy){let o=this._elementRef.nativeElement;this._triggerAriaLabelledBy=e,e?o.setAttribute("aria-labelledby",e):o.removeAttribute("aria-labelledby")}t&&(this._previousControl!==t.control&&(this._previousControl!==void 0&&t.disabled!==null&&t.disabled!==this.disabled&&(this.disabled=t.disabled),this._previousControl=t.control),this.updateErrorState())}ngOnChanges(e){(e.disabled||e.userAriaDescribedBy)&&this.stateChanges.next(),e.typeaheadDebounceInterval&&this._keyManager&&this._keyManager.withTypeAhead(this.typeaheadDebounceInterval)}ngOnDestroy(){this._keyManager?.destroy(),this._destroy.next(),this._destroy.complete(),this.stateChanges.complete(),this._clearFromModal()}toggle(){this.panelOpen?this.close():this.open()}open(){this._canOpen()&&(this._parentFormField&&(this._preferredOverlayOrigin=this._parentFormField.getConnectedOverlayOrigin()),this._overlayWidth=this._getOverlayWidth(this._preferredOverlayOrigin),this._applyModalPanelOwnership(),this._panelOpen=!0,this._keyManager.withHorizontalOrientation(null),this._highlightCorrectOption(),this._changeDetectorRef.markForCheck(),this.stateChanges.next())}_applyModalPanelOwnership(){let e=this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal="true"]');if(!e)return;let t=`${this.id}-panel`;this._trackedModal&&mi(this._trackedModal,"aria-owns",t),Kn(e,"aria-owns",t),this._trackedModal=e}_clearFromModal(){if(!this._trackedModal)return;let e=`${this.id}-panel`;mi(this._trackedModal,"aria-owns",e),this._trackedModal=null}close(){this._panelOpen&&(this._panelOpen=!1,this._keyManager.withHorizontalOrientation(this._isRtl()?"rtl":"ltr"),this._changeDetectorRef.markForCheck(),this._onTouched(),this.stateChanges.next())}writeValue(e){this._assignValue(e)}registerOnChange(e){this._onChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e,this._changeDetectorRef.markForCheck(),this.stateChanges.next()}get panelOpen(){return this._panelOpen}get selected(){return this.multiple?this._selectionModel?.selected||[]:this._selectionModel?.selected[0]}get triggerValue(){if(this.empty)return"";if(this._multiple){let e=this._selectionModel.selected.map(t=>t.viewValue);return this._isRtl()&&e.reverse(),e.join(", ")}return this._selectionModel.selected[0].viewValue}updateErrorState(){this._errorStateTracker.updateErrorState()}_isRtl(){return this._dir?this._dir.value==="rtl":!1}_handleKeydown(e){this.disabled||(this.panelOpen?this._handleOpenKeydown(e):this._handleClosedKeydown(e))}_handleClosedKeydown(e){let t=e.keyCode,o=t===40||t===38||t===37||t===39,a=t===13||t===32,r=this._keyManager;if(!r.isTyping()&&a&&!Me(e)||(this.multiple||e.altKey)&&o)e.preventDefault(),this.open();else if(!this.multiple){let s=this.selected;r.onKeydown(e);let l=this.selected;l&&s!==l&&this._liveAnnouncer.announce(l.viewValue,1e4)}}_handleOpenKeydown(e){let t=this._keyManager,o=e.keyCode,a=o===40||o===38,r=t.isTyping();if(a&&e.altKey)e.preventDefault(),this.close();else if(!r&&(o===13||o===32)&&t.activeItem&&!Me(e))e.preventDefault(),t.activeItem._selectViaInteraction();else if(!r&&this._multiple&&o===65&&e.ctrlKey){e.preventDefault();let s=this.options.some(l=>!l.disabled&&!l.selected);this.options.forEach(l=>{l.disabled||(s?l.select():l.deselect())})}else{let s=t.activeItemIndex;t.onKeydown(e),this._multiple&&a&&e.shiftKey&&t.activeItem&&t.activeItemIndex!==s&&t.activeItem._selectViaInteraction()}}_onFocus(){this.disabled||(this._focused=!0,this.stateChanges.next())}_onBlur(){this._focused=!1,this._keyManager?.cancelTypeahead(),!this.disabled&&!this.panelOpen&&(this._onTouched(),this._changeDetectorRef.markForCheck(),this.stateChanges.next())}_onAttached(){this._overlayDir.positionChange.pipe(De(1)).subscribe(()=>{this._changeDetectorRef.detectChanges(),this._positioningSettled()})}_getPanelTheme(){return this._parentFormField?`mat-${this._parentFormField.color}`:""}get empty(){return!this._selectionModel||this._selectionModel.isEmpty()}_initializeSelection(){Promise.resolve().then(()=>{this.ngControl&&(this._value=this.ngControl.value),this._setSelectionByValue(this._value),this.stateChanges.next()})}_setSelectionByValue(e){if(this.options.forEach(t=>t.setInactiveStyles()),this._selectionModel.clear(),this.multiple&&e)Array.isArray(e),e.forEach(t=>this._selectOptionByValue(t)),this._sortValues();else{let t=this._selectOptionByValue(e);t?this._keyManager.updateActiveItem(t):this.panelOpen||this._keyManager.updateActiveItem(-1)}this._changeDetectorRef.markForCheck()}_selectOptionByValue(e){let t=this.options.find(o=>{if(this._selectionModel.isSelected(o))return!1;try{return o.value!=null&&this._compareWith(o.value,e)}catch{return!1}});return t&&this._selectionModel.select(t),t}_assignValue(e){return e!==this._value||this._multiple&&Array.isArray(e)?(this.options&&this._setSelectionByValue(e),this._value=e,!0):!1}_getOverlayWidth(e){return this.panelWidth==="auto"?(e instanceof co?e.elementRef:e||this._elementRef).nativeElement.getBoundingClientRect().width:this.panelWidth===null?"":this.panelWidth}_syncParentProperties(){if(this.options)for(let e of this.options)e._changeDetectorRef.markForCheck()}_initKeyManager(){this._keyManager=new Zi(this.options).withTypeAhead(this.typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl()?"rtl":"ltr").withHomeAndEnd().withPageUpDown().withAllowedModifierKeys(["shiftKey"]).skipPredicate(this._skipPredicate),this._keyManager.tabOut.subscribe(()=>{this.panelOpen&&(!this.multiple&&this._keyManager.activeItem&&this._keyManager.activeItem._selectViaInteraction(),this.focus(),this.close())}),this._keyManager.change.subscribe(()=>{this._panelOpen&&this.panel?this._scrollOptionIntoView(this._keyManager.activeItemIndex||0):!this._panelOpen&&!this.multiple&&this._keyManager.activeItem&&this._keyManager.activeItem._selectViaInteraction()})}_resetOptions(){let e=Ce(this.options.changes,this._destroy);this.optionSelectionChanges.pipe(j(e)).subscribe(t=>{this._onSelect(t.source,t.isUserInput),t.isUserInput&&!this.multiple&&this._panelOpen&&(this.close(),this.focus())}),Ce(...this.options.map(t=>t._stateChanges)).pipe(j(e)).subscribe(()=>{this._changeDetectorRef.detectChanges(),this.stateChanges.next()})}_onSelect(e,t){let o=this._selectionModel.isSelected(e);e.value==null&&!this._multiple?(e.deselect(),this._selectionModel.clear(),this.value!=null&&this._propagateChanges(e.value)):(o!==e.selected&&(e.selected?this._selectionModel.select(e):this._selectionModel.deselect(e)),t&&this._keyManager.setActiveItem(e),this.multiple&&(this._sortValues(),t&&this.focus())),o!==this._selectionModel.isSelected(e)&&this._propagateChanges(),this.stateChanges.next()}_sortValues(){if(this.multiple){let e=this.options.toArray();this._selectionModel.sort((t,o)=>this.sortComparator?this.sortComparator(t,o,e):e.indexOf(t)-e.indexOf(o)),this.stateChanges.next()}}_propagateChanges(e){let t;this.multiple?t=this.selected.map(o=>o.value):t=this.selected?this.selected.value:e,this._value=t,this.valueChange.emit(t),this._onChange(t),this.selectionChange.emit(this._getChangeEvent(t)),this._changeDetectorRef.markForCheck()}_highlightCorrectOption(){if(this._keyManager)if(this.empty){let e=-1;for(let t=0;t<this.options.length;t++)if(!this.options.get(t).disabled){e=t;break}this._keyManager.setActiveItem(e)}else this._keyManager.setActiveItem(this._selectionModel.selected[0])}_canOpen(){return!this._panelOpen&&!this.disabled&&this.options?.length>0}focus(e){this._elementRef.nativeElement.focus(e)}_getPanelAriaLabelledby(){if(this.ariaLabel)return null;let e=this._parentFormField?.getLabelId(),t=e?e+" ":"";return this.ariaLabelledby?t+this.ariaLabelledby:e}_getAriaActiveDescendant(){return this.panelOpen&&this._keyManager&&this._keyManager.activeItem?this._keyManager.activeItem.id:null}_getTriggerAriaLabelledby(){if(this.ariaLabel)return null;let e=this._parentFormField?.getLabelId(),t=(e?e+" ":"")+this._valueId;return this.ariaLabelledby&&(t+=" "+this.ariaLabelledby),t}_panelDoneAnimating(e){this.openedChange.emit(e)}setDescribedByIds(e){e.length?this._elementRef.nativeElement.setAttribute("aria-describedby",e.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focus(),this.open()}get shouldLabelFloat(){return this.panelOpen||!this.empty||this.focused&&!!this.placeholder}static{this.\u0275fac=function(t){return new(t||i)(c(ht),c(de),c(I),c(jt),c(A),c(Ae,8),c(Tt,8),c(_i,8),c(Mt,8),c(Ke,10),$e("tabindex"),c(fu),c(vd),c(p_,8))}}static{this.\u0275cmp=V({type:i,selectors:[["mat-select"]],contentQueries:function(t,o,a){if(t&1&&(ee(a,g_,5),ee(a,$i,5),ee(a,eo,5)),t&2){let r;x(r=C())&&(o.customTrigger=r.first),x(r=C())&&(o.options=r),x(r=C())&&(o.optionGroups=r)}},viewQuery:function(t,o){if(t&1&&(oe(n_,5),oe(o_,5),oe(Gs,5)),t&2){let a;x(a=C())&&(o.trigger=a.first),x(a=C())&&(o.panel=a.first),x(a=C())&&(o._overlayDir=a.first)}},hostAttrs:["role","combobox","aria-haspopup","listbox",1,"mat-mdc-select"],hostVars:19,hostBindings:function(t,o){t&1&&H("keydown",function(r){return o._handleKeydown(r)})("focus",function(){return o._onFocus()})("blur",function(){return o._onBlur()}),t&2&&(X("id",o.id)("tabindex",o.disabled?-1:o.tabIndex)("aria-controls",o.panelOpen?o.id+"-panel":null)("aria-expanded",o.panelOpen)("aria-label",o.ariaLabel||null)("aria-required",o.required.toString())("aria-disabled",o.disabled.toString())("aria-invalid",o.errorState)("aria-activedescendant",o._getAriaActiveDescendant()),z("mat-mdc-select-disabled",o.disabled)("mat-mdc-select-invalid",o.errorState)("mat-mdc-select-required",o.required)("mat-mdc-select-empty",o.empty)("mat-mdc-select-multiple",o.multiple))},inputs:{userAriaDescribedBy:[0,"aria-describedby","userAriaDescribedBy"],panelClass:"panelClass",disabled:[2,"disabled","disabled",M],disableRipple:[2,"disableRipple","disableRipple",M],tabIndex:[2,"tabIndex","tabIndex",e=>e==null?0:vt(e)],hideSingleSelectionIndicator:[2,"hideSingleSelectionIndicator","hideSingleSelectionIndicator",M],placeholder:"placeholder",required:[2,"required","required",M],multiple:[2,"multiple","multiple",M],disableOptionCentering:[2,"disableOptionCentering","disableOptionCentering",M],compareWith:"compareWith",value:"value",ariaLabel:[0,"aria-label","ariaLabel"],ariaLabelledby:[0,"aria-labelledby","ariaLabelledby"],errorStateMatcher:"errorStateMatcher",typeaheadDebounceInterval:[2,"typeaheadDebounceInterval","typeaheadDebounceInterval",vt],sortComparator:"sortComparator",id:"id",panelWidth:"panelWidth"},outputs:{openedChange:"openedChange",_openedStream:"opened",_closedStream:"closed",selectionChange:"selectionChange",valueChange:"valueChange"},exportAs:["matSelect"],standalone:!0,features:[W([{provide:gi,useExisting:i},{provide:Xn,useExisting:i}]),le,be,G],ngContentSelectors:r_,decls:11,vars:8,consts:[["fallbackOverlayOrigin","cdkOverlayOrigin","trigger",""],["panel",""],["cdk-overlay-origin","",1,"mat-mdc-select-trigger",3,"click"],[1,"mat-mdc-select-value"],[1,"mat-mdc-select-placeholder","mat-mdc-select-min-line"],[1,"mat-mdc-select-value-text"],[1,"mat-mdc-select-arrow-wrapper"],[1,"mat-mdc-select-arrow"],["viewBox","0 0 24 24","width","24px","height","24px","focusable","false","aria-hidden","true"],["d","M7 10l5 5 5-5z"],["cdk-connected-overlay","","cdkConnectedOverlayLockPosition","","cdkConnectedOverlayHasBackdrop","","cdkConnectedOverlayBackdropClass","cdk-overlay-transparent-backdrop",3,"backdropClick","attach","detach","cdkConnectedOverlayPanelClass","cdkConnectedOverlayScrollStrategy","cdkConnectedOverlayOrigin","cdkConnectedOverlayOpen","cdkConnectedOverlayPositions","cdkConnectedOverlayWidth"],[1,"mat-mdc-select-min-line"],["role","listbox","tabindex","-1",3,"keydown","ngClass"]],template:function(t,o){if(t&1){let a=Ie();re(a_),m(0,"div",2,0),H("click",function(){return J(a),Q(o.open())}),m(3,"div",3),R(4,s_,2,1,"span",4)(5,d_,3,1,"span",5),f(),m(6,"div",6)(7,"div",7),un(),m(8,"svg",8),ae(9,"path",9),f()()()(),R(10,h_,3,9,"ng-template",10),H("backdropClick",function(){return J(a),Q(o.close())})("attach",function(){return J(a),Q(o._onAttached())})("detach",function(){return J(a),Q(o.close())})}if(t&2){let a=Re(1);g(3),X("id",o._valueId),g(),$(o.empty?4:5),g(6),F("cdkConnectedOverlayPanelClass",o._overlayPanelClass)("cdkConnectedOverlayScrollStrategy",o._scrollStrategy)("cdkConnectedOverlayOrigin",o._preferredOverlayOrigin||a)("cdkConnectedOverlayOpen",o.panelOpen)("cdkConnectedOverlayPositions",o._positions)("cdkConnectedOverlayWidth",o._overlayWidth)}},dependencies:[co,Gs,ko],styles:['.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-app-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-app-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-app-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-app-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-app-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-app-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color, var(--mat-app-surface-container))}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-app-on-surface-variant))}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform)}'],encapsulation:2,data:{animation:[u_.transformPanel]},changeDetection:0})}}return i})();var bu=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({providers:[f_],imports:[kt,Ta,Ji,ne,It,bi,Ji,ne]})}}return i})();var __=[[["caption"]],[["colgroup"],["col"]],"*"],v_=["caption","colgroup, col","*"];function w_(i,n){i&1&&q(0,2)}function k_(i,n){i&1&&(m(0,"thead",0),je(1,1),f(),m(2,"tbody",0),je(3,2)(4,3),f(),m(5,"tfoot",0),je(6,4),f())}function x_(i,n){i&1&&je(0,1)(1,2)(2,3)(3,4)}var ut=new w("CDK_TABLE");var Pa=(()=>{class i{constructor(e){this.template=e}static{this.\u0275fac=function(t){return new(t||i)(c(Oe))}}static{this.\u0275dir=k({type:i,selectors:[["","cdkCellDef",""]],standalone:!0})}}return i})(),Ba=(()=>{class i{constructor(e){this.template=e}static{this.\u0275fac=function(t){return new(t||i)(c(Oe))}}static{this.\u0275dir=k({type:i,selectors:[["","cdkHeaderCellDef",""]],standalone:!0})}}return i})(),vu=(()=>{class i{constructor(e){this.template=e}static{this.\u0275fac=function(t){return new(t||i)(c(Oe))}}static{this.\u0275dir=k({type:i,selectors:[["","cdkFooterCellDef",""]],standalone:!0})}}return i})(),an=(()=>{class i{get name(){return this._name}set name(e){this._setNameInput(e)}get sticky(){return this._sticky}set sticky(e){e!==this._sticky&&(this._sticky=e,this._hasStickyChanged=!0)}get stickyEnd(){return this._stickyEnd}set stickyEnd(e){e!==this._stickyEnd&&(this._stickyEnd=e,this._hasStickyChanged=!0)}constructor(e){this._table=e,this._hasStickyChanged=!1,this._sticky=!1,this._stickyEnd=!1}hasStickyChanged(){let e=this._hasStickyChanged;return this.resetStickyChanged(),e}resetStickyChanged(){this._hasStickyChanged=!1}_updateColumnCssClassName(){this._columnCssClassName=[`cdk-column-${this.cssClassFriendlyName}`]}_setNameInput(e){e&&(this._name=e,this.cssClassFriendlyName=e.replace(/[^a-z0-9_-]/gi,"-"),this._updateColumnCssClassName())}static{this.\u0275fac=function(t){return new(t||i)(c(ut,8))}}static{this.\u0275dir=k({type:i,selectors:[["","cdkColumnDef",""]],contentQueries:function(t,o,a){if(t&1&&(ee(a,Pa,5),ee(a,Ba,5),ee(a,vu,5)),t&2){let r;x(r=C())&&(o.cell=r.first),x(r=C())&&(o.headerCell=r.first),x(r=C())&&(o.footerCell=r.first)}},inputs:{name:[0,"cdkColumnDef","name"],sticky:[2,"sticky","sticky",M],stickyEnd:[2,"stickyEnd","stickyEnd",M]},standalone:!0,features:[W([{provide:"MAT_SORT_HEADER_COLUMN_DEF",useExisting:i}]),le]})}}return i})(),Ra=class{constructor(n,e){e.nativeElement.classList.add(...n._columnCssClassName)}},wu=(()=>{class i extends Ra{constructor(e,t){super(e,t)}static{this.\u0275fac=function(t){return new(t||i)(c(an),c(A))}}static{this.\u0275dir=k({type:i,selectors:[["cdk-header-cell"],["th","cdk-header-cell",""]],hostAttrs:["role","columnheader",1,"cdk-header-cell"],standalone:!0,features:[Z]})}}return i})();var ku=(()=>{class i extends Ra{constructor(e,t){super(e,t);let o=e._table?._getCellRole();o&&t.nativeElement.setAttribute("role",o)}static{this.\u0275fac=function(t){return new(t||i)(c(an),c(A))}}static{this.\u0275dir=k({type:i,selectors:[["cdk-cell"],["td","cdk-cell",""]],hostAttrs:[1,"cdk-cell"],standalone:!0,features:[Z]})}}return i})(),qa=class{constructor(){this.tasks=[],this.endTasks=[]}},Oa=new w("_COALESCED_STYLE_SCHEDULER"),Js=(()=>{class i{constructor(e){this._currentSchedule=null,this._ngZone=b(I)}schedule(e){this._createScheduleIfNeeded(),this._currentSchedule.tasks.push(e)}scheduleEnd(e){this._createScheduleIfNeeded(),this._currentSchedule.endTasks.push(e)}_createScheduleIfNeeded(){this._currentSchedule||(this._currentSchedule=new qa,this._ngZone.runOutsideAngular(()=>queueMicrotask(()=>{for(;this._currentSchedule.tasks.length||this._currentSchedule.endTasks.length;){let e=this._currentSchedule;this._currentSchedule=new qa;for(let t of e.tasks)t();for(let t of e.endTasks)t()}this._currentSchedule=null})))}static{this.\u0275fac=function(t){return new(t||i)(p(I))}}static{this.\u0275prov=S({token:i,factory:i.\u0275fac})}}return i})();var Qs=(()=>{class i{constructor(e,t){this.template=e,this._differs=t}ngOnChanges(e){if(!this._columnsDiffer){let t=e.columns&&e.columns.currentValue||[];this._columnsDiffer=this._differs.find(t).create(),this._columnsDiffer.diff(t)}}getColumnsDiff(){return this._columnsDiffer.diff(this.columns)}extractCellTemplate(e){return this instanceof ho?e.headerCell.template:this instanceof Xs?e.footerCell.template:e.cell.template}static{this.\u0275fac=function(t){return new(t||i)(c(Oe),c(ai))}}static{this.\u0275dir=k({type:i,features:[be]})}}return i})(),ho=(()=>{class i extends Qs{get sticky(){return this._sticky}set sticky(e){e!==this._sticky&&(this._sticky=e,this._hasStickyChanged=!0)}constructor(e,t,o){super(e,t),this._table=o,this._hasStickyChanged=!1,this._sticky=!1}ngOnChanges(e){super.ngOnChanges(e)}hasStickyChanged(){let e=this._hasStickyChanged;return this.resetStickyChanged(),e}resetStickyChanged(){this._hasStickyChanged=!1}static{this.\u0275fac=function(t){return new(t||i)(c(Oe),c(ai),c(ut,8))}}static{this.\u0275dir=k({type:i,selectors:[["","cdkHeaderRowDef",""]],inputs:{columns:[0,"cdkHeaderRowDef","columns"],sticky:[2,"cdkHeaderRowDefSticky","sticky",M]},standalone:!0,features:[le,Z,be]})}}return i})(),Xs=(()=>{class i extends Qs{get sticky(){return this._sticky}set sticky(e){e!==this._sticky&&(this._sticky=e,this._hasStickyChanged=!0)}constructor(e,t,o){super(e,t),this._table=o,this._hasStickyChanged=!1,this._sticky=!1}ngOnChanges(e){super.ngOnChanges(e)}hasStickyChanged(){let e=this._hasStickyChanged;return this.resetStickyChanged(),e}resetStickyChanged(){this._hasStickyChanged=!1}static{this.\u0275fac=function(t){return new(t||i)(c(Oe),c(ai),c(ut,8))}}static{this.\u0275dir=k({type:i,selectors:[["","cdkFooterRowDef",""]],inputs:{columns:[0,"cdkFooterRowDef","columns"],sticky:[2,"cdkFooterRowDefSticky","sticky",M]},standalone:!0,features:[le,Z,be]})}}return i})(),Na=(()=>{class i extends Qs{constructor(e,t,o){super(e,t),this._table=o}static{this.\u0275fac=function(t){return new(t||i)(c(Oe),c(ai),c(ut,8))}}static{this.\u0275dir=k({type:i,selectors:[["","cdkRowDef",""]],inputs:{columns:[0,"cdkRowDefColumns","columns"],when:[0,"cdkRowDefWhen","when"]},standalone:!0,features:[Z]})}}return i})(),ki=(()=>{class i{static{this.mostRecentCellOutlet=null}constructor(e){this._viewContainer=e,i.mostRecentCellOutlet=this}ngOnDestroy(){i.mostRecentCellOutlet===this&&(i.mostRecentCellOutlet=null)}static{this.\u0275fac=function(t){return new(t||i)(c(ze))}}static{this.\u0275dir=k({type:i,selectors:[["","cdkCellOutlet",""]],standalone:!0})}}return i})(),el=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275cmp=V({type:i,selectors:[["cdk-header-row"],["tr","cdk-header-row",""]],hostAttrs:["role","row",1,"cdk-header-row"],standalone:!0,features:[G],decls:1,vars:0,consts:[["cdkCellOutlet",""]],template:function(t,o){t&1&&je(0,0)},dependencies:[ki],encapsulation:2})}}return i})();var tl=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275cmp=V({type:i,selectors:[["cdk-row"],["tr","cdk-row",""]],hostAttrs:["role","row",1,"cdk-row"],standalone:!0,features:[G],decls:1,vars:0,consts:[["cdkCellOutlet",""]],template:function(t,o){t&1&&je(0,0)},dependencies:[ki],encapsulation:2})}}return i})(),xu=(()=>{class i{constructor(e){this.templateRef=e,this._contentClassName="cdk-no-data-row"}static{this.\u0275fac=function(t){return new(t||i)(c(Oe))}}static{this.\u0275dir=k({type:i,selectors:[["ng-template","cdkNoDataRow",""]],standalone:!0})}}return i})(),yu=["top","bottom","left","right"],$s=class{constructor(n,e,t,o,a=!0,r=!0,s){this._isNativeHtmlTable=n,this._stickCellCss=e,this.direction=t,this._coalescedStyleScheduler=o,this._isBrowser=a,this._needsPositionStickyOnElement=r,this._positionListener=s,this._elemSizeCache=new WeakMap,this._resizeObserver=globalThis?.ResizeObserver?new globalThis.ResizeObserver(l=>this._updateCachedSizes(l)):null,this._updatedStickyColumnsParamsToReplay=[],this._stickyColumnsReplayTimeout=null,this._cachedCellWidths=[],this._borderCellCss={top:`${e}-border-elem-top`,bottom:`${e}-border-elem-bottom`,left:`${e}-border-elem-left`,right:`${e}-border-elem-right`}}clearStickyPositioning(n,e){(e.includes("left")||e.includes("right"))&&this._removeFromStickyColumnReplayQueue(n);let t=[];for(let o of n)if(o.nodeType===o.ELEMENT_NODE){t.push(o);for(let a=0;a<o.children.length;a++)t.push(o.children[a])}this._coalescedStyleScheduler.schedule(()=>{for(let o of t)this._removeStickyStyle(o,e)})}updateStickyColumns(n,e,t,o=!0,a=!0){if(a&&this._updateStickyColumnReplayQueue({rows:[...n],stickyStartStates:[...e],stickyEndStates:[...t]}),!n.length||!this._isBrowser||!(e.some(r=>r)||t.some(r=>r))){this._positionListener&&(this._positionListener.stickyColumnsUpdated({sizes:[]}),this._positionListener.stickyEndColumnsUpdated({sizes:[]}));return}this._coalescedStyleScheduler.schedule(()=>{let r=n[0],s=r.children.length,l=this._getCellWidths(r,o),d=this._getStickyStartColumnPositions(l,e),h=this._getStickyEndColumnPositions(l,t),u=e.lastIndexOf(!0),v=t.indexOf(!0),y=this.direction==="rtl",O=y?"right":"left",U=y?"left":"right";for(let K of n)for(let ue=0;ue<s;ue++){let Et=K.children[ue];e[ue]&&this._addStickyStyle(Et,O,d[ue],ue===u),t[ue]&&this._addStickyStyle(Et,U,h[ue],ue===v)}this._positionListener&&(this._positionListener.stickyColumnsUpdated({sizes:u===-1?[]:l.slice(0,u+1).map((K,ue)=>e[ue]?K:null)}),this._positionListener.stickyEndColumnsUpdated({sizes:v===-1?[]:l.slice(v).map((K,ue)=>t[ue+v]?K:null).reverse()}))})}stickRows(n,e,t){this._isBrowser&&this._coalescedStyleScheduler.schedule(()=>{let o=t==="bottom"?n.slice().reverse():n,a=t==="bottom"?e.slice().reverse():e,r=[],s=[],l=[];for(let h=0,u=0;h<o.length;h++){if(!a[h])continue;r[h]=u;let v=o[h];l[h]=this._isNativeHtmlTable?Array.from(v.children):[v];let y=this._retrieveElementSize(v).height;u+=y,s[h]=y}let d=a.lastIndexOf(!0);for(let h=0;h<o.length;h++){if(!a[h])continue;let u=r[h],v=h===d;for(let y of l[h])this._addStickyStyle(y,t,u,v)}t==="top"?this._positionListener?.stickyHeaderRowsUpdated({sizes:s,offsets:r,elements:l}):this._positionListener?.stickyFooterRowsUpdated({sizes:s,offsets:r,elements:l})})}updateStickyFooterContainer(n,e){this._isNativeHtmlTable&&this._coalescedStyleScheduler.schedule(()=>{let t=n.querySelector("tfoot");t&&(e.some(o=>!o)?this._removeStickyStyle(t,["bottom"]):this._addStickyStyle(t,"bottom",0,!1))})}_removeStickyStyle(n,e){for(let o of e)n.style[o]="",n.classList.remove(this._borderCellCss[o]);yu.some(o=>e.indexOf(o)===-1&&n.style[o])?n.style.zIndex=this._getCalculatedZIndex(n):(n.style.zIndex="",this._needsPositionStickyOnElement&&(n.style.position=""),n.classList.remove(this._stickCellCss))}_addStickyStyle(n,e,t,o){n.classList.add(this._stickCellCss),o&&n.classList.add(this._borderCellCss[e]),n.style[e]=`${t}px`,n.style.zIndex=this._getCalculatedZIndex(n),this._needsPositionStickyOnElement&&(n.style.cssText+="position: -webkit-sticky; position: sticky; ")}_getCalculatedZIndex(n){let e={top:100,bottom:10,left:1,right:1},t=0;for(let o of yu)n.style[o]&&(t+=e[o]);return t?`${t}`:""}_getCellWidths(n,e=!0){if(!e&&this._cachedCellWidths.length)return this._cachedCellWidths;let t=[],o=n.children;for(let a=0;a<o.length;a++){let r=o[a];t.push(this._retrieveElementSize(r).width)}return this._cachedCellWidths=t,t}_getStickyStartColumnPositions(n,e){let t=[],o=0;for(let a=0;a<n.length;a++)e[a]&&(t[a]=o,o+=n[a]);return t}_getStickyEndColumnPositions(n,e){let t=[],o=0;for(let a=n.length;a>0;a--)e[a]&&(t[a]=o,o+=n[a]);return t}_retrieveElementSize(n){let e=this._elemSizeCache.get(n);if(e)return e;let t=n.getBoundingClientRect(),o={width:t.width,height:t.height};return this._resizeObserver&&(this._elemSizeCache.set(n,o),this._resizeObserver.observe(n,{box:"border-box"})),o}_updateStickyColumnReplayQueue(n){this._removeFromStickyColumnReplayQueue(n.rows),!this._stickyColumnsReplayTimeout&&this._updatedStickyColumnsParamsToReplay.push(n)}_removeFromStickyColumnReplayQueue(n){let e=new Set(n);for(let t of this._updatedStickyColumnsParamsToReplay)t.rows=t.rows.filter(o=>!e.has(o));this._updatedStickyColumnsParamsToReplay=this._updatedStickyColumnsParamsToReplay.filter(t=>!!t.rows.length)}_updateCachedSizes(n){let e=!1;for(let t of n){let o=t.borderBoxSize?.length?{width:t.borderBoxSize[0].inlineSize,height:t.borderBoxSize[0].blockSize}:{width:t.contentRect.width,height:t.contentRect.height};o.width!==this._elemSizeCache.get(t.target)?.width&&C_(t.target)&&(e=!0),this._elemSizeCache.set(t.target,o)}e&&this._updatedStickyColumnsParamsToReplay.length&&(this._stickyColumnsReplayTimeout&&clearTimeout(this._stickyColumnsReplayTimeout),this._stickyColumnsReplayTimeout=setTimeout(()=>{for(let t of this._updatedStickyColumnsParamsToReplay)this.updateStickyColumns(t.rows,t.stickyStartStates,t.stickyEndStates,!0,!1);this._updatedStickyColumnsParamsToReplay=[],this._stickyColumnsReplayTimeout=null},0))}};function C_(i){return["cdk-cell","cdk-header-cell","cdk-footer-cell"].some(n=>i.classList.contains(n))}var Fa=new w("CDK_SPL");var il=(()=>{class i{constructor(e,t){this.viewContainer=e,this.elementRef=t;let o=b(ut);o._rowOutlet=this,o._outletAssigned()}static{this.\u0275fac=function(t){return new(t||i)(c(ze),c(A))}}static{this.\u0275dir=k({type:i,selectors:[["","rowOutlet",""]],standalone:!0})}}return i})(),nl=(()=>{class i{constructor(e,t){this.viewContainer=e,this.elementRef=t;let o=b(ut);o._headerRowOutlet=this,o._outletAssigned()}static{this.\u0275fac=function(t){return new(t||i)(c(ze),c(A))}}static{this.\u0275dir=k({type:i,selectors:[["","headerRowOutlet",""]],standalone:!0})}}return i})(),ol=(()=>{class i{constructor(e,t){this.viewContainer=e,this.elementRef=t;let o=b(ut);o._footerRowOutlet=this,o._outletAssigned()}static{this.\u0275fac=function(t){return new(t||i)(c(ze),c(A))}}static{this.\u0275dir=k({type:i,selectors:[["","footerRowOutlet",""]],standalone:!0})}}return i})(),al=(()=>{class i{constructor(e,t){this.viewContainer=e,this.elementRef=t;let o=b(ut);o._noDataRowOutlet=this,o._outletAssigned()}static{this.\u0275fac=function(t){return new(t||i)(c(ze),c(A))}}static{this.\u0275dir=k({type:i,selectors:[["","noDataRowOutlet",""]],standalone:!0})}}return i})();var rl=(()=>{class i{_getCellRole(){if(this._cellRoleInternal===void 0){let e=this._elementRef.nativeElement.getAttribute("role");return e==="grid"||e==="treegrid"?"gridcell":"cell"}return this._cellRoleInternal}get trackBy(){return this._trackByFn}set trackBy(e){this._trackByFn=e}get dataSource(){return this._dataSource}set dataSource(e){this._dataSource!==e&&this._switchDataSource(e)}get multiTemplateDataRows(){return this._multiTemplateDataRows}set multiTemplateDataRows(e){this._multiTemplateDataRows=e,this._rowOutlet&&this._rowOutlet.viewContainer.length&&(this._forceRenderDataRows(),this.updateStickyColumnStyles())}get fixedLayout(){return this._fixedLayout}set fixedLayout(e){this._fixedLayout=e,this._forceRecalculateCellWidths=!0,this._stickyColumnStylesNeedReset=!0}constructor(e,t,o,a,r,s,l,d,h,u,v,y){this._differs=e,this._changeDetectorRef=t,this._elementRef=o,this._dir=r,this._platform=l,this._viewRepeater=d,this._coalescedStyleScheduler=h,this._viewportRuler=u,this._stickyPositioningListener=v,this._onDestroy=new D,this._columnDefsByName=new Map,this._customColumnDefs=new Set,this._customRowDefs=new Set,this._customHeaderRowDefs=new Set,this._customFooterRowDefs=new Set,this._headerRowDefChanged=!0,this._footerRowDefChanged=!0,this._stickyColumnStylesNeedReset=!0,this._forceRecalculateCellWidths=!0,this._cachedRenderRowsMap=new Map,this.stickyCssClass="cdk-table-sticky",this.needsPositionStickyOnElement=!0,this._isShowingNoDataRow=!1,this._hasAllOutlets=!1,this._hasInitialized=!1,this._cellRoleInternal=void 0,this._multiTemplateDataRows=!1,this._fixedLayout=!1,this.contentChanged=new N,this.viewChange=new Ee({start:0,end:Number.MAX_VALUE}),this._injector=b(xe),a||o.nativeElement.setAttribute("role","table"),this._document=s,this._isServer=!l.isBrowser,this._isNativeHtmlTable=o.nativeElement.nodeName==="TABLE"}ngOnInit(){this._setupStickyStyler(),this._dataDiffer=this._differs.find([]).create((e,t)=>this.trackBy?this.trackBy(t.dataIndex,t.data):t),this._viewportRuler.change().pipe(j(this._onDestroy)).subscribe(()=>{this._forceRecalculateCellWidths=!0})}ngAfterContentInit(){this._hasInitialized=!0}ngAfterContentChecked(){this._canRender()&&this._render()}ngOnDestroy(){[this._rowOutlet?.viewContainer,this._headerRowOutlet?.viewContainer,this._footerRowOutlet?.viewContainer,this._cachedRenderRowsMap,this._customColumnDefs,this._customRowDefs,this._customHeaderRowDefs,this._customFooterRowDefs,this._columnDefsByName].forEach(e=>{e?.clear()}),this._headerRowDefs=[],this._footerRowDefs=[],this._defaultRowDef=null,this._onDestroy.next(),this._onDestroy.complete(),Go(this.dataSource)&&this.dataSource.disconnect(this)}renderRows(){this._renderRows=this._getAllRenderRows();let e=this._dataDiffer.diff(this._renderRows);if(!e){this._updateNoDataRow(),this.contentChanged.next();return}let t=this._rowOutlet.viewContainer;this._viewRepeater.applyChanges(e,t,(o,a,r)=>this._getEmbeddedViewArgs(o.item,r),o=>o.item.data,o=>{o.operation===Ui.INSERTED&&o.context&&this._renderCellTemplateForItem(o.record.item.rowDef,o.context)}),this._updateRowIndexContext(),e.forEachIdentityChange(o=>{let a=t.get(o.currentIndex);a.context.$implicit=o.item.data}),this._updateNoDataRow(),Fe(()=>{this.updateStickyColumnStyles()},{injector:this._injector}),this.contentChanged.next()}addColumnDef(e){this._customColumnDefs.add(e)}removeColumnDef(e){this._customColumnDefs.delete(e)}addRowDef(e){this._customRowDefs.add(e)}removeRowDef(e){this._customRowDefs.delete(e)}addHeaderRowDef(e){this._customHeaderRowDefs.add(e),this._headerRowDefChanged=!0}removeHeaderRowDef(e){this._customHeaderRowDefs.delete(e),this._headerRowDefChanged=!0}addFooterRowDef(e){this._customFooterRowDefs.add(e),this._footerRowDefChanged=!0}removeFooterRowDef(e){this._customFooterRowDefs.delete(e),this._footerRowDefChanged=!0}setNoDataRow(e){this._customNoDataRow=e}updateStickyHeaderRowStyles(){let e=this._getRenderedRows(this._headerRowOutlet);if(this._isNativeHtmlTable){let o=_u(this._headerRowOutlet,"thead");o&&(o.style.display=e.length?"":"none")}let t=this._headerRowDefs.map(o=>o.sticky);this._stickyStyler.clearStickyPositioning(e,["top"]),this._stickyStyler.stickRows(e,t,"top"),this._headerRowDefs.forEach(o=>o.resetStickyChanged())}updateStickyFooterRowStyles(){let e=this._getRenderedRows(this._footerRowOutlet);if(this._isNativeHtmlTable){let o=_u(this._footerRowOutlet,"tfoot");o&&(o.style.display=e.length?"":"none")}let t=this._footerRowDefs.map(o=>o.sticky);this._stickyStyler.clearStickyPositioning(e,["bottom"]),this._stickyStyler.stickRows(e,t,"bottom"),this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement,t),this._footerRowDefs.forEach(o=>o.resetStickyChanged())}updateStickyColumnStyles(){let e=this._getRenderedRows(this._headerRowOutlet),t=this._getRenderedRows(this._rowOutlet),o=this._getRenderedRows(this._footerRowOutlet);(this._isNativeHtmlTable&&!this._fixedLayout||this._stickyColumnStylesNeedReset)&&(this._stickyStyler.clearStickyPositioning([...e,...t,...o],["left","right"]),this._stickyColumnStylesNeedReset=!1),e.forEach((a,r)=>{this._addStickyColumnStyles([a],this._headerRowDefs[r])}),this._rowDefs.forEach(a=>{let r=[];for(let s=0;s<t.length;s++)this._renderRows[s].rowDef===a&&r.push(t[s]);this._addStickyColumnStyles(r,a)}),o.forEach((a,r)=>{this._addStickyColumnStyles([a],this._footerRowDefs[r])}),Array.from(this._columnDefsByName.values()).forEach(a=>a.resetStickyChanged())}_outletAssigned(){!this._hasAllOutlets&&this._rowOutlet&&this._headerRowOutlet&&this._footerRowOutlet&&this._noDataRowOutlet&&(this._hasAllOutlets=!0,this._canRender()&&this._render())}_canRender(){return this._hasAllOutlets&&this._hasInitialized}_render(){this._cacheRowDefs(),this._cacheColumnDefs(),!this._headerRowDefs.length&&!this._footerRowDefs.length&&this._rowDefs.length;let t=this._renderUpdatedColumns()||this._headerRowDefChanged||this._footerRowDefChanged;this._stickyColumnStylesNeedReset=this._stickyColumnStylesNeedReset||t,this._forceRecalculateCellWidths=t,this._headerRowDefChanged&&(this._forceRenderHeaderRows(),this._headerRowDefChanged=!1),this._footerRowDefChanged&&(this._forceRenderFooterRows(),this._footerRowDefChanged=!1),this.dataSource&&this._rowDefs.length>0&&!this._renderChangeSubscription?this._observeRenderChanges():this._stickyColumnStylesNeedReset&&this.updateStickyColumnStyles(),this._checkStickyStates()}_getAllRenderRows(){let e=[],t=this._cachedRenderRowsMap;this._cachedRenderRowsMap=new Map;for(let o=0;o<this._data.length;o++){let a=this._data[o],r=this._getRenderRowsForData(a,o,t.get(a));this._cachedRenderRowsMap.has(a)||this._cachedRenderRowsMap.set(a,new WeakMap);for(let s=0;s<r.length;s++){let l=r[s],d=this._cachedRenderRowsMap.get(l.data);d.has(l.rowDef)?d.get(l.rowDef).push(l):d.set(l.rowDef,[l]),e.push(l)}}return e}_getRenderRowsForData(e,t,o){return this._getRowDefs(e,t).map(r=>{let s=o&&o.has(r)?o.get(r):[];if(s.length){let l=s.shift();return l.dataIndex=t,l}else return{data:e,rowDef:r,dataIndex:t}})}_cacheColumnDefs(){this._columnDefsByName.clear(),Ea(this._getOwnDefs(this._contentColumnDefs),this._customColumnDefs).forEach(t=>{this._columnDefsByName.has(t.name),this._columnDefsByName.set(t.name,t)})}_cacheRowDefs(){this._headerRowDefs=Ea(this._getOwnDefs(this._contentHeaderRowDefs),this._customHeaderRowDefs),this._footerRowDefs=Ea(this._getOwnDefs(this._contentFooterRowDefs),this._customFooterRowDefs),this._rowDefs=Ea(this._getOwnDefs(this._contentRowDefs),this._customRowDefs);let e=this._rowDefs.filter(t=>!t.when);!this.multiTemplateDataRows&&e.length>1,this._defaultRowDef=e[0]}_renderUpdatedColumns(){let e=(r,s)=>{let l=!!s.getColumnsDiff();return r||l},t=this._rowDefs.reduce(e,!1);t&&this._forceRenderDataRows();let o=this._headerRowDefs.reduce(e,!1);o&&this._forceRenderHeaderRows();let a=this._footerRowDefs.reduce(e,!1);return a&&this._forceRenderFooterRows(),t||o||a}_switchDataSource(e){this._data=[],Go(this.dataSource)&&this.dataSource.disconnect(this),this._renderChangeSubscription&&(this._renderChangeSubscription.unsubscribe(),this._renderChangeSubscription=null),e||(this._dataDiffer&&this._dataDiffer.diff([]),this._rowOutlet&&this._rowOutlet.viewContainer.clear()),this._dataSource=e}_observeRenderChanges(){if(!this.dataSource)return;let e;Go(this.dataSource)?e=this.dataSource.connect(this):$t(this.dataSource)?e=this.dataSource:Array.isArray(this.dataSource)&&(e=T(this.dataSource)),this._renderChangeSubscription=e.pipe(j(this._onDestroy)).subscribe(t=>{this._data=t||[],this.renderRows()})}_forceRenderHeaderRows(){this._headerRowOutlet.viewContainer.length>0&&this._headerRowOutlet.viewContainer.clear(),this._headerRowDefs.forEach((e,t)=>this._renderRow(this._headerRowOutlet,e,t)),this.updateStickyHeaderRowStyles()}_forceRenderFooterRows(){this._footerRowOutlet.viewContainer.length>0&&this._footerRowOutlet.viewContainer.clear(),this._footerRowDefs.forEach((e,t)=>this._renderRow(this._footerRowOutlet,e,t)),this.updateStickyFooterRowStyles()}_addStickyColumnStyles(e,t){let o=Array.from(t.columns||[]).map(s=>{let l=this._columnDefsByName.get(s);return l}),a=o.map(s=>s.sticky),r=o.map(s=>s.stickyEnd);this._stickyStyler.updateStickyColumns(e,a,r,!this._fixedLayout||this._forceRecalculateCellWidths)}_getRenderedRows(e){let t=[];for(let o=0;o<e.viewContainer.length;o++){let a=e.viewContainer.get(o);t.push(a.rootNodes[0])}return t}_getRowDefs(e,t){if(this._rowDefs.length==1)return[this._rowDefs[0]];let o=[];if(this.multiTemplateDataRows)o=this._rowDefs.filter(a=>!a.when||a.when(t,e));else{let a=this._rowDefs.find(r=>r.when&&r.when(t,e))||this._defaultRowDef;a&&o.push(a)}return o.length,o}_getEmbeddedViewArgs(e,t){let o=e.rowDef,a={$implicit:e.data};return{templateRef:o.template,context:a,index:t}}_renderRow(e,t,o,a={}){let r=e.viewContainer.createEmbeddedView(t.template,a,o);return this._renderCellTemplateForItem(t,a),r}_renderCellTemplateForItem(e,t){for(let o of this._getCellTemplates(e))ki.mostRecentCellOutlet&&ki.mostRecentCellOutlet._viewContainer.createEmbeddedView(o,t);this._changeDetectorRef.markForCheck()}_updateRowIndexContext(){let e=this._rowOutlet.viewContainer;for(let t=0,o=e.length;t<o;t++){let r=e.get(t).context;r.count=o,r.first=t===0,r.last=t===o-1,r.even=t%2===0,r.odd=!r.even,this.multiTemplateDataRows?(r.dataIndex=this._renderRows[t].dataIndex,r.renderIndex=t):r.index=this._renderRows[t].dataIndex}}_getCellTemplates(e){return!e||!e.columns?[]:Array.from(e.columns,t=>{let o=this._columnDefsByName.get(t);return e.extractCellTemplate(o)})}_forceRenderDataRows(){this._dataDiffer.diff([]),this._rowOutlet.viewContainer.clear(),this.renderRows()}_checkStickyStates(){let e=(t,o)=>t||o.hasStickyChanged();this._headerRowDefs.reduce(e,!1)&&this.updateStickyHeaderRowStyles(),this._footerRowDefs.reduce(e,!1)&&this.updateStickyFooterRowStyles(),Array.from(this._columnDefsByName.values()).reduce(e,!1)&&(this._stickyColumnStylesNeedReset=!0,this.updateStickyColumnStyles())}_setupStickyStyler(){let e=this._dir?this._dir.value:"ltr";this._stickyStyler=new $s(this._isNativeHtmlTable,this.stickyCssClass,e,this._coalescedStyleScheduler,this._platform.isBrowser,this.needsPositionStickyOnElement,this._stickyPositioningListener),(this._dir?this._dir.change:T()).pipe(j(this._onDestroy)).subscribe(t=>{this._stickyStyler.direction=t,this.updateStickyColumnStyles()})}_getOwnDefs(e){return e.filter(t=>!t._table||t._table===this)}_updateNoDataRow(){let e=this._customNoDataRow||this._noDataRow;if(!e)return;let t=this._rowOutlet.viewContainer.length===0;if(t===this._isShowingNoDataRow)return;let o=this._noDataRowOutlet.viewContainer;if(t){let a=o.createEmbeddedView(e.templateRef),r=a.rootNodes[0];a.rootNodes.length===1&&r?.nodeType===this._document.ELEMENT_NODE&&(r.setAttribute("role","row"),r.classList.add(e._contentClassName))}else o.clear();this._isShowingNoDataRow=t,this._changeDetectorRef.markForCheck()}static{this.\u0275fac=function(t){return new(t||i)(c(ai),c(de),c(A),$e("role"),c(Ae,8),c(L),c(se),c(Un),c(Oa),c(ht),c(Fa,12),c(I,8))}}static{this.\u0275cmp=V({type:i,selectors:[["cdk-table"],["table","cdk-table",""]],contentQueries:function(t,o,a){if(t&1&&(ee(a,xu,5),ee(a,an,5),ee(a,Na,5),ee(a,ho,5),ee(a,Xs,5)),t&2){let r;x(r=C())&&(o._noDataRow=r.first),x(r=C())&&(o._contentColumnDefs=r),x(r=C())&&(o._contentRowDefs=r),x(r=C())&&(o._contentHeaderRowDefs=r),x(r=C())&&(o._contentFooterRowDefs=r)}},hostAttrs:[1,"cdk-table"],hostVars:2,hostBindings:function(t,o){t&2&&z("cdk-table-fixed-layout",o.fixedLayout)},inputs:{trackBy:"trackBy",dataSource:"dataSource",multiTemplateDataRows:[2,"multiTemplateDataRows","multiTemplateDataRows",M],fixedLayout:[2,"fixedLayout","fixedLayout",M]},outputs:{contentChanged:"contentChanged"},exportAs:["cdkTable"],standalone:!0,features:[W([{provide:ut,useExisting:i},{provide:Un,useClass:Vi},{provide:Oa,useClass:Js},{provide:Fa,useValue:null}]),le,G],ngContentSelectors:v_,decls:5,vars:2,consts:[["role","rowgroup"],["headerRowOutlet",""],["rowOutlet",""],["noDataRowOutlet",""],["footerRowOutlet",""]],template:function(t,o){t&1&&(re(__),q(0),q(1,1),R(2,w_,1,0)(3,k_,7,0)(4,x_,4,0)),t&2&&(g(2),$(o._isServer?2:-1),g(),$(o._isNativeHtmlTable?3:4))},dependencies:[nl,il,al,ol],styles:[".cdk-table-fixed-layout{table-layout:fixed}"],encapsulation:2})}}return i})();function Ea(i,n){return i.concat(Array.from(n))}function _u(i,n){let e=n.toUpperCase(),t=i.viewContainer.element.nativeElement;for(;t;){let o=t.nodeType===1?t.nodeName:null;if(o===e)return t;if(o==="TABLE")break;t=t.parentNode}return null}var Cu=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[Vn]})}}return i})();var S_=[[["caption"]],[["colgroup"],["col"]],"*"],D_=["caption","colgroup, col","*"];function I_(i,n){i&1&&q(0,2)}function A_(i,n){i&1&&(m(0,"thead",0),je(1,1),f(),m(2,"tbody",2),je(3,3)(4,4),f(),m(5,"tfoot",0),je(6,5),f())}function M_(i,n){i&1&&je(0,1)(1,3)(2,4)(3,5)}var Su=(()=>{class i extends rl{constructor(){super(...arguments),this.stickyCssClass="mat-mdc-table-sticky",this.needsPositionStickyOnElement=!1}static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275cmp=V({type:i,selectors:[["mat-table"],["table","mat-table",""]],hostAttrs:[1,"mat-mdc-table","mdc-data-table__table"],hostVars:2,hostBindings:function(t,o){t&2&&z("mdc-table-fixed-layout",o.fixedLayout)},exportAs:["matTable"],standalone:!0,features:[W([{provide:rl,useExisting:i},{provide:ut,useExisting:i},{provide:Oa,useClass:Js},{provide:Un,useClass:Vi},{provide:Fa,useValue:null}]),Z,G],ngContentSelectors:D_,decls:5,vars:2,consts:[["role","rowgroup"],["headerRowOutlet",""],["role","rowgroup",1,"mdc-data-table__content"],["rowOutlet",""],["noDataRowOutlet",""],["footerRowOutlet",""]],template:function(t,o){t&1&&(re(S_),q(0),q(1,1),R(2,I_,1,0)(3,A_,7,0)(4,M_,4,0)),t&2&&(g(2),$(o._isServer?2:-1),g(),$(o._isNativeHtmlTable?3:4))},dependencies:[nl,il,al,ol],styles:[".mat-mdc-table-sticky{position:sticky !important}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{min-width:100%;border:0;border-spacing:0;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color, var(--mat-app-surface))}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell{text-align:right}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-header-headline-font, var(--mat-app-title-small-font, Roboto, sans-serif));line-height:var(--mat-table-header-headline-line-height, var(--mat-app-title-small-line-height));font-size:var(--mat-table-header-headline-size, var(--mat-app-title-small-size, 14px));font-weight:var(--mat-table-header-headline-weight, var(--mat-app-title-small-weight, 500))}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, var(--mat-app-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-row-item-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-table-row-item-label-text-size, var(--mat-app-body-medium-size, 14px));font-weight:var(--mat-table-row-item-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-footer-supporting-text-font, var(--mat-app-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-footer-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-table-footer-supporting-text-size, var(--mat-app-body-medium-size, 14px));font-weight:var(--mat-table-footer-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mat-table-footer-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-app-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking, var(--mat-app-title-small-tracking));font-weight:inherit;line-height:inherit;box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mat-mdc-header-cell{text-align:right}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-app-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-app-body-medium-tracking));line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-app-body-medium-tracking))}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}"],encapsulation:2})}}return i})(),Du=(()=>{class i extends Pa{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275dir=k({type:i,selectors:[["","matCellDef",""]],standalone:!0,features:[W([{provide:Pa,useExisting:i}]),Z]})}}return i})(),Iu=(()=>{class i extends Ba{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275dir=k({type:i,selectors:[["","matHeaderCellDef",""]],standalone:!0,features:[W([{provide:Ba,useExisting:i}]),Z]})}}return i})();var Au=(()=>{class i extends an{get name(){return this._name}set name(e){this._setNameInput(e)}_updateColumnCssClassName(){super._updateColumnCssClassName(),this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`)}static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275dir=k({type:i,selectors:[["","matColumnDef",""]],inputs:{name:[0,"matColumnDef","name"]},standalone:!0,features:[W([{provide:an,useExisting:i},{provide:"MAT_SORT_HEADER_COLUMN_DEF",useExisting:i}]),Z]})}}return i})(),Mu=(()=>{class i extends wu{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275dir=k({type:i,selectors:[["mat-header-cell"],["th","mat-header-cell",""]],hostAttrs:["role","columnheader",1,"mat-mdc-header-cell","mdc-data-table__header-cell"],standalone:!0,features:[Z]})}}return i})();var Tu=(()=>{class i extends ku{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275dir=k({type:i,selectors:[["mat-cell"],["td","mat-cell",""]],hostAttrs:[1,"mat-mdc-cell","mdc-data-table__cell"],standalone:!0,features:[Z]})}}return i})();var Eu=(()=>{class i extends ho{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275dir=k({type:i,selectors:[["","matHeaderRowDef",""]],inputs:{columns:[0,"matHeaderRowDef","columns"],sticky:[2,"matHeaderRowDefSticky","sticky",M]},standalone:!0,features:[W([{provide:ho,useExisting:i}]),le,Z]})}}return i})();var Ru=(()=>{class i extends Na{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275dir=k({type:i,selectors:[["","matRowDef",""]],inputs:{columns:[0,"matRowDefColumns","columns"],when:[0,"matRowDefWhen","when"]},standalone:!0,features:[W([{provide:Na,useExisting:i}]),Z]})}}return i})(),qu=(()=>{class i extends el{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275cmp=V({type:i,selectors:[["mat-header-row"],["tr","mat-header-row",""]],hostAttrs:["role","row",1,"mat-mdc-header-row","mdc-data-table__header-row"],exportAs:["matHeaderRow"],standalone:!0,features:[W([{provide:el,useExisting:i}]),Z,G],decls:1,vars:0,consts:[["cdkCellOutlet",""]],template:function(t,o){t&1&&je(0,0)},dependencies:[ki],encapsulation:2})}}return i})();var Ou=(()=>{class i extends tl{static{this.\u0275fac=(()=>{let e;return function(o){return(e||(e=ye(i)))(o||i)}})()}static{this.\u0275cmp=V({type:i,selectors:[["mat-row"],["tr","mat-row",""]],hostAttrs:["role","row",1,"mat-mdc-row","mdc-data-table__row"],exportAs:["matRow"],standalone:!0,features:[W([{provide:tl,useExisting:i}]),Z,G],decls:1,vars:0,consts:[["cdkCellOutlet",""]],template:function(t,o){t&1&&je(0,0)},dependencies:[ki],encapsulation:2})}}return i})();var Fu=(()=>{class i{static{this.\u0275fac=function(t){return new(t||i)}}static{this.\u0275mod=B({type:i})}static{this.\u0275inj=P({imports:[ne,Cu,ne]})}}return i})();var uo=class{static flatten(n,e){return n.all_syllabus.all_syllabus.flatMap(t=>t.subcategories.flatMap(o=>o.problems.map(a=>{let r=a.misc;return{category_id:t.category_id,category_name:t.category_name,category_slug:t.category_slug,category_rank:t.category_rank,subcategory_id:o.subcategory_id,subcategory_name:o.subcategory_name,subcategory_slug:o.subcategory_slug,subcategory_rank:o.subcategory_rank,subcategory_type:o.subcategory_type,problem_id:a.problem_id,problem_name:a.problem_name,problem_slug:a.problem_slug,problem_rank:a.problem_rank,problem_type:a.problem_type,hasIDE:a.hasIDE,isDone:e.includes(a.problem_id),tags:this.getTags(r),facts:this.getFacts(r),hints:this.getHints(r),language:this.getLanguage(r),difficulty:this.getDifficulty(r),frequently_occuring_doubts:this.getDoubts(r),interview_followup_questions:this.getInterviewQuestions(r)}})))}static flattenAndFilter(n,e,t,o,a,r,s,l,d){return e.all_syllabus.all_syllabus.flatMap(u=>u.subcategories.flatMap(v=>v.problems.map(y=>{let O=y.misc;return{category_id:u.category_id,category_name:u.category_name,category_slug:u.category_slug,category_rank:u.category_rank,subcategory_id:v.subcategory_id,subcategory_name:v.subcategory_name,subcategory_slug:v.subcategory_slug,subcategory_rank:v.subcategory_rank,subcategory_type:v.subcategory_type,problem_id:y.problem_id,problem_name:y.problem_name,problem_slug:y.problem_slug,problem_rank:y.problem_rank,problem_type:y.problem_type,hasIDE:y.hasIDE,isDone:t.includes(y.problem_id),tags:this.getTags(O)||[],facts:this.getFacts(O),hints:this.getHints(O),language:this.getLanguage(O),difficulty:this.getDifficulty(O),frequently_occuring_doubts:this.getDoubts(O),interview_followup_questions:this.getInterviewQuestions(O)}}).filter(y=>!(o.length>0&&!o.includes(y.difficulty)||a.length>0&&!a.includes(y.category_id)&&!a.includes(y.category_name)||r.length>0&&!r.includes(y.subcategory_id)&&!r.includes(y.subcategory_name)||s.length>0&&(!y.tags||!s.every(O=>y.tags.includes(O))))).filter(y=>{let U=n.trim().toLowerCase().split(/\s+/),K=[y.problem_id,y.problem_name,y.problem_slug].join(" ").toLowerCase();return U.every(ue=>K.includes(ue))})))}static getTags(n){return!n||typeof n=="string"?[]:n.tags||[]}static getFacts(n){return!n||typeof n=="string"?"":n.facts||""}static getHints(n){return!n||typeof n=="string"?[]:n.hints?.map(e=>e.hint)||[]}static getLanguage(n){return!n||typeof n=="string"?[]:n.language||[]}static getDifficulty(n){return!n||typeof n=="string"?"Unknown":n.difficulty||"Unknown"}static getDoubts(n){return!n||typeof n=="string"?[]:n.frequently_occuring_doubts||[]}static getInterviewQuestions(n){return!n||typeof n=="string"?[]:n.interview_followup_questions||[]}};var Pu={all_syllabus:{all_syllabus:[{category_id:"extras",category_name:"Beginner Problems",category_slug:"beginner-problem",category_rank:0,subcategories:[{subcategory_id:"fundamentals_basics",subcategory_name:"Language Basics",subcategory_slug:"language-basics",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"extras_fundamentals_basics_cppsetup",problem_name:"CPP Setup",problem_slug:"cpp-setup",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"fundamentals_fundamentals_basics_cpporjava",problem_name:"Cpp Basics",problem_slug:"cpp",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_fundamentals_basics_javasetup",problem_name:"Java Setup",problem_slug:"java-setup",problem_rank:3,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"fundamentals_fundamentals_basics_java",problem_name:"Java Basics",problem_slug:"java-basics",problem_rank:4,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_fundamentals_basics_javaoopsbasic",problem_name:"Java OOPs Basic",problem_slug:"java-oops-basics",problem_rank:5,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_fundamentals_basics_inputoutput",problem_name:"Input Output",problem_slug:"input-output",problem_rank:6,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_fundamentals_basics_ifelseadultteenproblem",problem_name:"If Else Adult Teen Problem",problem_slug:"if-else-adult-teen-problem",problem_rank:7,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_fundamentals_basics_ifelseif",problem_name:"If ElseIf",problem_slug:"if-elseif",problem_rank:8,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_fundamentals_basics_switchcase",problem_name:"Switch Case",problem_slug:"switch-case",problem_rank:9,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_fundamentals_basics_sumoffirstlastelementinarray",problem_name:"Sum of first last element in array",problem_slug:"sum-of-first-last-element-in-array",problem_rank:10,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_fundamentals_basics_printxnnumbersoftimes",problem_name:"Print X N numbers of times",problem_slug:"print-x-n-numbers-of-times",problem_rank:11,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_fundamentals_basics_printlastcharacterofstring",problem_name:"Print last character of string",problem_slug:"print-last-character-of-string",problem_rank:12,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"fundamentals_logicbuilding(patterns)",subcategory_name:"Logic Building (Patterns)",subcategory_slug:"logic-building-patterns",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"fundamentals_fundamentals_logicbuilding(patterns)_logicbuildingwithpatterns",problem_name:"Easy and Medium",problem_slug:"easy-and-medium",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_fundamentals_logicbuilding(patterns)_pattern2",problem_name:"Hard",problem_slug:"hard",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1}]},{subcategory_id:"extras_patterns",subcategory_name:"Patterns",subcategory_slug:"patterns",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"extras_extras_patterns_pattern1",problem_name:"Pattern 1",problem_slug:"pattern-1",problem_rank:1,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: Though simple, generating patterns like this one is a foundational skill for graphical programming and game development. Many retro, text-based games like rogue or Dwarf Fortress use text characters to represent the game world, and modern games use more advanced versions of these same principles to create their levels and worlds! Spefically, being able to generate a repetitive pattern like this can be crucial in designing background graphics, creating tile-based games, designing user interfaces and even in certain testing scenarios.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern2",problem_name:"Pattern 2",problem_slug:"pattern-2",problem_rank:2,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This programming problem, often considered a basic exercise for beginners, is more significant than it seems at first glance. The underlying concept of using loops to generate patterns is a foundational concept of algorithm design and text data visualization in the software industry. A real-world application can be seen in terminal-based applications or console game development where text output needs to be visually organized in a certain pattern. Additionally, SVG graphics in web development use similar concepts to generate visual patterns and shapes.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern3",problem_name:"Pattern 3",problem_slug:"pattern-3",problem_rank:3,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This problem is a fundamental example of string manipulation and loop control flow, both of which are essential in almost every area of software development. For example, this type of functionality is used in progress bar components, where each increment in the bar might require an additional character or content. Similarly, it's often used in visual representations of hierarchical data, like threaded discussion threads where each nested level might have an additional space or icon. In short, understanding and solving this problem can help a developer create visually intuitive and user-friendly interfaces.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern4",problem_name:"Pattern 4",problem_slug:"pattern-4",problem_rank:4,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:`Many website and application development technologies use the concept underlying this problem, known as "looping". For example, in Javascript, repeating elements are often rendered in a webpage using loops. If a React developer needs to display a repeating component, they could use a pattern similar to the given problem. This could be a list where each item should display a number of times corresponding to its value, like stars in a rating system or in creating user interface patterns. It's a fundamental concept in creating dynamic content based on variable data.`,hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern5",problem_name:"Pattern 5",problem_slug:"pattern-5",problem_rank:5,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun fact: This basic problem is designed to test your understanding of loops and string manipulation, which are basic in almost any programming language. In the real world, similar patterns and principles might be used for creating complex data visualization tools, ASCII art, or templating engines that generate HTML for web pages. Drawing patterns, grids, or other specific shapes is often a core part of game development as well, so praticing such problems can be a kick-start towards learning how to develop basic graphical elements in game designing.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern6",problem_name:"Pattern 6",problem_slug:"pattern-6",problem_rank:6,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This problem, while simple, forms the basic building block for algorithms related to pattern recognition and generation. In real-world software development, these kind of pattern algorithms underlie many different aspects, from simple user interface design (creating repetitive patterns or layouts) to more complex concepts like creating game stages procedurally in video game development. This exercise of generating patterns based on a given number can also serve as the elementary introduction to recursive functions and loops, vital concepts in any kind of programming.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern7",problem_name:"Pattern 7",problem_slug:"pattern-7",problem_rank:7,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This problem, at its core, is about iteration, conditional logic, and string manipulation - fundamental concepts in many programming languages. In real world applications, a form of this problem can be seen in creating dynamic visualizations or graphical outputs in console-based applications. For example, console-based games, progress bar visualization, and console animations all use similar logic to create dynamic, visually-oriented outputs.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern8",problem_name:"Pattern 8",problem_slug:"pattern-8",problem_rank:8,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"While this problem may not seem directly applicable to real-world software development, the skills you use to solve it certainly are. This type of problem teaches two key programming concepts: loops and string manipulation. Both are widely applied in many fields of software development. For example, in web development, loops and string manipulations are often used to dynamically generate HTML or format text content. In data analysis, these skills are essential for parsing and cleaning data. Drawing a pattern like this is also common in computer graphics, used perhaps in creating design elements or animations dynamically.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern9",problem_name:"Pattern 9",problem_slug:"pattern-9",problem_rank:9,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"While developing console-based games, animations, or other graphical representations in terminal, such pattern creation problems come handy. They give an understanding of how to use control structures (like loops) for producing repetitive and patterned output. These concepts are fundamental in developing console output display features in many kinds of software. The ability to create and manipulate these patterns can be extended to more complex graphics rendering challenges.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern10",problem_name:"Pattern 10",problem_slug:"pattern-10",problem_rank:10,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"In the software development, this pattern problem, or its underlying concept of nested iteration, can often be observed in creating visual effects or graphical interfaces. For example, such pattern logic might be used in creating loading animations, pyramid diagrams, or automated design elements in a web or mobile application. On a more abstract level, understanding how to construct and manipulate such patterns is fundamental to working with 2D arrays and matrices - structures widely used in image processing, to represent graphs, in machine learning algorithms, and more.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern11",problem_name:"Pattern 11",problem_slug:"pattern-11",problem_rank:11,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"While this problem may seem trivial, the concept underlying it - pattern recognition and generation, is frequently used in software development. For example, in web development, design patterns such as MVC (Model View Controller) and MVVM (Model View ViewModel) are used. In artificial intelligence, machine learning algorithms often use pattern recognition to make predictions or decisions without being specifically programmed to perform the task. Consequently, having a solid understanding of simple pattern generation problems like this one can build a foundation for understanding more complex pattern-related concepts in various fields of software development and data science.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern12",problem_name:"Pattern 12",problem_slug:"pattern-12",problem_rank:12,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Though this problem seems purely academic, the underlying concepts - the manipulation of strings and control structures like loops, are fundamental in many areas of software development. For instance, generating dynamic SQL queries for specific situations often requires sophisticated string manipulation. Also, the understanding and usage of nested loops are crucial in rendering hierarchical data or multi-dimensional arrays, like creating expandable menu systems in app development. So while this exact problem may not be seen in the wild, its elemental concepts are heavily utilized in coding.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern13",problem_name:"Pattern 13",problem_slug:"pattern-13",problem_rank:13,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The underlying concept of this problem is often used in the display logic of many applications. For instance, in social media apps like Instagram, the images are displayed in a similar pattern, where each new row may have more images than previous. Similar logic can be seen in calendar based applications and games, where the positions of different data points or objects are calculated dynamically based on a specific pattern. Understanding this ensures that developers can create interfaces that are adaptable and user friendly.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern14",problem_name:"Pattern 14",problem_slug:"pattern-14",problem_rank:14,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This programming problem trains you in understanding and manipulating strings, which is a fundamental concept in software development. In real-world applications, this exercise could apply to systems requiring hierarchical data representation or nested data structures. For instance, consider a file manager where files/folders are nested within other folders. Each level of the hierarchy could be represented by a different letter of the alphabet, giving a visual indicator of the current depth in the hierarchy. Likewise, file paths in Unix-like operating systems could be shown using this pattern, with each subsequent directory represented by an additional alphabet letter. This problem can also have its applications in generating different patterns which is a key aspect of creating graphs or visualizations in software applications.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern15",problem_name:"Pattern 15",problem_slug:"pattern-15",problem_rank:15,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This type of problem is not directly applied in the software industry, but the underlying concept of iteration and pattern generation is frequently used. For instance, it forms a basic approach in developing functionalities for pattern matching, text formatting, and UI elements rendering in web and app development. This kind of progressive reduction is also seen in progressive loading of images or elements on web pages or in game developments to save on resource usage.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern16",problem_name:"Pattern 16",problem_slug:"pattern-16",problem_rank:16,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: This problem may seem simple but it mirrors a fundamental concept in programming: loops and control structures. While in this problem it is used to print patterns, in real world applications, these loops could be used to iterate through data, increment counters, insert into databases or update UI components. Moreover, concepts used in this problem are extensively used in animation software, framework development, and even in game development where such pattern logic can be used to create various levels or stages. So next time when you see a pattern in a game, remember, it could be something as simple as this problem behind the scene!",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern17",problem_name:"Pattern 17",problem_slug:"pattern-17",problem_rank:17,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This programming problem essentially tests the concept of pattern/problem recognition and string manipulation, which are vital in many areas of software development. For instance, in data analysis or processing platforms, there often are requirements to detect and manipulate data patterns. Moreover, in various machine learning models such as natural language processing, the concept of pattern recognition and string manipulation is extensively used to train the models to understand, recognize, and generate human-like text.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern18",problem_name:"Pattern 18",problem_slug:"pattern-18",problem_rank:18,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"One practical application of this problem in software development is in web development frameworks like JavaScript's React. This problem teaches the concept of iterative rendering, a technique wherein components are rendered repeatedly based off a value or dataset, similar to how the alphabet patterns are being generated iteratively in the problem. In React, this can be seen in rendering lists of elements where individual components are rendered based on the number of items in the array. This problem aids in strengthening the concept of handling such dynamic data rendering.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern19",problem_name:"Pattern 19",problem_slug:"pattern-19",problem_rank:19,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The concept underlying this problem, pattern generation, is frequently used in various aspects of software development. For example, in game development, similar algorithms are introduced to generate unique textures or to progress game levels. In data visualization libraries and apps, pattern generation algorithms are used to create aesthetically pleasing and easy to understand visual representations of data. Furthermore, ASCII art, which is similar to this problem, has applications in stylizing console output and creating visually appealing comment blocks in code.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern20",problem_name:"Pattern 20",problem_slug:"pattern-20",problem_rank:20,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This problem demonstrates the concept of loops and pattern recognition/matching which is a fundamental aspect in many software applications. In the real-world, pattern generation problems like this are commonly used in computer graphics and game development to generate textures, shapes, or terrain. It is also used in tools like regular expression engines which are widely used in text parsing, syntax highlighting, data validation, and search functionalities which are core to numerous software applications. Interesting fact: Algorithms to generate complex patterns are also pivotal in certain aspects of cryptography and data security.",hints:[],language:[],difficulty:"Medium",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern21",problem_name:"Pattern 21",problem_slug:"pattern-21",problem_rank:21,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This simple programming problem highlights the use of loops and control flow which forms the basis of many graphics and game development concepts. For example, such pattern drawing exercises lay the groundwork for understanding nested loops which are very common in game grids or tile maps, bitmap graphics, and visual simulations. Moreover, this is the core concept behind rendering of shapes in computer graphics, interfaces, animation, and even 3D modeling software. It is also used in designing UI layout and border styles in web development.",hints:[],language:[],difficulty:"Medium",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_patterns_pattern22",problem_name:"Pattern 22",problem_slug:"pattern-22",problem_rank:22,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"One real-world application of this problem is in graphic design software and games, where such patterns might be used to create programmatically generated visuals or puzzles. Understanding how to construct complex patterns from simple mathematical rules is a fundamental aspect of procedural generation, a technique commonly used in game design to create vast, explorable worlds on the fly.",hints:[],language:[],difficulty:"Medium",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"fundamentals_timecomplexity",subcategory_name:"Time Complexity",subcategory_slug:"time-complexity",subcategory_rank:4,subcategory_type:"study",problems:[{problem_id:"fundamentals_fundamentals_timecomplexity_theorywithexamples",problem_name:"Theory with examples",problem_slug:"theory-with-examples",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1}]},{subcategory_id:"fundamentals_stlandcollections",subcategory_name:"STL and Collections",subcategory_slug:"stl-and-collections",subcategory_rank:5,subcategory_type:"study",problems:[{problem_id:"fundamentals_fundamentals_stlandcollections_stl",problem_name:"STL",problem_slug:"stl",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"fundamentals_fundamentals_stlandcollections_javacollections",problem_name:"Java Collections",problem_slug:"java-collections",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1}]},{subcategory_id:"fundamentals_conceptbasics",subcategory_name:"Concept Basics",subcategory_slug:"concept-basics",subcategory_rank:6,subcategory_type:"study",problems:[{problem_id:"fundamentals_fundamentals_conceptbasics_basicmaths",problem_name:"Basic Maths",problem_slug:"basic-maths",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"fundamentals_fundamentals_conceptbasics_basichashing",problem_name:"Basic Arrays",problem_slug:"basic-arrays-hashing-and-strings",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_fundamentals_conceptbasics_basichashing",problem_name:"Basic Hashing",problem_slug:"basic-hashing",problem_rank:3,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_fundamentals_conceptbasics_basicstring",problem_name:"Basic String",problem_slug:"basic-string",problem_rank:4,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1}]},{subcategory_id:"extras_basicmaths",subcategory_name:"Basic Maths",subcategory_slug:"basic-maths",subcategory_rank:7,subcategory_type:"study",problems:[{problem_id:"extras_extras_basicmaths_countalldigitsofanumber",problem_name:"Count all digits of a number",problem_slug:"count-all-digits-of-a-number",problem_rank:1,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This simple programming problem teaches you how to work with integers at a deep level, essential knowledge for many aspects of computing. For example, in video games, a similar concept is used to calculate scores or health points, which involve lots of operations with integers. Also, in data analysis software or ETL (Extract, Transform, Load) processes, the size and format of figures need to be manipulated and processed, which requires deep understanding and competence in handling numbers and digits.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_countnumberofodddigitsinanumber",problem_name:"Count number of odd digits in a number",problem_slug:"count-number-of-odd-digits-in-a-number",problem_rank:2,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This problem showcases the use of modulo operation and string manipulation which are both fundamental concepts in programming. In real-world applications, the problem can be related to the processing of user input in apps or software - for example, credit card numbers, phone numbers, or social security numbers. Here, each digit may need to be individually checked and processed, either for validation, encryption, or some other kind of transformation. In such cases, code similar to the solution of this problem could be used.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_reverseanumber",problem_name:"Reverse a number",problem_slug:"reverse-a-number",problem_rank:3,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: Reversing the digits of a number is often used in designing certain algorithms and applications, such as in credit card number processing or generating unique access codes. This kind of problem strengthens understanding of basic manipulation and conversion of data types, especially in languages that treat strings and integers distinctly.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_palindromenumber",problem_name:"Palindrome number",problem_slug:"palindrome-number",problem_rank:4,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Palindrome checking, as in this problem, is often used in error detection within computer systems. It's used specifically in the realm of ECC (Error Checking and Correction) memory, commonly seen in crucial systems such as servers. Here, bits are encoded with a simple algorithm which checks if a string of binary data reads the same backwards as forwards to prevent potential crashes from memory faults. Additionally, palindrome checking can be applied in string processing within Natural Language Processing (NLP) applications for linguistic pattern detection.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_returnthelargestdigitinanumber",problem_name:"Return the largest digit in a number",problem_slug:"return-the-largest-digit-in-a-number",problem_rank:5,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This concept is used widely in validation of inputs or entities in software applications. In banking software or financial applications, you may sometimes have to validate credit card numbers, account numbers, or other numeric inputs where identifying and manipulating the largest digit could be part of the process. Similarly, in gaming and sports applications, stats and scores often involve working with largest digits for comparison and ranking purposes.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_factorialofagivennumber",problem_name:"Factorial of a given number",problem_slug:"factorial-of-a-given-number",problem_rank:6,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: Factorial problems and algorithms are often used in real-world applications for solving problems involving permutations and combinations. This can be found in software related to statistics, probability, data analysis, and also in some optimization algorithms. For instance, Google's search algorithms use factorial calculations for providing various combinations of search results, and in machine learning, factorials play a critical role in calculating the probabilities in Bayesian Networks.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_checkifthenumberifarmstrong",problem_name:"Check if the number is armstrong",problem_slug:"check-if-the-number-if-armstrong",problem_rank:7,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: While the Armstrong number itself might not have a direct application in software development, the underlying logic of dealing with integer manipulation, loops, and conditionals can be found in various aspects of coding like data validation, checksum algorithms or hash functions. Algorithms to identify Armstrong numbers act as brain teasers to improve logical thinking and problem-solving skills which are essential in breaking down complex software development tasks. For instance, the concept can be used in encryption algorithms to add an extra layer of security.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_checkforperfectnumber",problem_name:"Check for perfect number",problem_slug:"check-for-perfect-number",problem_rank:8,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This simple mathematical concept is often used in error detection and correction algorithms in software development. In particular, it is used during checksum techniques where data is divided into equal parts. The sum of these parts should add up to a predefined value (a perfect number in some cases). If the sum isn't a perfect number, it indicates that an error has occurred during data transmission, allowing developers to detect and correct errors. These are especially useful in network communications and data storage systems which require high reliability.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_checkforprimenumber",problem_name:"Check for prime number",problem_slug:"check-for-prime-number",problem_rank:9,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Prime number checking is a foundational concept in cryptography, particularly in public key encryption algorithms such as RSA. RSA relies intensively on the properties of prime numbers. The security of RSA is based on the fact that factoring large prime numbers is computationally intensive. Hence, when your browser secures a connection to a website (HTTPS), prime numbers are being used to encrypt the data.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_countofprimenumberstilln",problem_name:"Count of prime numbers till N",problem_slug:"count-of-prime-numbers-till-n",problem_rank:10,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Prime number generation and recognition is an important concept in cryptographic algorithms, which serve as a basis for secure communication in the digital world. For example, RSA algorithm, which is widely used for secure data transmission, is based on the principle of factoring large prime numbers. The difficulty in factoring the product of two large prime numbers ensures that RSA is secure. Therefore, a function that can efficiently generate or identify prime numbers can contribute to the efficiency and strength of these algorithms.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_gcdoftwonumbers",problem_name:"GCD of two numbers",problem_slug:"gcd-of-two-numbers",problem_rank:11,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Here's a fun fact: the concept of finding the Greatest Common Divisor (GCD) is used in real-world encryption algorithms, particularly in RSA encryption. RSA, which stands for Rivest-Shamir-Adleman, is a public key encryption technology used widely in securing sensitive data, especially when being sent over an insecure network. It involves the use of large prime numbers, and the computation of their GCD, to generate secure public and private keys. So, the algorithm to solve this programming problem is integral to promoting online security and privacy.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_lcmoftwonumbers",problem_name:"LCM of two numbers",problem_slug:"lcm-of-two-numbers",problem_rank:12,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The concept of finding the Lowest Common Multiple (LCM) in this problem is commonly applied in real world scheduling and timer systems. For example, in operating systems, different tasks or processes can have different intervals or frequencies of operation. To ensure smooth co-existence, the system must determine a common time frame to accommodate all these processes. That common time frame is often calculated as the LCM of all the different intervals. Therefore, the concept of LCM is of fundamental importance in operating system design and other time-dependent systems.",hints:[],language:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicmaths_divisorsofanumber",problem_name:"Divisors of a number",problem_slug:"divisors-of-a-number",problem_rank:13,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The underlying concept from this problem, finding all the divisors of a number, is surprisingly important in cryptography, a critical part of information security. Specifically, it's used in the RSA encryption algorithm, which is widely implemented in communication protocols like HTTPS for secure data transmission over the internet. The algorithm uses two large prime numbers, whose product serves as a key. The security of RSA is based on the fact that, even knowing the product, it's difficult to determine the original primes (i.e., find the divisors), particularly as the prime numbers used become larger.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"extras_basicarrays",subcategory_name:"Basic Arrays",subcategory_slug:"basic-arrays",subcategory_rank:8,subcategory_type:"study",problems:[{problem_id:"extras_extras_basicarrays_sumofarrayelements",problem_name:"Sum of array elements",problem_slug:"sum-of-array-elements",problem_rank:1,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This seemingly simple programming problem, calculating the sum of all elements in an array, has powerful real-world applications. For example, it's used in the creation of statistical software and data analysis applications, such as Excel and Google Sheets. Developers utilize this concept to implement features that enable users to sum up large columns or rows of numerical data in these spreadsheet applications, facilitating businesses and researchers to quickly perform financial or scientific calculations.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicarrays_countofoddnumbersinarray",problem_name:"Count of odd numbers in array",problem_slug:"count-of-odd-numbers-in-array",problem_rank:2,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:`Here's a fun fact: this problem is a basic exercise in data analytics, which is a massive part of the software industry. Almost all major companies - like Facebook, Google, Amazon - use data analytics to make informed decisions. This task is similar to finding specific patterns in the data, such as user habits or preferences. It's like asking, "how many users made purchases at odd-numbered hours?" or "how many users have spent an odd amount of money on our platform?" Understanding these patterns helps companies enhance their user experiences and profitability.`,hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicarrays_reverseanarray",problem_name:"Reverse an array",problem_slug:"reverse-an-array",problem_rank:3,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"In many popular software applications such as video editors or music players, reversing an array, which is essentially reversing a sequence, is an important feature. For example, reversing a video clip plays the frames in backward order leading to a reversed video, which is achieved through the same underlying concept as reversing an array.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicarrays_checkifthearrayissorted",problem_name:"Check if the array is sorted",problem_slug:"check-if-the-array-is-sorted",problem_rank:4,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:`This problem's underlying concept plays an integral role in many database management systems. When you search for something in a database, for example, a name in the contact application on your phone, it doesn't start from the beginning and search through every single entry. Instead, it uses the concept of a "sorted array" to execute binary search algorithms, allowing for significantly faster search responses. So, this fundamental concept contributes critically to the overall efficiency and response time of numerous software applications.`,hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"extras_basichashing",subcategory_name:"Basic Hashing",subcategory_slug:"basic-hashing",subcategory_rank:9,subcategory_type:"study",problems:[{problem_id:"extras_extras_basichashing_highestoccurringelementinanarray",problem_name:"Highest occurring element in an array",problem_slug:"highest-occurring-element-in-an-array",problem_rank:1,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"The underlying concept of this problem is extensively used in data analytics, specifically in areas requiring analysis of user behaviour. For example, music streaming apps often need to find the most frequently listened song among a pool of users. In this case, the 'array of n integers' could represent users' song preferences and the 'most frequent element' would be the most popular song. Furthermore, finding the 'smallest of them' could be analogous to identifying the most popular song with the shortest duration, which could influence decisions in areas like marketing or content curation.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basichashing_secondhighestoccurringelement",problem_name:"Second highest occurring element",problem_slug:"second-highest-occurring-element",problem_rank:2,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This type of algorithm is quite often used in the world of data analytics and marketing. Understanding frequency distribution in a dataset is key for identifying trends or patterns. For example, a streaming service like Netflix or Spotify might use a similar algorithm to identify the second most frequently watched or listened-to genre or artist, to suggest it to their viewers or listeners, enhancing personalization and user experience based on these insights. It could also be used in text analytics or natural language processing to find the second most frequently used word in a text, which can be instrumental in sentiment analysis, SEO keyword analysis, and more.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basichashing_sumofhighestandlowestfrequency",problem_name:"Sum of highest and lowest frequency",problem_slug:"sum-of-highest-and-lowest-frequency",problem_rank:3,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This programming problem is conceptually related to data analysis and statistics, often used in the software industry for user behavior analysis, trend identification, and recommendation systems. The identification of the most and least frequent values (modal and anti-modal values) is commonly used in sectors like e-commerce and social media to understand user preferences and trends, such as the highest and lowest selling products, or the most and least liked posts.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"extras_basicstrings",subcategory_name:"Basic Strings",subcategory_slug:"basic-strings",subcategory_rank:10,subcategory_type:"study",problems:[{problem_id:"extras_extras_basicstrings_reverseastring",problem_name:"Reverse a string",problem_slug:"reverse-a-string",problem_rank:1,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"The reverse string problem and its underlying concept of in-place algorithm with limited space complexity have a lot of practical applications. This concept is crucial in fields like data processing where memory space is a prime concern. For instance, when building content editing software such as those used in blogs or publishing tools, features like undo-redo management or palindrome checking often leverage the idea of reversing a string or sequence in-place. Even in popular databases, the optimization of data manipulation and retrieval operations uses these techniques. Sometimes, a clever application of such reversal logic can lead to efficient software solutions.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstrings_palindromecheck",problem_name:"Palindrome Check",problem_slug:"palindrome-check",problem_rank:2,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Palindrome checking algorithms, similar to the problem statement, have interesting implications in the development of DNA sequence analysis tools used in Bioinformatics. Since DNA can be read in both directions, identifying palindromic sequences is a key in the detection of special genetic markers called Restriction sites, essential in Genetic Engineering. Even simple programming challenges have enormous potential in real world applications!",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstrings_largestoddnumberinastring",problem_name:"Largest odd number in a string",problem_slug:"largest-odd-number-in-a-string",problem_rank:3,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: A real-world application of such a problem can be found within Big Data Processing software and Financial Technologies (Fintech). In these fields, there\u2019s often a need to deal with large integers, convert them to strings and extract specific parts. For instance, certain aspects of financial analysis require the extraction of specific digits or series of digits from large numbers. Similarly in network security, similar tasks are required for cryptographic operations to encrypt or decrypt data. Thus problems like these underpin several major operations in Fintech and Security industry.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstrings_longestcommonprefix",problem_name:"Longest common prefix",problem_slug:"longest-common-prefix",problem_rank:4,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The problem of finding the longest common prefix among an array of strings is often used in the field of autocompletion and suggestion engines, which are quite prevalent in search engines, IDEs (Integrated Development Environments), and so on. When a user starts typing something, these engines use the longest common prefix algorithm to generate relevant and instant suggestions to the user based on historical and contextual data. Such functionalities optimize the user experience and efficiency in using the software application.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstrings_isomorphicstring",problem_name:"Isomorphic string",problem_slug:"isomorphic-string",problem_rank:5,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The concept of string isomorphism, as in this problem, is often employed in the world of cryptography and data encryption. It's all about establishing a systematic correspondence from one set of characters to another. Converting plain text into encrypted data relies on such mappings to provide data security. So, next time you send a secure, encrypted message, do remember, it's all about the isomorphism!",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstrings_rotatestring",problem_name:"Rotate string",problem_slug:"rotate-string",problem_rank:6,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun fact: The concept of string shifting like in this problem is actually used in certain types of encryption and decryption algorithms, especially in the field of cybersecurity. This concept is also used in implementing certain functions of text editors and data processing tools, where words, sentences, or paragraphs need to be shifted or rearranged. Solving such problems helps programmers in understanding how to manipulate and process strings effectively, which is a fundamental aspect in fields such as data management, web development, and more.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstrings_validanagram",problem_name:"Valid Anagram",problem_slug:"valid-anagram",problem_rank:7,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The concept of checking for anagrams, as given in the problem, has practical uses in natural language processing and computer science. This logic is often incorporated in games such as Scrabble or Words with Friends, where users must form words from a given set of letters. It is also used in spell-checking algorithms and plagiarism detection software to spot potential copy-pasting by comparing anagrams. Highlighting the versatility of this concept, it is also applied in bioinformatics where it is necessary to look for anagrams in DNA sequencing, which can support meaningful discoveries in genetics.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstrings_sortcharactersbyfrequency",problem_name:"Sort characters by frequency",problem_slug:"sort-characters-by-frequency",problem_rank:8,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This problem is often encountered when developing data analysis tools or text editors, where understanding the frequency of character usage can be important. For instance, optimizing compression algorithms such as Huffman coding relies on knowing the frequency of each character in the dataset. This problem's concept is also used in SEO (Search Engine Optimization) analytics, where the frequency of certain words or characters can affect a webpage\u2019s visibility in search engine results.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"extras_basicrecursion",subcategory_name:"Basic Recursion",subcategory_slug:"basic-recursion",subcategory_rank:11,subcategory_type:"study",problems:[{problem_id:"extras_extras_basicrecursion_recursiontheory",problem_name:"Recursion Theory",problem_slug:"recursion-theory",problem_rank:1,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_extras_basicrecursion_recursionconceptswithparameters",problem_name:"Recursion Concepts with Parameters",problem_slug:"recursion-concepts-with-parameters",problem_rank:2,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_extras_basicrecursion_sumoffirstnnumbers",problem_name:"Sum of first N numbers",problem_slug:"sum-of-first-n-numbers",problem_rank:3,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The concept of summing up the first N natural numbers is often used in the development of performance analysis and benchmarking tools. These tools help developers understand the performance of their software by simulating a series of operations, such as calculating how long it takes to sum up a series of numbers, and then analyze the time complexity. The principle also has real-world usages in databases when dealing with sequence generation or serial numbers, and in building progress bar logic in numerous softwares or apps.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicrecursion_factorialofagivennumber",problem_name:"Factorial of a given number",problem_slug:"factorial-of-a-given-number",problem_rank:4,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Factorials are widely used in software industry, particularly in algorithms related to probabilistic modeling and calculations. For instance, in Google's search algorithms, factorials are used in calculating possible combinations of keywords and search entries to provide the most relevant search results. Similarly, in artificial intelligence and machine learning, factorials play a crucial role in statistical calculations and in computing combinations and permutations.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicrecursion_sumofarrayelements",problem_name:"Sum of array elements",problem_slug:"sum-of-array-elements",problem_rank:5,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"While summing elements of an array using recursion might seem like a straightforward task, this concept and programming technique have wide-ranging applications in various aspects of software development. For instance, whenever a developer needs to traverse a tree-like data structure, such as the Document Object Model (DOM) in web development, or a directory structure in a filesystem, a recursive algorithm, similar to the one used in this problem, could be employed. Using recursion to traverse through these structures allows developers to perform operations likewise summing on nodes at each level effectively.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicrecursion_reverseastring",problem_name:"Reverse a string",problem_slug:"reverse-a-string",problem_rank:6,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The 'reverse a string' problem comes in handy in the development of various real world applications such as undo functionality in software apps like Microsoft word, or any text editor which allows users to revert their actions. It's also commonly used in palindrome checking algorithms, data encryption/decryption, and in some database migrations.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicrecursion_checkifstringispalindromeornot",problem_name:"Check if string is palindrome or not",problem_slug:"check-if-string-is-palindrome-or-not-",problem_rank:7,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Palindrome problems or algorithms are often used in the development of natural language processing technologies, like chatbots and digital assistants. The performance of these technologies significantly depends on their capability of detecting and understanding patterns, including palindromes, in natural language. This helps in analyzing sentences better, understanding contexts, improving user experience, and adding a pinch of humor. For example, a chatbot could be programmed to identify palindromes and respond with a humorous reply when a user inputs a palindromic phrase.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicrecursion_checkifanumberisprimeornot",problem_name:"Check if a number is prime or not",problem_slug:"check-if-a-number-is-prime-or-not",problem_rank:8,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Prime number checking, the underlying concept of this problem, is a crucial component in cryptography, particularly RSA algorithm, which is widely used in secure data transmission. The security of RSA is based on the practical difficulty of factoring the product of two large prime numbers, the factoring problem.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicrecursion_reverseanarray",problem_name:"Reverse an array",problem_slug:"reverse-an-array-ii",problem_rank:9,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Fun Fact: The concept of reversing an array is used in many popular applications like social media platforms or music streaming apps. For instance, in apps like Instagram or Facebook, when you scroll through comments or posts, you're actually traversing a reversed array. The latest posts/comments are at the beginning of the array and as you scroll, you move towards the older posts/comments at the end of the array. Similarly, in a music app's playlist, the 'play in reverse order' functionality also uses this concept. Also, reversing is a commonly used feature in data visualization, where one might want to flip the data to view it from a different perspective.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicrecursion_checkifthearrayissorted",problem_name:"Check if the array is sorted",problem_slug:"check-if-the-array-is-sorted",problem_rank:10,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"Did you know that checking if an array is sorted or not has real world applications in the field of Data Analysis and Machine Learning? These fields often involve dealing with huge amounts of data that need to be sorted for efficient processing. Being able to quickly determine if a data set is already sorted can help minimize processing time and resources, leading to more efficient predictions and analyses. Having a function to do this can help streamline processes in these high-demand fields.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicrecursion_sumofdigitsinagivennumber",problem_name:"Sum of digits in a given number",problem_slug:"sum-of-digits-in-a-given-number",problem_rank:11,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"This type of programming problem underlies many applications which need numeric validation, data integrity checks or compression tasks. For example, control digit computation, often used for credit cards number or ISBN code validation, implements similar logic. This problem's concept is also useful in checksum algorithms in data transmission to ensure data completeness. Also, digital root calculation, which is the essence of this task, is a part of various cryptographic techniques and pseudorandom number generation systems, fundamental for security and gaming software respectively.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicrecursion_fibonaccinumber",problem_name:"Fibonacci Number",problem_slug:"fibonacci-number",problem_rank:12,misc:{tags:["TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","IBM","HCL","Tech Mahindra","MindTree"],facts:"The Fibonacci sequence is a fundamental concept in computer science and finds use in several real-world applications. One fascinating example lies in agile project management, specifically Scrum. Team members use Fibonacci numbers to estimate the complexity or effort required for tasks. This system, known as Fibonacci estimation, is based on the theory that it\u2019s harder to estimate bigger tasks with precision, so Fibonacci's ever-increasing gap between numbers reflects this uncertainty.",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"sorting",category_name:"Sorting",category_slug:"sorting",category_rank:1,subcategories:[{subcategory_id:"sorting_algorithms",subcategory_name:"Algorithms",subcategory_slug:"algorithms",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"sorting_sorting_algorithms_selectionsort",problem_name:"Selection Sort",problem_slug:"selection-sort",problem_rank:0,misc:{tags:["Bungie","Qualcomm","Uber","Morgan Stanley","Zoho","Electronic Arts","Reddit","Ubisoft","PwC","Broadcom","Rakuten","OYO Rooms","Seagate Technology","Epic Games","Nutanix","Target","Pinterest","Boston Consulting Group","Optum","KPMG","JPMorgan Chase","Cerner","MongoDB","Red Hat","McKinsey & Company","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Fun Fact: The Selection Sort algorithm, which is the focus of this problem, is widely used in software development for its simplicity and efficiency when dealing with small data sets. It serves as a building block in various applications like e-commerce platforms and database technologies, where sorting of data is an important functionality. In real-world applications, it would often be used as a part of a more complex sorting algorithm to sort small sublists within a larger, more complex, sorting problem.",hints:[{hint:"Think Small First, at each step, identify the smallest element in the unsorted portion of the array and place it in its correct position."},{hint:"Use Divide and Conquer Mindset, visualize sorting as splitting the array into sorted and unsorted parts, and shrinking the unsorted part one element at a time."},{hint:"Focus on how you can repeatedly compare elements and rearrange them in-place without needing additional memory."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Yes, selection sort can handle duplicate elements effectively. During each iteration, the algorithm identifies the smallest element in the unsorted portion, even if duplicates exist. The duplicates are treated like any other elements and sorted based on their relative positions, preserving the order among equal elements.",question:"Can selection sort handle duplicate elements properly?"},{answer:"Selection sort doesn\u2019t check if the array is already sorted\u2014it always performs O(n2) comparisons because the algorithm doesn\u2019t adapt to sorted inputs. While no swaps may occur if the array is sorted, the comparisons in the inner loop are still executed, making it inefficient for pre-sorted data.",question:"What happens if the array is already sorted? Is it still efficient?"}],interview_followup_questions:[{answer:`To sort the array in descending order, you need to modify the algorithm to find the largest element in the unsorted portion during each iteration instead of the smallest. Then, place this largest element at the current position in the sorted portion.

Here\u2019s the adjusted approach:

In the inner loop, compare elements to find the maximum instead of the minimum.
Swap the maximum element with the current index of the sorted portion.
Example:
Input: [4, 2, 9, 1]
Process:

Find the largest (9) and swap with the first element: [9, 2, 4, 1].
Find the next largest (4) in the unsorted portion and swap: [9, 4, 2, 1].
Continue until sorted in descending order: [9, 4, 2, 1].
This change preserves the same O(n2) time complexity but adapts the algorithm for descending order.
`,question:"Can you modify the selection sort algorithm to sort the array in descending order? What changes would you make?"},{answer:`1. Selection sort works in-place and uses O(1) extra memory. For systems with strict memory limitations, it is a viable choice.
2. For small arrays (e.g., fewer than 10 elements), the simplicity of selection sort can outweigh its inefficiency. The overhead of more complex algorithms, like merge sort or quicksort, might not be justified.

Example: Sorting [5, 2, 1] in embedded systems with limited RAM can efficiently use selection sort.
`,question:"Selection sort has O(n2) time complexity. Can you identify a scenario where selection sort might still be a preferred choice?"},{answer:`Time Complexity: Both have O(n^2) worst-case time complexity. However, insertion sort can outperform selection sort for nearly sorted arrays because it minimizes shifts, while selection sort always performs n\u22121 comparisons in the inner loop, regardless of the array's state.

Swaps vs. Shifts: Selection sort minimizes swaps (n\u22121 swaps in total), making it suitable for situations where swap costs are high (e.g., flash memory). Insertion sort involves more shifts, especially for large unsorted portions.
Example:
For an array like [2, 3, 4, 5, 1], insertion sort will quickly sort it with fewer operations because most elements are already in place. In contrast, selection sort performs the same number of comparisons regardless of the initial order, making it less efficient in this case.`,question:"How does selection sort compare to insertion sort in terms of performance and use cases? Can you analyze and contrast them?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"sorting_sorting_algorithms_bubblesort",problem_name:"Bubble Sort",problem_slug:"bubble-sort",problem_rank:1,misc:{tags:["AMD","Flipkart","PayPal","ARM","Goldman Sachs","Zomato","Micron Technology","Philips Healthcare","Shopify","Intel","Morgan Stanley","Cloudflare","JPMorgan Chase","Roblox","Broadcom","Target","Square","Bungie","Swiggy","IBM","KPMG","DoorDash","OYO Rooms","Nutanix","Ubisoft","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Although bubble sort is widely regarded as inefficient for large datasets due to its worst-case and average time complexity of O(n\xB2), it is popular in teaching introductory computer science courses, both for its simplicity and because it performs well in scenarios with small and nearly sorted datasets. Some software testing and debugging tools, especially those maintaining watchlists or logs, may make use of bubble sort where the expected input size isn't large but the order is crucial for correct interpretation of results.",hints:[{hint:"Focus on comparing adjacent elements and swapping them if they are in the wrong order. Repeat this until no swaps are needed. After each iteration, the largest element in the unsorted portion moves to its correct position at the end."},{hint:" For Optimization, Think about stopping the algorithm early if no swaps occur during an iteration, indicating the array is already sorted."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`Yes, bubble sort can handle duplicate elements. It treats duplicates like any other element and compares them during iterations. Since duplicates are not swapped unnecessarily, their relative order remains unchanged, preserving stability.
Example:
Input: [4, 2, 4, 1]
Output: [1, 2, 4, 4]`,question:"Can bubble sort handle duplicate elements?"},{answer:`Already Sorted: The algorithm performs a single pass and terminates early if optimized. Without optimization, it will still make unnecessary passes.
Reverse Sorted: Bubble sort performs the maximum number of swaps (O(n2)) because every element needs to be repositioned.
Example (Reverse Sorted):
Input: [5, 4, 3, 2, 1]
Output: [1, 2, 3, 4, 5]`,question:"What happens if the array is already sorted or reverse sorted?"}],interview_followup_questions:[{answer:`To sort in descending order, modify the comparison condition to check if the current element is smaller than the next element. Swap them if so.

Example:
Input: [4, 2, 9, 1]
Process:

Compare 4 and 2 \u2192 No swap.
Compare 2 and 9 \u2192 Swap: [4, 9, 2, 1].
Continue until sorted in descending order: [9, 4, 2, 1].`,question:"Can you modify bubble sort to sort in descending order?"},{answer:`Time Complexity: All three have a worst-case time complexity of O(n2). However, bubble sort generally performs worse due to its many comparisons and swaps.
Optimization: Bubble sort can be optimized to terminate early for sorted arrays, while insertion and selection sorts do not inherently have this feature.
Stability: Both bubble and insertion sorts are stable (preserve the order of duplicate elements). Selection sort is not stable unless modified.`,question:"How does bubble sort compare to insertion sort and selection sort?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"sorting_sorting_algorithms_insertionsorting",problem_name:"Insertion Sorting",problem_slug:"insertion-sorting",problem_rank:2,misc:{tags:["Rakuten","Medtronic","PayPal","Optum","Pinterest","Oracle","Johnson & Johnson","Byju's","NVIDIA","JPMorgan Chase","Docker","Zoho","Shopify","Etsy","Alibaba","Roche","IBM","Snowflake","Salesforce","McKinsey & Company","Goldman Sachs","Mastercard","American Express","Cloudflare","Bain & Company","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Insertion sort, the algorithm underlying this problem, is used extensively in computer programming not only for sorting arrays but also for organizing and retrieving data efficiently. It is especially useful when dealing with small data sets or lists that are nearly sorted because it works faster in such cases. Flash memory algorithms typically use this sorting method due to its stability and less requirement of write swaps. Moreover, it's used in online sorting where the list is being actively updated while being maintained in sorted order.",hints:[{hint:' Think of the array as divided into a sorted and unsorted portion. Start with the first element as "sorted" and expand this portion by inserting elements from the unsorted part.'},{hint:"In cases where the key is already greater than or equal to the largest element in the sorted portion, no shifts are needed, improving efficiency for nearly sorted arrays."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"In the worst case (reverse order), each element needs to be compared with all previous elements and shifted to the beginning of the array, leading to O(n2) time complexity.",question:"What happens when the array is reversed?"},{answer:`Insertion sort is efficient for small or nearly sorted datasets because fewer shifts are needed, and it avoids unnecessary comparisons.
Example:
Input: [1, 2, 3, 4, 5] (Sorted)
The algorithm completes in O(n) as no shifting is required.`,question:"When is insertion sort efficient?"}],interview_followup_questions:[{answer:" Use binary search to find the correct position for the key in the sorted portion. While this reduces comparisons to O(logn), the shifting operation still takes O(n), so the overall complexity remains O(n2).",question:"How can insertion sort be optimized?"},{answer:`Insertion sort is rarely used for large datasets but is practical for Online Sorting, It is effective for dynamic datasets where elements are added incrementally, as it can quickly re-sort the array.
Example: Sorting a deck of cards, where new cards are added one at a time.`,question:"Is insertion sort practical for real-world applications?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"sorting_sorting_algorithms_mergesorting",problem_name:"Merge Sorting",problem_slug:"merge-sorting",problem_rank:3,misc:{tags:["Mastercard","Stripe","Pinterest","ARM","Snowflake","Rockstar Games","Cerner","Splunk","Medtronic","Oracle","Broadcom","Uber","DoorDash","GE Healthcare","Nutanix","Electronic Arts","Docker","Epic Systems","Alibaba","HCL Technologies","Goldman Sachs","Red Hat","Seagate Technology","Optum","Airbnb","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","Amazon","Google"],facts:"The merge sort algorithm, which is the core concept of this problem, is widely used in practical software development. One fun fact is that it's the primary algorithm behind the efficient and powerful `sort()` function in many programming languages like Java and Python. This method is used across a wide range of applications, from ranking search engine results to sorting a user's social media feed. It's also often used in database algorithms for efficient data retrieval and storage.",hints:[{hint:'Merge sort works by recursively dividing the array into two halves, sorting each half, and then merging the two sorted halves back together. Focus on understanding the "divide", "conquer", and "merge" steps.'},{hint:"Think about how the recursive function handles sorting the left and right halves independently before merging them."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Merge sort requires extra space to store temporary arrays during the merge process. At each step, two halves are merged into a temporary array before copying back into the original array. The space complexity is O(n), where n is the size of the input array.
Example:
Input: [4, 3, 2, 1]
Merge process uses temporary arrays to combine [4, 3] and [2, 1] into sorted halves, and finally merges them into [1, 2, 3, 4].`,question:"Why does merge sort require extra space, and how much?"},{answer:"Yes, merge sort naturally handles duplicates by preserving their relative order during the merging process. This makes it a stable sorting algorithm.",question:" Can merge sort handle duplicate elements?"}],interview_followup_questions:[{answer:"Standard merge sort is not in-place because merging two sorted arrays requires additional memory to combine them. However, there are in-place variations of merge sort, but they are complex and trade simplicity and performance for reduced memory usage.",question:"Can merge sort be implemented in-place? If not, why?"},{answer:`Linked lists do not support random access, making quicksort inefficient.
Merge sort efficiently splits linked lists into halves using pointers without needing extra space for copying.
Merging two sorted linked lists can be done in O(n) without additional memory overhead.
Example:
Input: 4 \u2192 2 \u2192 9 \u2192 1
Process:
Split into 4 \u2192 2 and 9 \u2192 1.
Sort each half: 2 \u2192 4 and 1 \u2192 9.
Merge: 1 \u2192 2 \u2192 4 \u2192 9.`,question:"Why is merge sort preferred for linked lists?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"sorting_sorting_algorithms_quicksorting",problem_name:"Quick Sorting",problem_slug:"quick-sorting",problem_rank:4,misc:{tags:["Medtronic","Ubisoft","Riot Games","Mastercard","Byju's","Splunk","Morgan Stanley","Electronic Arts","Bloomberg","Salesforce","Epic Games","Robinhood","Ernst & Young","Roche","IBM","Docker","Siemens Healthineers","Rockstar Games","McKinsey & Company","Johnson & Johnson","Boston Consulting Group","Pinterest","Rakuten","Activision Blizzard","Intel","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Fun Fact: Quick Sort algorithm, which is at the heart of this problem, is a widely used sorting algorithm in practical software development. It is often used in file and database systems due to its efficient runtime performance. For example, the Unix system command 'sort', used for arranging lines of text files or concatenating, is implemented using Quick Sort. It's not only fast, but the algorithm also efficiently sorts in-place, meaning it doesn't require additional memory space to store sorted elements, unlike some other sorting algorithms.",hints:[{hint:"Focus on choosing a pivot element. All elements smaller than the pivot go to its left, and all larger elements go to its right. Think about recursively applying the same partitioning logic to the left and right subarrays created by the pivot."},{hint:"Consider how swapping elements helps to ensure that the pivot ends up in its correct position after partitioning."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`Quick sort ensures efficiency by:
Dividing the array into smaller subproblems.
Recursively sorting these subproblems with O(nlogn) complexity on average.
Being cache-friendly due to in-place operations, reducing memory overhead.
Its performance depends on balanced partitioning, which is achieved through good pivot selection strategies like randomization or median-of-three.`,question:"How does quick sort ensure efficiency for large datasets?"},{answer:`Partitioning is the core of quick sort. It rearranges the array so that all elements smaller than the pivot appear before it, and all larger elements appear after it. This ensures the pivot is placed in its correct position. The process enables quick sort to recursively sort smaller subarrays.
Example:
Input: [4, 2, 9, 1] with pivot = 4.
Partitioning results in: [2, 1], [4], [9].
Now the pivot (4) is correctly positioned in the sorted array.`,question:"How does quick sort partition the array, and why is it critical?"}],interview_followup_questions:[{answer:`Quick sort is inherently unstable because the partitioning step involves swapping elements, which can disrupt the relative order of duplicate elements. 
Use extra memory to track original indices.
Modify the partitioning process to preserve the order of equal elements.
`,question:"Can quick sort be made stable?"},{answer:`Partitioning is the core of quick sort. It rearranges the array so that all elements smaller than the pivot appear before it, and all larger elements appear after it. This ensures the pivot is placed in its correct position. The process enables quick sort to recursively sort smaller subarrays.

Example:
Input: [4, 2, 9, 1] with pivot = 4.
Partitioning results in: [2, 1], [4], [9].
Now the pivot (4) is correctly positioned in the sorted array.`,question:"How does quick sort partition the array, and why is it critical?"}]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"arrays",category_name:"Arrays",category_slug:"arrays",category_rank:2,subcategories:[{subcategory_id:"arrays_fundamentals",subcategory_name:"Fundamentals",subcategory_slug:"fundamentals",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"arrays_arrays_fundamentals_linearsearch",problem_name:"Linear Search",problem_slug:"linear-search",problem_rank:0,misc:{tags:["Reddit","Texas Instruments","Qualcomm","Swiggy","American Express","Zomato","Roblox","Red Hat","Lyft","Ubisoft","HCL Technologies","GE Healthcare","Roche","Oracle","AMD","Byju's","Dropbox","KPMG","Deloitte","Epic Games","Goldman Sachs","Splunk","Intel","McKinsey & Company","Flipkart","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Fun Fact: This problem is fundamental to search algorithms within many software applications. One place you see search algorithms used frequently is in databases - when you query a database, the database software utilizes search algorithms to find the data you are looking for. Similarly, when you use a search engine like Google, the search engine is using algorithmic concepts similar to the one presented in this problem to find and sort the results.",hints:[{hint:"Start at the first element and compare it with the target. Continue until you find the target or reach the end of the array. Ensure to stop searching and return the index as soon as the target is found, as you are looking for the smallest index."},{hint:" Remember to handle edge cases where the target is at the beginning or end of the array, or if it is not present at all."}],language:["cpp","java","python","javascript"],difficulty:"Easy",frequently_occuring_doubts:[{answer:`If the target is not present, the function should return -1. This indicates that no index contains the target value. 
Example: Input: nums = [1, 2, 3, 4], target = 5 
Output: -1`,question:"What happens if the target is not found in the array? "},{answer:"Linear search is not ideal for large datasets because of its  O(n) time complexity. For unsorted arrays, it's often the only choice. However, for sorted arrays, use binary search O(logn)) to improve efficiency. Alternatively, hash-based methods O(1) average case) can be used if the data structure supports it.",question:"Is linear search suitable for very large arrays? "}],interview_followup_questions:[{answer:`To return all indices: Traverse the array completely, even after finding the first occurrence. Use a list to store indices of all occurrences of the target. 
Example: Input: nums = [1, 2, 3, 2, 4], target = 2 
Output: [1, 3]`,question:"How would you modify the function to return all indices of the target instead of just the smallest? "},{answer:"Linear search can be optimized for: If a specific target appears frequently, keep track of its last found index to start the search from there in subsequent searches. If the array is partially sorted or has a specific pattern, consider stopping early when certain conditions are met.",question:"How can linear search be optimized for specific scenarios? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_fundamentals_largestelement",problem_name:"Largest Element",problem_slug:"largest-element",problem_rank:1,misc:{tags:["Mastercard","Unity Technologies","Nutanix","Electronic Arts","Etsy","Cloudflare","Bain & Company","Bloomberg","Square","Johnson & Johnson","Seagate Technology","Oracle","Intel","Docker","Salesforce","American Express","Robinhood","Epic Games","Reddit","IBM","Lyft","Boston Consulting Group","McKinsey & Company","Target","Philips Healthcare","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"This problem's foundational concept is frequently used in data analysis software and algorithms. For example, finding the largest or maximum value in a data set is commonly needed in statistical computations, such as when calculating the range (the difference between the highest and lowest values) or understanding the distribution of data. Furthermore, in real-time systems or applications like weather forecasting and stock market analysis, determining the highest value is crucial to predict potential peaks.",hints:[{hint:"Start by assuming the first element is the largest, then iterate through the array to compare each element with the current largest."},{hint:"Use a single loop to traverse the array and update the largest element whenever a larger value is found."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`The algorithm still works correctly. It will identify the first occurrence of the largest element, but since the value remains the same, it doesn't matter which occurrence is tracked. 
Example: Input: nums = [3, 5, 2, 5, 1] 
Output: 5`,question:" How does the algorithm behave if there are multiple occurrences of the largest element?  "},{answer:`The algorithm works the same way with negative numbers. It starts with the first element as the largest and updates it whenever a larger (less negative) number is found. 
Example: Input: nums = [-3, -1, -7, -2] 
Output: -1`,question:"How does the algorithm handle arrays with all negative numbers? "}],interview_followup_questions:[{answer:`Check if the array is empty at the beginning. If it is, return a specific value (e.g., None) or raise an error. 
Example: Input: nums = [] 
Output: None or raise a "ValueError: Array is empty"`,question:"How would you handle an empty array or invalid input? "},{answer:`Use a loop to track both the value and the index of the largest element. Update the index whenever the largest value is updated.  
Example: Input: nums = [1, 3, 5, 2] 
Output: (5, 2) (Value = 5, Index = 2)`,question:"How would you modify the algorithm to return both the largest element and its index?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_fundamentals_secondlargestelement",problem_name:"Second Largest Element",problem_slug:"second-largest-element",problem_rank:2,misc:{tags:["Bloomberg","Alibaba","Epic Systems","Seagate Technology","HCL Technologies","Lyft","Unity Technologies","Electronic Arts","Visa","Broadcom","PwC","JPMorgan Chase","Databricks","Ernst & Young","Pinterest","Red Hat","Deloitte","Reddit","Stripe","Intel","HashiCorp","Micron Technology","Swiggy","Texas Instruments","Docker","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"The underlying concept of finding the second largest number in an array is a crucial part of recommendation algorithms utilized in e-commerce platforms and streaming services. In these systems, it is often required not only to find the most relevant choice (the largest element), but also the next best alternatives (the second largest, third largest, etc.) to provide users with a variety of options, hence improving user experience and engagement.",hints:[{hint:"Use two variables to track the largest and second-largest elements as you iterate through the array. Update the second-largest only if you find an element smaller than the largest but larger than the current second-largest."},{hint:"Avoid sorting, as a single traversal O(n) is sufficient to find the second-largest element."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`If the array has fewer than two elements, there is no second-largest element. Return -1 to indicate this scenario. 
Example: Input: nums = [7] 
Output: -1`,question:"What happens if the array has fewer than two elements? "},{answer:`If all elements are identical, there is no second-largest distinct value. Return -1 in this case. 
Example: Input: nums = [4, 4, 4]
Output: -1`,question:"How does the algorithm handle arrays with identical elements? "}],interview_followup_questions:[{answer:`For a stream of data (where elements arrive one at a time):  Maintain two variables, largest and second_largest, initialized to -\u221E.Update these variables dynamically as new elements arrive. 
Example: Stream: [2, 5, 1, 8, 3] 
Process:  Start with largest = \u2212\u221E, second_largest = \u2212\u221E. 
After processing the stream: largest = 8, second_largest = 5.`,question:"How would you handle finding the second-largest element in a stream of data? "},{answer:`Yes, a min-heap of size 2 can be used to maintain the two largest elements:  Insert the first two elements into the heap. For each new element, compare it with the smallest element in the heap. If it is larger, replace the smallest element. At the end, the heap will contain the two largest elements. 
Example: Input: nums = [3, 1, 4, 2] Heap after processing: [3, 4] 
Output: 3 (second-largest element).`,question:"Can you solve this problem using a different approach, such as heap data structures? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_fundamentals_maximumconsecutiveones",problem_name:"Maximum Consecutive Ones",problem_slug:"maximum-consecutive-ones",problem_rank:3,misc:{tags:["Byju's","Oracle","Mastercard","Bain & Company","Splunk","HashiCorp","Reddit","Zynga","Micron Technology","OYO Rooms","Roche","Activision Blizzard","Uber","Ernst & Young","Nutanix","ARM","American Express","Morgan Stanley","Philips Healthcare","JPMorgan Chase","Pinterest","Swiggy","Optum","Stripe","Wayfair","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","Amazon"],facts:"A fun and practical application of this problem exists in data compression techniques, used in various aspects of software development. In particular, a variant of this problem is employed in Run-Length Encoding (RLE) that is a simple form of data compression where runs of data are stored as a single data value and count. It counts the occurrences of consecutive 1s (or 0s), which is similar to the given problem. RLE is used in graphics files formats including BMP, TIFF, and in certain PDF compression schemes.",hints:[{hint:"Traverse the array while keeping a running count of consecutive 1s. Reset the count to 0 whenever a 0 is encountered."},{hint:"Maintain a variable to track the maximum count of consecutive 1s observed during traversal."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The time complexity of the solution is  O(n), where n is the length of the array. This is optimal as each element must be inspected at least once to determine the number of consecutive 1s. It cannot be optimized further without additional assumptions about the input.",question:"What is the time complexity, and can it be optimized further? "},{answer:"The algorithm correctly identifies the length of each segment of consecutive 1s and tracks the maximum. Alternating 1s and 0s do not affect the algorithm's correctness.",question:" How does the algorithm handle arrays with alternating 1s and 0s? "}],interview_followup_questions:[{answer:`Track the starting index of each segment of consecutive 1s. Update the start and end indices whenever a new maximum is found. 
Example: Input: nums = [1, 1, 0, 1, 1, 1, 0] 
Output: Indices (3, 5)`,question:"How would you modify the algorithm to return the indices of the maximum segment of consecutive 1s? "},{answer:`For streaming data, maintain a running count of consecutive 1s and update the maximum whenever a 0 is encountered. Use a single variable to track the current count. Update the maximum count dynamically without storing the full array. 
Example: Stream: [1, 1, 0, 1, 1, 1, 0] 
Output after processing: 3`,question:"How would you handle a streaming input (data arriving one bit at a time)? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_fundamentals_leftrotatearraybyone",problem_name:"Left Rotate Array by One",problem_slug:"left-rotate-array-by-one",problem_rank:4,misc:{tags:["Walmart","MongoDB","Roche","Roblox","Seagate Technology","Bungie","Goldman Sachs","Deloitte","OYO Rooms","Byju's","Rakuten","Visa","Texas Instruments","Etsy","HCL Technologies","Epic Systems","NVIDIA","Reddit","DoorDash","Teladoc Health","PayPal","Red Hat","Zoho","Robinhood","Micron Technology","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Focus on moving the first element of the array to the end while shifting all other elements one position to the left."},{hint:"Think about how swapping or overwriting elements can achieve the desired rotation within the same array."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Yes, the logic applies to arrays of any type. For complex objects, ensure that only references are moved and no deep copying is unintentionally triggered.",question:"Can this logic handle nested arrays or complex objects?"},{answer:`Validation involves testing:
- Empty arrays: Output should remain empty.
- Single-element arrays: Output should remain unchanged.
- Arrays with duplicates: Check that all duplicates are correctly preserved and shifted.
- Arrays with mixed values: Ensure the logic handles all types of elements consistently.`,question:"How can you validate correctness across various test cases?"}],interview_followup_questions:[{answer:`
For multidimensional arrays (e.g., matrices), rotation involves more complex transformations:
- Left Rotation: Shifting rows or columns depending on the axis of rotation.
- Right Rotation: Similar logic but reversed.`,question:"How would the algorithm handle multidimensional arrays?"},{answer:`
- In-Place Rotation: Rearranges elements directly in the original array without using additional memory. It is more space-efficient but often requires more careful handling of indices.
- Using Extra Space: Creates a temporary array to hold shifted elements, simplifying the process but increasing memory usage.`,question:" What is the difference between in-place rotation and using extra space?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_fundamentals_leftrotatearray",problem_name:"Left Rotate Array by K Places",problem_slug:"left-rotate-array",problem_rank:5,misc:{tags:["Reddit","Docker","Byju's","Twilio","Johnson & Johnson","JPMorgan Chase","Visa","Shopify","HashiCorp","Flipkart","Siemens Healthineers","Teladoc Health","Cerner","Western Digital","KPMG","Goldman Sachs","AMD","Ubisoft","McKinsey & Company","Mastercard","Oracle","Robinhood","Cloudflare","Optum","Roche","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Rotating an array by 'k' steps is a frequently used operation in digital signal processing, particularly in operations such as circular convolution and in implementing algorithms like FFT (Fast Fourier Transform). This concept finds applications in many areas including data compression tools, image processing software, and audio signal processing tools. It is the fundamental operation that allows you to shift frames, process signals and handle buffers -- which is critical, for instance, when streaming video or audio.",hints:[{hint:"Split the array into two parts at index k: the first k elements and the rest. Then rearrange the two parts to place the second part before the first part."},{hint:"Think about how you can achieve the rotation by reversing parts of the array rather than using extra space."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`
When k \u2265 nums.length, the rotation repeats unnecessarily. 
To simplify:
Reduce k to k % nums.length.
This ensures that the rotation is performed only as much as necessary.
Example:
Input: nums = [1, 2, 3], 
k=4
Effective k=4%3=1. Output: [2, 3, 1].`,question:"What if k is greater than or equal to the array length?"},{answer:`Instead of creating a new array:
- Reverse the entire array.
- Reverse the first n\u2212k elements (left part).
- Reverse the last k elements (right part).
- This method achieves the same result in O(1) extra space.`,question:"How can this be done in-place?"}],interview_followup_questions:[{answer:`Yes, but for 2D arrays (e.g., matrices), rotation involves more complex transformations:
- For left rotation, each row/column is treated as a separate 1D array and rotated individually.
- For k>1, the process must account for overlapping boundaries in 2D structures.`,question:"Can this logic be extended to multidimensional arrays?"},{answer:"Rotation shifts elements in a structured, cyclic order, preserving their relative positions. Shuffling, on the other hand, rearranges elements randomly without preserving order. Rotation is deterministic, whereas shuffling introduces randomness.",question:"What\u2019s the difference between rotation by k and shuffling?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"arrays_logicbuilding",subcategory_name:"Logic Building",subcategory_slug:"logic-building",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"arrays_arrays_logicbuilding_movezerostoend",problem_name:"Move Zeros to End",problem_slug:"move-zeros-to-end",problem_rank:1,misc:{tags:["Roblox","Flipkart","Ubisoft","Boston Consulting Group","Medtronic","Seagate Technology","AMD","Bain & Company","Target","Dropbox","DoorDash","KPMG","HCL Technologies","Snowflake","PayPal","Docker","Rockstar Games","IBM","Pinterest","Salesforce","HashiCorp","Twilio","Intel","Zoho","Byju's","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","Amazon"],facts:"This problem and its underlying concept are commonly applied in memory management within computation. An everyday example could be when a streaming service needs to manage its content list. When a user finishes watching a TV show, it could be marked as '0' and sent to the 'end of the list', making way for new or unwatched content. So, this programming problem is like creating an algorithm to keep the recommendation engine engaging by bringing fresh content to the front while pushing consumed or less important items to the back.",hints:[{hint:"Use two pointers to iterate through the array. One pointer keeps track of the current position, and the other identifies where the next non-zero element should go."},{hint:"Focus on swapping non-zero elements to the front while keeping track of the current index for placing zeros at the end. Avoid creating a new array by modifying the original array directly. Shift non-zero elements left and fill zeros at the end."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`By iterating through the array from left to right and moving each non-zero element to the next available position, the algorithm maintains the original order of non-zero elements. Zeros are simply moved to the end without disrupting this sequence.

`,question:"What ensures the relative order of non-zero elements is preserved?"},{answer:"For multi-dimensional arrays, apply the same principle to each row or column independently. The complexity increases due to additional dimensions, requiring nested loops or recursive logic to process all elements",question:"Can this logic be generalized for multi-dimensional arrays?"}],interview_followup_questions:[{answer:`To move zeros to the beginning:
- Iterate through the array from right to left.
- Shift non-zero elements to the rightmost available position, and place zeros at the beginning.
- This maintains the relative order of non-zero elements.`,question:"How would you modify the algorithm to move all zeros to the beginning instead?"},{answer:"Instead of checking for zeros, modify the condition to identify negative numbers. Use the same two-pointer approach to shift non-negative numbers to the front while maintaining their order.",question:"How can you adapt this algorithm for other conditions, like moving all negative numbers to the end?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_logicbuilding_removeduplicatesfromsortedarray",problem_name:"Remove duplicates from sorted array",problem_slug:"remove-duplicates-from-sorted-array",problem_rank:2,misc:{tags:["Unity Technologies","Byju's","Electronic Arts","JPMorgan Chase","Reddit","Roche","Freshworks","Walmart","Mastercard","Medtronic","Shopify","Rakuten","Swiggy","Seagate Technology","Docker","Philips Healthcare","Cerner","Twilio","Zomato","PayPal","NVIDIA","Zynga","Uber","Red Hat","Qualcomm","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:'Fun Fact: The concept of removing duplicates from an array, as illustrated in the programming problem, is commonly applied in the real world software industry. One well-known example is in database management systems. If we consider a database as an array where each row corresponds to an array element, removing duplicates is equivalent to the SQL operation "SELECT DISTINCT", which is frequently used to obtain a list of unique records. Furthermore, this operation is often implemented in Javascript-based web development for data manipulation in various web apps to ensure data integrity and avoid redundancy.',hints:[{hint:"Since the array is sorted, duplicates will always be consecutive. Compare adjacent elements to identify duplicates and move unique elements forward."},{hint:"Keep a counter to track the number of unique elements as you traverse the array."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The problem specifies that the elements after the first k unique values (where k is the number of unique elements) are irrelevant. They do not need to be in any particular order or have specific values, as only the first k elements are considered part of the result.",question:"What happens to the remaining elements after placing the unique elements?"}],interview_followup_questions:[{answer:`If the array was unsorted, the sorted property could not be used to identify duplicates in one pass. Instead:
Sort the array first (O(nlogn)), then apply the two-pointer technique.
Alternatively, use a hash set to track seen elements, but this would require O(n) extra space.`,question:"How would the solution change if the array was not sorted?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_logicbuilding_findmissingnumber",problem_name:"Find missing number",problem_slug:"find-missing-number",problem_rank:3,misc:{tags:["Rakuten","HCL Technologies","ARM","Rockstar Games","Roblox","PayPal","Robinhood","Snowflake","Philips Healthcare","Mastercard","Byju's","HashiCorp","Deloitte","NVIDIA","Texas Instruments","GE Healthcare","Freshworks","IBM","Lyft","Wayfair","Bloomberg","Teladoc Health","Chewy","Shopify","Salesforce","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Fun Fact: The problem concept of identifying missing elements in a sequence is commonly used in the software industry for a variety of purposes. For instance, it\u2019s integral in database management where checking for missing IDs or sequence gaps is crucial. The concept is also highly relevant in network programming, specifically in TCP (Transmission Control Protocol) where packet sequence numbers are maintained. Identifying missing sequence numbers helps in detecting packet loss during data transmission.",hints:[{hint:'"Use the formula for the sum of the first n natural numbers:  S= (n\xD7(n+1))/2. Subtract the sum of the array elements from  S to find the missing number."'},{hint:"Leverage the XOR property: x\u2295x=0 and x\u22950=x. XOR all indices and array values; the missing number will be the result."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The sum formula is faster (O(n)) compared to iterative checks (O(n2)) because the sum formula requires only a single pass to compute the sum of array elements and one subtraction. Iterative checks require comparing each number in the range to the array, which is inefficient.",question:"Why use the sum formula instead of iterative checks?"},{answer:`If 0 is missing, the sum formula still works because S includes 0 by definition.
If n is missing, the sum formula accounts for n since it calculates the sum of the entire range, and subtracting the array sum leaves n`,question:"What happens if the missing number is 0 or n?"}],interview_followup_questions:[{answer:`
If duplicates are allowed:
Use a hash set to track numbers present in the array.
Iterate through 0 to n, checking if each number exists in the set.
This approach requires O(n) time and O(n) space.`,question:"How would you handle the problem if duplicates are allowed in the array?"},{answer:`Both methods have O(n) time complexity and O(1) space complexity.
The sum formula involves addition and subtraction, while the XOR method uses bitwise operations. XOR is slightly faster in practice due to the lower computational cost of bitwise operations.`,question:"How does the performance compare between the sum formula and XOR methods?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_logicbuilding_unionoftwosortedarrays",problem_name:"Union of two sorted arrays",problem_slug:"union-of-two-sorted-arrays",problem_rank:5,misc:{tags:["Lyft","Riot Games","Swiggy","Johnson & Johnson","Salesforce","Byju's","Chewy","GE Healthcare","Pinterest","Morgan Stanley","Databricks","Micron Technology","Freshworks","Activision Blizzard","Qualcomm","eBay","KPMG","Medtronic","Airbnb","Walmart","Zynga","Shopify","Boston Consulting Group","HashiCorp","Stripe","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"This type of problem is often used in database management systems and search engines for combining and analyzing large data sets. Particularly, it serves as the underlying concept for SQL's UNION operation which helps in merging data from two SQL tables while removing duplicates. Additionally, search engine algorithms use similar concepts to combine search results from various sources into one single, sorted and non-repetitive result set.",hints:[{hint:"Utilize two pointers to traverse the sorted arrays simultaneously. This helps efficiently handle duplicates and maintain ascending order."},{hint:"Since both arrays are sorted, you can skip elements that are equal to the last added element in the union array."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Merging ensures that elements from both arrays are included in the result in sorted order. Deduplication ensures that repeated elements (either within a single array or across both arrays) appear only once in the final result.",question:"Why do we need both merging and deduplication?"},{answer:`For very large arrays:
If they fit in memory, use the two-pointer approach to merge them efficiently.
If they don\u2019t fit in memory, use external sorting techniques or divide the arrays into manageable chunks, process each chunk separately, and merge the results.`,question:"What if the arrays are very large?"}],interview_followup_questions:[{answer:`If the input arrays are unsorted:
Sort each array first O(mlogm) and O(nlogn)).
Apply the two-pointer approach or merge logic.
This approach would have an overall time complexity of O(mlogm+nlogn+m+n).`,question:"How would you handle unsorted input arrays?"},{answer:`To handle k sorted arrays:
Use a min-heap to merge the arrays.
Push the smallest element of each array into the heap.
Extract the minimum element, add it to the result, and push the next element from the same array into the heap.
This has a time complexity of O(Nlogk), where N is the total number of elements.`,question:"How would you extend this to handle k sorted arrays?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_logicbuilding_intersectionoftwosortedarrays",problem_name:"Intersection of two sorted arrays",problem_slug:"intersection-of-two-sorted-arrays",problem_rank:6,misc:{tags:["Zoho","Ernst & Young","Stripe","Dropbox","Johnson & Johnson","Bungie","Walmart","Siemens Healthineers","Goldman Sachs","Byju's","Morgan Stanley","Zynga","Bloomberg","GE Healthcare","Reddit","Cloudflare","AMD","Airbnb","Swiggy","Deloitte","Seagate Technology","Cerner","Texas Instruments","Snowflake","Boston Consulting Group","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"The concept behind this problem is extremely important in database operations, specifically in the SQL operations like JOINs. For example, an 'inner join' in SQL is essentially finding the intersection of two tables based on some common column. This operation is used extensively in software development where handling of databases is involved. This could include anything, from apps that need to pull up personalized user data, to large-scale data analysis and processing frameworks.",hints:[{hint:" Use two pointers to traverse both arrays simultaneously. This helps efficiently find common elements since both arrays are sorted.Add an element to the intersection only if it is present in both arrays at the same index of the pointers."},{hint:" If duplicates are not allowed in the result, skip consecutive duplicate elements in either array during traversal."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"If either array is empty, the intersection is empty since there are no common elements.",question:"What happens if one or both arrays are empty?"},{answer:`
If duplicates are allowed in the intersection:
Include the common element as many times as it appears in both arrays.
If duplicates are not allowed:
Skip consecutive duplicates in both arrays while processing.`,question:"How does the algorithm handle duplicates within the arrays?"}],interview_followup_questions:[{answer:`For unsorted arrays:
Sort both arrays first O(mlogm+nlogn).
Apply the two-pointer technique to find the intersection.`,question:"How would you handle unsorted arrays?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"arrays_faqs(medium)",subcategory_name:"FAQs (Medium)",subcategory_slug:"faqs-medium",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"arrays_arrays_faqs(medium)_leadersinanarray",problem_name:"Leaders in an Array",problem_slug:"leaders-in-an-array",problem_rank:0,misc:{tags:["Dropbox","Riot Games","Mastercard","ARM","Deloitte","Cloudflare","Ernst & Young","Lyft","Rockstar Games","Cerner","Roche","Philips Healthcare","Nutanix","Instacart","Rakuten","Visa","HashiCorp","Qualcomm","Bungie","JPMorgan Chase","Target","Unity Technologies","McKinsey & Company","GE Healthcare","Broadcom","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","Amazon","Google"],facts:'One interesting real-world usage of this problem is in financial software or stock market analysis tools, where it is used to find "leaders" or stocks that outperform all others that come after them in a given period. The concept of finding leaders in an array can be analogous to finding peak points in a financial graph, helping traders and investors make informed decisions. This is one example of how seemingly theoretical programming problems can be used in a practical business context.',hints:[{hint:"Traverse the array from right to left, as the rightmost element is always a leader and gives a starting point for comparison. Maintain a variable to keep track of the maximum value encountered so far during the traversal. An element is a leader if it is greater than this maximum."},{hint:"As you identify leaders while traversing from right to left, add them to a temporary list and reverse it at the end to preserve the original order."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Traversing from right to left ensures that the current maximum is always the leader for the elements processed so far. This avoids revisiting elements multiple times and allows a single-pass O(n) solution.",question:"Why traverse the array from right to left?"},{answer:`By adding leaders to a temporary list during right-to-left traversal and reversing the list at the end, the leaders are presented in the same order as they appear in the original array.
`,question:"How does the algorithm ensure the leaders appear in the correct order?"}],interview_followup_questions:[{answer:"The presence of duplicate elements does not change the logic. The algorithm still traverses from right to left and checks if the current element is greater than the maximum seen so far. Only elements that strictly satisfy this condition are added to the leader list.",question:"How would you handle an unsorted list with duplicate elements?"},{answer:"For a circular array, you would need to iterate over the array twice (once normally and once wrapping around). Adjust the comparison logic to handle the circular property, ensuring no duplicates are considered as leaders.",question:"What if the array is circular?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(medium)_rearrangearrayelementsbysign",problem_name:"Rearrange array elements by sign",problem_slug:"rearrange-array-elements-by-sign",problem_rank:1,misc:{tags:["Micron Technology","Etsy","Intel","Swiggy","ARM","Reddit","Cerner","Splunk","Bungie","Pinterest","Optum","Roche","Square","Lyft","Rakuten","GE Healthcare","Wayfair","OYO Rooms","Bloomberg","Activision Blizzard","Ernst & Young","Johnson & Johnson","Deloitte","Red Hat","IBM","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro","Amazon"],facts:"One practical application of this problem can be found in the financial software industry, specifically in the domain of portfolio management. There, the sequence and proportion of positive (profit) and negative (loss) financial transactions is crucial. Algorithms similar to this problem can be used to analyze transaction data, where consecutive transactions follow a pattern of gain and loss, helping a financial analyst to understand and predict the market dynamics.",hints:[{hint:"Extract positive and negative integers into two separate arrays while preserving their relative order. Iterate through the positive and negative arrays simultaneously, alternately adding elements from each to the result array."},{hint:"Use two indices to track the position in the positive and negative arrays during merging."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The algorithm processes positives and negatives in the order they appear in the original array by iterating over the separated positive and negative arrays without modifying their relative order.",question:"How does the algorithm ensure the order of positives and negatives is preserved?"},{answer:"The algorithm treats duplicate integers the same as other integers, preserving their order during separation and merging. Duplicates do not affect the correctness of the alternation.",question:"How does the algorithm handle edge cases like duplicates?"}],interview_followup_questions:[{answer:`If the counts are uneven:
Fill the result array with as many alternating pairs as possible.
Append the remaining elements (all positives or all negatives) to the end of the result array while preserving their order.`,question:"How would you modify the algorithm to handle uneven counts of positives and negatives?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(medium)_printthematrixinspiralmanner",problem_name:"Print the matrix in spiral manner",problem_slug:"print-the-matrix-in-spiral-manner",problem_rank:2,misc:{tags:["Visa","Reddit","Twilio","Square","Nutanix","Flipkart","Target","AMD","American Express","Alibaba","Unity Technologies","Activision Blizzard","Bain & Company","Medtronic","Goldman Sachs","Splunk","Bloomberg","Dropbox","PwC","Philips Healthcare","Oracle","Ubisoft","Uber","JPMorgan Chase","IBM","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"This programming problem is integral in the development of Medical Imaging technologies and apps using MRI or CT scans. These health-tech applications often include features that allow medical professionals to view and analyze 3D scans in a series of 2D slices, which basically requires handling 3D matrices. The traversal of these 2D slices in a specific orderly pattern, such as the spiral manner described in this problem, allows for efficient and thorough analysis of the images.",hints:[{hint:"Treat the matrix as a collection of concentric rectangular layers. Traverse each layer in four steps: top row (left to right), right column (top to bottom), bottom row (right to left), and left column (bottom to top)."},{hint:"Maintain four boundaries (top, bottom, left, right) to keep track of the limits of the matrix as you spiral inward."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`After traversing a boundary, adjust it inward:
Increment top after traversing the top row.
Decrement right after traversing the right column.
Decrement bottom after traversing the bottom row.
Increment left after traversing the left column.`,question:"How does the algorithm avoid revisiting elements?"},{answer:"In an odd-dimensional square matrix, the center element is visited during the last iteration. No special handling is needed as the shrinking boundaries naturally include it in the traversal.",question:"How do I handle the center element in an odd-dimensional matrix?"}],interview_followup_questions:[{answer:`For sparse matrices:
Use a coordinate-based approach to track only non-zero elements.
Perform the traversal using the coordinates of active elements instead of iterating through every cell.`,question:"How would you handle a sparse matrix?"},{answer:`To traverse counterclockwise:Start with the left column (top to bottom).
Traverse the bottom row (right to left).
Traverse the right column (bottom to top).
Traverse the top row (left to right).`,question:"How would you modify the algorithm for counterclockwise spiral traversal?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"pascal's_triangle_iii",problem_name:"Pascal's Triangle I",problem_slug:"pascals-triangle-i",problem_rank:3,misc:null,problem_type:"DSA",hasIDE:!0},{problem_id:"pascal's_triangle_ii",problem_name:"Pascal's Triangle II",problem_slug:"pascals-triangle-ii",problem_rank:4,misc:null,problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(medium)_pascal'striangle",problem_name:"Pascal's Triangle III",problem_slug:"pascals-triangle-iii",problem_rank:5,misc:{tags:["Cloudflare","Dropbox","Deloitte","Docker","Instacart","Wayfair","Swiggy","Stripe","Splunk","Salesforce","NVIDIA","Zomato","Teladoc Health","Unity Technologies","Nutanix","Micron Technology","Freshworks","Activision Blizzard","Philips Healthcare","Flipkart","Zoho","Alibaba","HCL Technologies","Bungie","Lyft","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Pascal's Triangle isn't just a fun programming problem, it's quite practical too! The triangle is used in mathematics and computing to calculate coefficients for polynomial expansion, which is useful in several algorithmic computations. For example, the routing algorithms used in networking, and more specifically in the widely used OSPF (Open Shortest Path First) routing protocol, utilize the concept of Pascal's Triangle. Beyond networking, formulas derived from Pascal's Triangle are used in algorithmic design, statistical analysis, and in creating curved graphical elements in computer graphics. It's pretty cool how this triangular array has such an impactful real-world application!",hints:[{hint:"Each element in a row (except the first and last) is the sum of the two elements directly above it from the previous row. This recursive relationship can be used to compute Pascal's triangle row by row."},{hint:"For each row, initialize the first and last elements as 1. Compute the middle elements using values from the previous row."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Each middle element is the sum of the two elements directly above it in the triangle.
If the previous row is prevRow, then currRow[i] = prevRow[i - 1] + prevRow[i].`,question:"How do we calculate elements in the middle of a row?"},{answer:"The sum of elements along the diagonals of Pascal's triangle gives Fibonacci numbers.",question:"How can Pascal's triangle be used to compute Fibonacci numbers?"}],interview_followup_questions:[{answer:`To compute the value at row r and column c (0-based indexing), use the combination formula:
C(r,c)= r!/(c!\xD7(r\u2212c)!)
\u200B
`,question:"How would you compute a specific element in Pascal\u2019s triangle without generating the entire triangle?"},{answer:"The n-th row of Pascal's triangle represents the coefficients of the terms in the expansion of (a+b)^n.",question:"How can Pascal's triangle be used in binomial expansion?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(medium)_rotatematrixby90degrees",problem_name:"Rotate matrix by 90 degrees",problem_slug:"rotate-matrix-by-90-degrees",problem_rank:6,misc:{tags:["Snowflake","Epic Games","Freshworks","Bungie","Robinhood","Boston Consulting Group","OYO Rooms","Philips Healthcare","Ernst & Young","Visa","Lyft","Texas Instruments","McKinsey & Company","Chewy","DoorDash","Goldman Sachs","Pinterest","Wayfair","Roblox","Ubisoft","Splunk","Target","Swiggy","American Express","Intel","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"One interesting application of this problem can be found in image processing. Many image-editing software or applications use rotation algorithms similar to this to adjust or manipulate images. For instance, when you rotate an image 90 degrees clockwise on your smartphone or computer, programs effectively apply a similar method in the background.",hints:[{hint:"Swap elements such that matrix[i][j] becomes matrix[j][i]. Reverse the order of elements in each row to complete the rotation."},{hint:"Alternatively, rotate the matrix in layers, starting from the outermost layer and moving inward. For each layer, shift elements in groups of four."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The given problem assumes a square N\xD7N matrix. For non-square matrices, a 90-degree rotation would not be in place, as the dimensions change. Handling non-square matrices requires creating a new matrix to store the result.",question:"How does the algorithm handle non-square matrices?"},{answer:`Transposing: Converts rows into columns (flipping the matrix across its diagonal).
Reversing Each Row: Aligns the transposed columns to their new positions after rotation.`,question:" Why does transposing and reversing achieve a 90-degree rotation?"}],interview_followup_questions:[{answer:`For k rotations of 90 degrees:
Reduce 
k modulo 4 (k%4) to minimize redundant rotations.
Perform the k rotations iteratively using the 90-degree rotation logic.`,question:"How would you generalize this for multiple rotations?"},{answer:`For sparse matrices:
Use a coordinate-based representation (e.g., a dictionary of non-zero values).
Transform the coordinates for the rotation rather than manipulating the entire matrix.
This reduces both time and space complexity for large sparse matrices.`,question:" What if the matrix is sparse?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(medium)_twosum",problem_name:"Two Sum",problem_slug:"two-sum",problem_rank:7,misc:{tags:["Freshworks","JPMorgan Chase","Goldman Sachs","Twilio","Splunk","Micron Technology","Chewy","Flipkart","McKinsey & Company","GE Healthcare","Qualcomm","Robinhood","Zomato","Alibaba","Walmart","Lyft","MongoDB","Electronic Arts","Square","Rakuten","Activision Blizzard","Morgan Stanley","PayPal","Riot Games","Epic Games","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem is known as the Two Sum problem and it plays an integral role in various aspects of software development. It is a common interview question used to gauge a candidate\u2019s analytical and problem-solving skills. Moreover, its underlying concept, the utilization of data structures such as arrays and hash maps to optimize processing time, has many practical implementations. For instance, the Two Sum problem appears within e-commerce platforms where it helps in matching <strong>price pairs</strong> for combined products to a given target price. The faster and more efficient your algorithm, the better the customer experience in terms of performance.",hints:[{hint:"Use a hash map (dictionary) to store the indices of elements as you iterate through the array. This allows for efficient lookups of the complement (i.e., target\u2212current\xA0element)."},{hint:"Alternatively, use two pointers, one starts at the beginning (smallest element) and the other at the end (largest element) of the sorted array.If the sum of the elements at the two pointers is less than the target, move the left pointer to the right. If the sum is greater than the target, move the right pointer to the left."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`In a sorted array:
Increasing the left pointer increases the sum.
Decreasing the right pointer decreases the sum.`,question:"Why does the two-pointer technique work only on sorted arrays?"},{answer:"If the pointers cross (i.e., the left pointer exceeds the right pointer) without finding a match, it means no two numbers in the array sum to the target. In this case, the algorithm returns an empty result or an appropriate error message.",question:" What if there are no valid pairs?"}],interview_followup_questions:[{answer:`If multiple solutions are allowed:
Continue moving the pointers inward even after finding a valid pair.
Store all valid pairs in a result list.`,question:"How would you handle multiple solutions?"},{answer:"While sorting, store the original indices as tuples (e.g., [(value, index)]). Use the sorted array to find the solution, and then map the indices back to their original positions.",question:"How would you return the original indices after sorting?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(medium)_3sum",problem_name:"3 Sum",problem_slug:"3-sum",problem_rank:8,misc:{tags:["Teladoc Health","Oracle","DoorDash","Nutanix","Epic Games","ARM","Wayfair","Robinhood","Cloudflare","Mastercard","Optum","Stripe","Goldman Sachs","Bain & Company","Visa","Deloitte","MongoDB","Airbnb","Rakuten","KPMG","AMD","Johnson & Johnson","Byju's","Flipkart","NVIDIA","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept underlying this problem is commonly used in data analysis and machine learning. For instance, it can be used to identify clusters or groups (triplets in this case) in larger datasets to which certain constraints apply such as their sum equaling zero. In finance, it can be used to identify combinations of transactions or investments that counterbalance each other, resulting in a net effect of zero. It's an interesting application of array traversal, hash-map utilization, and the two-pointer technique in real-world scenarios.",hints:[{hint:"Begin by sorting the input array to simplify the process of finding triplets and managing duplicates. Sorting ensures that duplicates are adjacent and allows the use of a two-pointer technique."},{hint:"Iterate through the array, fixing one element at a time. For each fixed element, look for a pair of numbers in the remaining array that sum to the negative of the fixed element. Use two pointers, one starting from the next element after the fixed element and the other from the end of the array."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Skip duplicate values of nums[i] while iterating.
Skip duplicate values of nums[left] and nums[right] during the two-pointer traversal.`,question:"How do we avoid duplicate triplets?"},{answer:`Sorting allows:
Efficient identification of duplicates by comparing adjacent elements.
Simplification of the two-pointer logic, as the relationship between pointer movements and the sum becomes predictable.`,question:"Why sort the array?"}],interview_followup_questions:[{answer:"Sorting is part of the solution and is necessary for efficient implementation. It adds O(nlogn) complexity, which is negligible compared to the O(n2) time required for finding triplets.",question:" What if the input array is unsorted?"},{answer:`Instead of finding triplets that sum to 0:
Look for triplets that sum to a given target t.
Use the same two-pointer approach, with nums[left]+nums[right]=t\u2212nums[i].`,question:"How would you modify the algorithm to find all unique triplets with a sum equal to a different target?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(medium)_4sum",problem_name:"4 Sum",problem_slug:"4-sum",problem_rank:9,misc:{tags:["Etsy","Deloitte","Uber","Unity Technologies","AMD","Wayfair","Rockstar Games","Zomato","Swiggy","Chewy","Bain & Company","Splunk","GE Healthcare","Western Digital","Lyft","Micron Technology","Teladoc Health","McKinsey & Company","Square","Riot Games","Instacart","JPMorgan Chase","Pinterest","Target","Twilio","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`Finding all unique quadruplets in an integer array that add up to a target sum may seem like a pure mathematical concept, but it has practical applications in a field known as data analysis. Often, in the data analysis and machine learning field, we are given a large dataset and need to find specific patterns or combinations within the data that lead to or explain a certain outcome. These combinations are not always limited to pairs (as in the two-sum problem), but can also be triples, quadruples or more, depending on the data and problem at hand. The underlying concept is used in predictive analytics, data mining and association rule learning. For instance, in retail sales, it's common to look for combinations of products that are commonly bought together, think of the "customers who bought this item also bought another item" recommendations. In our case, we could be looking for combinations of four items, whose total price adds up to a certain target amount.`,hints:[{hint:"Begin by sorting the input array to simplify the identification of quadruplets and management of duplicates. Sorting ensures that duplicates are adjacent and facilitates the use of pointers for efficient searching."},{hint:"Iterate through the array, fixing two elements at a time. For each pair, use the two-pointer technique on the remaining array to find pairs of numbers that sum to the complement of the fixed pair. After fixing two elements, use two pointers to traverse the remaining array, adjusting pointers based on the sum."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Fix two elements, nums[i] and nums[j].
Use two pointers, left and right, on the remaining part of the array to find pairs that sum to target\u2212nums[i]\u2212nums[j].
Adjust pointers:If the sum is less than the target, move left forward to increase the sum.
If the sum is greater, move right backward to decrease the sum.`,question:"How does the two-pointer technique work in this context?"},{answer:"Skip duplicate values for nums[i], nums[j], nums[left], and nums[right] during the iterations.",question:"How do we avoid duplicate quadruplets?"}],interview_followup_questions:[{answer:"Sorting is part of the solution and is necessary for efficient implementation. Sorting adds O(nlogn) complexity, which is manageable compared to O(n^3).",question:" What if the input array is unsorted?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(medium)_sortanarrayof0's1'sand2's",problem_name:"Sort an array of 0's 1's and 2's",problem_slug:"sort-an-array-of-0's-1's-and-2's",problem_rank:10,misc:{tags:["Flipkart","Roblox","MongoDB","JPMorgan Chase","Boston Consulting Group","Robinhood","Broadcom","Square","Swiggy","Qualcomm","Reddit","Docker","NVIDIA","PwC","McKinsey & Company","Epic Systems","Red Hat","Rakuten","Morgan Stanley","Bloomberg","Byju's","Western Digital","Seagate Technology","AMD","KPMG","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem, known as the Dutch National Flag problem, is actually quite common in software development. For instance, a practical application of the solution to this problem is in image processing, specifically in sorting the pixels by color. When working with RGB (Red, Green, Blue) pixel values, the colors can be classified into three categories (0, 1, 2), and therefore may need to be sorted in a similar manner for different image manipulation techniques. The key here is that the sorting procedure must not create a new copy of the pixel data (to save memory), which is parallel to the in-place sorting constraint in the problem.",hints:[{hint:'"Use three pointers (low, mid, and high) to partition the array into three regions: Elements less than 1 (0) are moved to the left (region of 0s). Elements equal to 1 are in the middle. Elements greater than 1 (2) are moved to the right (region of 2s)."'},{hint:'"If the element at mid is 0, swap it with the element at low and move both pointers forward. If the element at mid is 1, move the mid pointer forward. If the element at mid is 2, swap it with the element at high and move high backward."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The three-pointer approach ensures that each element is placed in the correct region in a single pass. By categorizing elements into 0, 1, and 2 and moving them to their respective regions, the algorithm avoids unnecessary comparisons and swaps.",question:"Why use three pointers?"},{answer:"The algorithm directly modifies the input array by swapping elements as needed. No additional memory is used, resulting in O(1) space complexity.",question:"How does the algorithm ensure in-place sorting?"}],interview_followup_questions:[{answer:"Yes, the algorithm can be generalized to sort arrays with more than three distinct values by extending the partitioning logic. However, for more than three distinct values, other sorting algorithms like quicksort or mergesort may be more appropriate.",question:"Can this algorithm be extended to sort arrays with more than three distinct values?"},{answer:"The algorithm performs the same operations regardless of whether the array is partially sorted. It will still complete in O(n) time, but fewer swaps may be required, improving practical performance slightly.",question:"What if the array is partially sorted?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(medium)_kadane'salgorithm",problem_name:"Kadane's Algorithm",problem_slug:"kadane's-algorithm",problem_rank:11,misc:{tags:["Activision Blizzard","Broadcom","Teladoc Health","Roche","Zomato","Pinterest","Optum","Epic Systems","Twilio","Rockstar Games","Siemens Healthineers","Red Hat","McKinsey & Company","Oracle","Cloudflare","Mastercard","Salesforce","Seagate Technology","Qualcomm","Flipkart","Bain & Company","PwC","Electronic Arts","Swiggy","Philips Healthcare","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem, often referred to as the Maximum Subarray Problem, forms the basis for many real-world applications in the field of Financial Technology. One key application is in the analysis of stock prices. Given the changes in a stock's price over a sequence of time (which can be positive or negative), the maximum subarray problem can be used to determine the most profitable time to buy and sell for maximum profit. The subarray with the largest sum essentially represents the period with the most significant growth. The Kadane's algorithm, often used to solve this problem, is widely used in such financial analysis systems, reinforcing how theoretical computer science problems have direct, practical implications.",hints:[{hint:'"Maintain two variables: currentMax: Tracks the maximum sum ending at the current index. globalMax: Stores the maximum sum seen so far."'},{hint:"If adding the current element decreases the sum, start a new subarray from the current element. This happens when the previous sum becomes negative."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Kadane\u2019s algorithm runs in O(n) time, making it much more efficient than the O(n^2) or O(n^3) time of nested loop approaches. It processes each element only once.",question:"Why use Kadane\u2019s algorithm instead of nested loops?"}],interview_followup_questions:[{answer:`For a 2D matrix:
Use Kadane\u2019s algorithm on each possible submatrix.
Iterate over row pairs, calculating the sum of elements in each submatrix and applying Kadane\u2019s algorithm to find the largest subarray sum.`,question:"How would you generalize this to find the largest subarray sum for 2D arrays (matrices)?"},{answer:`Track the start and end indices of the maximum subarray:
When starting a new subarray (currentMax = nums[i]), record the start index.
Update the end index when globalMax is updated.`,question:"How would you modify Kadane\u2019s algorithm to return the actual subarray?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"arrays_faqs(hard)",subcategory_name:"FAQs (Hard)",subcategory_slug:"faqs-hard",subcategory_rank:4,subcategory_type:"study",problems:[{problem_id:"arrays_arrays_faqs(hard)_majorityelement-i",problem_name:"Majority Element-I",problem_slug:"majority-element-i",problem_rank:1,misc:{tags:["MongoDB","GE Healthcare","Zomato","Lyft","Zynga","Swiggy","Flipkart","Walmart","Uber","Intel","Micron Technology","Optum","Wayfair","Red Hat","Roblox","Texas Instruments","OYO Rooms","PwC","Instacart","eBay","Salesforce","Epic Games","Splunk","Medtronic","Bloomberg","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This kind of problem is frequent in data analytics applications such as marketing research and political polling where a determination needs to be made about the dominant preference expressed in a group of responses. It helps to categorize and understand large datasets and even widely in popularity algorithms used by social media platforms like Facebook or Twitter to detect trends or viral content faster. This algorithm lays the foundation of the Boyer-Moore Majority Voting algorithm, which is an efficient way to solve the problem with a time complexity of O(N) and a space complexity of O(1).",hints:[{hint:"Keep a count variable while iterating, Increase count when encountering the same candidate. Decrease count when encountering a different number. If count == 0, change candidate. The final candidate will be the majority element."},{hint:"Recursively split the array into halves, find the majority element in each half, if both halves agree, return that element."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`The majority element always dominates other numbers, so it cancels out non-majority elements when counting.
Even if count resets, the majority element eventually overtakes.`,question:"Why does the Boyer-Moore algorithm work?"},{answer:"Since the majority element appears more than n/2 times, it will always be at nums[n/2] in a sorted array.",question:"Why does sorting work?"}],interview_followup_questions:[{answer:`Boyer-Moore extended approach: Use two candidates instead of one.
Each valid candidate must appear more than n/3 times.`,question:"How would you modify this to find all elements appearing more than n/3 times?"},{answer:"Yes, count each bit position and reconstruct the majority element.",question:"Can this problem be solved using bitwise operations?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(hard)_majorityelement-ii",problem_name:"Majority Element-II",problem_slug:"majority-element-ii",problem_rank:2,misc:{tags:["Ernst & Young","Oracle","Red Hat","MongoDB","Bungie","KPMG","Roblox","Lyft","Bain & Company","Flipkart","Cloudflare","Robinhood","Pinterest","Freshworks","Reddit","Electronic Arts","Salesforce","HashiCorp","Unity Technologies","Micron Technology","AMD","Splunk","McKinsey & Company","Shopify","Qualcomm","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The underlying concept used in solving this problem is frequently applied in data analytics and database management. For instance, in a system where it is necessary to detect the most common elements in a data set, like finding the most popular products in a shopping app or detecting spam or malicious activities, solutions to this problem can be used. Similarly, social networking applications utilize this concept to discover trending hashtags or posts that are being shared more frequently. It's a simple, but incredibly powerful concept used in many areas of software development.",hints:[{hint:"Use two counters to track two potential majority candidates. Count occurrences using a hash map (O(n) space). Collect elements that appear more than n/3 times."},{hint:'"Sort the array (O(n log n)). Scan linearly to find elements occurring more than n/3 times."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If there were 3 elements appearing more than n/3 times, their total count would exceed n, which is impossible.",question:"Why can there be at most two elements appearing more than n/3 times?"},{answer:"Sorting takes O(n log n), which is slower than O(n) Boyer-Moore.",question:"Why is sorting less efficient?"}],interview_followup_questions:[{answer:"Use k-1 candidates in Boyer-Moore Voting Algorithm instead of just 2.",question:"How would you modify this for elements appearing more than n/k times?"},{answer:"Yes, count each bit position and reconstruct the elements.",question:"Can this problem be solved using bitwise operations?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(hard)_findtherepeatingandmissingnumber",problem_name:"Find the repeating and missing number",problem_slug:"find-the-repeating-and-missing-number",problem_rank:3,misc:{tags:["Nutanix","Chewy","Zoho","Dropbox","Byju's","MongoDB","Robinhood","Alibaba","Teladoc Health","AMD","JPMorgan Chase","Texas Instruments","Rakuten","Riot Games","Micron Technology","eBay","Red Hat","Twilio","Johnson & Johnson","Seagate Technology","Goldman Sachs","Epic Systems","Deloitte","Flipkart","ARM","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This problem is essentially a variant of the classic "find duplicate and missing numbers" problem, which is extremely relevant in data analysis and database management in software development. For instance, when managing user generated content like user IDs, posts or comments in social media platforms, similar problems often occur - finding duplicate entries or missing entries. Efficiently solving this kind of problem can ensure data integrity and help improve the performance and user experience of the software.',hints:[{hint:"The sum of squares of numbers from 1 to n should be (n(n+1)(2n+1))/6. Using this along with the actual sum of squares from the array, we can derive two equations to solve for the missing and duplicate numbers."},{hint:"The XOR approach works because XOR of the same number cancels out (x ^ x = 0), leaving only the difference between the missing and duplicate numbers."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`After sorting, adjacent duplicates appear together, making them easy to detect.
Missing numbers are found by checking consecutive values.`,question:"How does sorting help?"}],interview_followup_questions:[{answer:`Use a hash table to track frequencies (O(n) space).
Extend XOR approach to detect multiple values.`,question:"How would you modify this if multiple numbers were duplicated or missing?"},{answer:"Use a hash set or frequency array instead of 1 to n assumption.",question:" How does this change for an unsorted list with arbitrary numbers?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(hard)_countinversions",problem_name:"Count Inversions",problem_slug:"count-inversions",problem_rank:4,misc:{tags:["Bain & Company","Mastercard","Teladoc Health","Zoho","Unity Technologies","Robinhood","NVIDIA","Salesforce","Etsy","Electronic Arts","IBM","Zomato","OYO Rooms","Docker","Bloomberg","Rockstar Games","Boston Consulting Group","Twilio","Activision Blizzard","Epic Games","Riot Games","Alibaba","MongoDB","Western Digital","Broadcom","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem forms the core concept behind certain algorithmic functionalities in database management systems. When a database sorts data, it often uses similar concepts to inversion count. For instance, it can be used in optimizing query processing. The less the number of inversions, the more optimized the data arrangement would be. Additionally, in search engines, the concept of inversion is used to improve search result rankings, for example in determining the best arrangement of URLs given a specific query.",hints:[{hint:"We can use Merge Sort to count inversions efficiently in O(n log n). While merging, if nums[i] > nums[j], all elements from i onward in the left half form inversions with nums[j]."},{hint:" If values in nums are bounded, a Fenwick Tree or Segment Tree can be used to count elements greater than nums[j] before index j in O(n log n)."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"While merging two halves, if left[i] > right[j], all remaining elements in left contribute to inversions because they are all greater than right[j].",question:"How does Merge Sort count inversions?"},{answer:"The maximum inversions occur when the array is reverse sorted, which is n(n-1)/2.",question:"What is the worst-case inversion count?"}],interview_followup_questions:[{answer:"The number of inversions represents the minimum swaps needed to sort the array.",question:"How does this relate to sorting algorithms?"},{answer:"Modify the merge function to return both sorted output and the inversion count.",question:"How can we modify Merge Sort to also return the sorted array alongside inversion count?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(hard)_reversepairs",problem_name:"Reverse Pairs",problem_slug:"reverse-pairs",problem_rank:5,misc:{tags:["Zynga","Splunk","American Express","Unity Technologies","Walmart","Stripe","Robinhood","HCL Technologies","Alibaba","Databricks","Epic Systems","Activision Blizzard","OYO Rooms","Pinterest","Electronic Arts","PwC","Rockstar Games","Flipkart","Chewy","Boston Consulting Group","Riot Games","Broadcom","Swiggy","Visa","Uber","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: While the problem of finding reverse pairs in an integer array might seem abstract, it actually finds use in data analysis and comparison-based sorting algorithms like Merge sort or Quick sort. In these cases, an efficient sorting of elements matters a lot, especially when dealing with large datasets. The concept of identifying and handling reverse pairs can be used to optimize these sorting algorithms, thereby improving the performance of software applications that rely on data processing, analysis, or management.",hints:[{hint:"Similar to counting inversions, we divide the array into two halves and count reverse pairs while merging. During merging, count the number of nums[j] where nums[i] > 2 * nums[j] for all i < j."},{hint:"If values in nums are bounded, a Fenwick Tree or Segment Tree can efficiently count elements <= 2 * nums[j] in O(log n)."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"While merging, count the number of nums[j] where nums[i] > 2 * nums[j] before merging the two halves to maintain order.",question:"How does Merge Sort help in counting reverse pairs?"},{answer:"If the array is in reverse sorted order with exponentially decreasing values, the count will be close to n(n-1)/2.",question:"What is the worst-case number of reverse pairs?"}],interview_followup_questions:[{answer:"Hash maps allow quick lookups, but they do not support range queries efficiently.",question:"Can we use a hash map to store frequency counts instead of a Fenwick Tree?"},{answer:"Negative values affect 2 * nums[j], but sorting-based approaches still work.",question:"What happens if the array contains negative numbers?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(hard)_maximumproductsubarrayinanarray",problem_name:"Maximum Product Subarray in an Array",problem_slug:"maximum-product-subarray-in-an-array",problem_rank:6,misc:{tags:["Rakuten","Intel","Freshworks","Red Hat","Docker","Chewy","Zoho","Visa","HCL Technologies","Unity Technologies","JPMorgan Chase","Bain & Company","Zynga","Wayfair","Databricks","Micron Technology","PayPal","Mastercard","Stripe","AMD","NVIDIA","IBM","PwC","Riot Games","Siemens Healthineers","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is a classic example of dynamic programming, which is fundamentally used in various industry-level applications for optimizing solutions to complex problems. For instance, database software like Oracle and MySQL use similar concepts to optimize query parsing. Besides, algorithms similar to this are critical in financial technologies which rely on historical data to analyze trends or optimize investment portfolios. For instance, identifying the most lucrative series of transactions (which operates similarly to finding a subarray with the largest product) is a key strategy used in stock market analysis.",hints:[{hint:"Instead of keeping just a maximum sum, maintain both the maximum product and minimum product at each step, since negative numbers can flip signs."},{hint:"A negative number can make a large positive product negative, but it can also turn a large negative product positive if multiplied with another negative. Therefore, keep track of both the max product so far and the min product so far, swapping when needed."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Because multiplication behaves differently with negative numbers and zeros, so we must track the min product as well.",question:"Why does Kadane\u2019s algorithm for max sum not work directly for max product?"},{answer:"A negative number can flip the sign, turning a small negative product into a large positive one.",question:"Why do we track both max and min products?"}],interview_followup_questions:[{answer:"Track start and end indices whenever max_prod is updated.",question:"How would you modify this to return the actual subarray instead of just the product?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_faqs(hard)_mergetwosortedarrayswithoutextraspace",problem_name:"Merge two sorted arrays without extra space",problem_slug:"merge-two-sorted-arrays-without-extra-space",problem_rank:7,misc:{tags:["Texas Instruments","Siemens Healthineers","Oracle","Epic Systems","Robinhood","Freshworks","Qualcomm","MongoDB","NVIDIA","Ernst & Young","Square","Electronic Arts","Salesforce","Walmart","Cloudflare","Bain & Company","Intel","Swiggy","Chewy","Pinterest","Johnson & Johnson","GE Healthcare","Zomato","Nutanix","Red Hat","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun fact: This type of problem is commonly encountered when programmers work with databases. If you have two sorted lists of records (perhaps from two different databases), and you need to merge them into a single sorted list, you might use this type of algorithm. Similarly, this is also a key part of how 'merge sort', a popular and efficient sorting algorithm, works! So, when your data in different apps or systems need to be sorted and merged together, this type of programming solution often comes into action.",hints:[{hint:'"Use three pointers: i = m - 1 (last valid element in nums1) j = n - 1 (last element in nums2) k = m + n - 1 (last index in nums1)"'},{hint:'"If nums1[i] > nums2[j], place nums1[i] at nums1[k]. Otherwise, place nums2[j] at nums1[k]. Move the pointer(s) accordingly."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Placing elements from the end avoids shifting elements, making the process O(n + m) time instead of O((m+n) log(m+n)) using sorting.",question:"Why start merging from the end instead of the beginning?"},{answer:"Yes, but in-place merging is required, so no extra space should be used.",question:"Can this be solved using extra space?"}],interview_followup_questions:[{answer:"Use a temporary array, merge both, then copy back into nums1.",question:"How would you modify this if nums1 did not have extra space?"},{answer:"This is the merge step of merge sort, combining two sorted arrays efficiently.",question:"How does this problem relate to merge sort?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"arrays_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:5,subcategory_type:"contest",problems:[{problem_id:"arrays_arrays_contest_maximumconsecutivegoodnumbers",problem_name:"Maximum Consecutive Good Numbers",problem_slug:"maximum-consecutive-good-numbers",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_contest_setdifferenceoftwoarrays",problem_name:"Set difference of two arrays",problem_slug:"set-difference-of-two-arrays",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"arrays_arrays_contest_numberofjumps",problem_name:"Number of Jumps",problem_slug:"number-of-jumps",problem_rank:3,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"hashing",category_name:"Hashing",category_slug:"hashing",category_rank:3,subcategories:[{subcategory_id:"hashing_faqs",subcategory_name:"FAQs",subcategory_slug:"faqs",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"hashing_hashing_faqs_longestconsecutivesequenceinanarray-dup",problem_name:"Longest Consecutive Sequence in an Array",problem_slug:"longest-consecutive-sequence-in-an-array",problem_rank:1,misc:{tags:["Zynga","DoorDash","Western Digital","Unity Technologies","Ernst & Young","eBay","Riot Games","Bloomberg","GE Healthcare","HashiCorp","Micron Technology","Qualcomm","Texas Instruments","Docker","PwC","Swiggy","PayPal","JPMorgan Chase","Ubisoft","Activision Blizzard","Teladoc Health","NVIDIA","Instacart","Boston Consulting Group","Rakuten","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem can be applied in the development of streaming multimedia platforms, for example, Netflix or YouTube. These platforms need to correctly sequence video packets, which could arrive out of order, to provide a seamless streaming experience. Understanding how to find/integrate sequences of consecutive numbers can therefore be crucial for designing the algorithms to handle this task.",hints:[{hint:"Use a hash set to store all elements of the array. Iterate through the array, and for each element, check if it is the start of a sequence by ensuring that num\u22121 is not in the set."},{hint:"For each starting number, count the length of the consecutive sequence by checking for num+1, num+2, etc., in the set. Maintain a variable to store the length of the longest sequence encountered during the traversal."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Using a hash set allows O(1) lookups and avoids the O(nlogn) overhead of sorting. The entire algorithm runs in O(n), making it more efficient for large arrays.",question:"Why use a hash set instead of sorting the array? "}],interview_followup_questions:[{answer:"In addition to tracking the length, maintain the starting number of the longest sequence. Once identified, reconstruct the sequence by iterating from the starting number up to its length.",question:"How would you modify the algorithm to return the actual sequence instead of its length? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"hashing_hashing_faqs_longestsubarraywithsumk-dup",problem_name:"Longest subarray with sum K",problem_slug:"longest-subarray-with-sum-k",problem_rank:2,misc:{tags:["Zynga","Nutanix","Intel","Oracle","Johnson & Johnson","Flipkart","Docker","Bloomberg","GE Healthcare","eBay","PayPal","American Express","NVIDIA","Robinhood","Boston Consulting Group","Goldman Sachs","Philips Healthcare","Medtronic","Swiggy","HashiCorp","Airbnb","PwC","Deloitte","Etsy","Cerner","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This problem is based on the concept of "Sliding Window Algorithm" which is very popular in dealing with array or list data structures in actual software development. Most commonly, this algorithm is used in networking protocols such as TCP to avoid network congestion by controlling the amount of data sent without receiving an acknowledgment, and in multimedia and graphics, where it improves user experience by ensuring smooth data flow and rendering.',hints:[{hint:"Use a hash map to store the prefix sum of the array at each index. This helps efficiently track subarrays that sum to k."},{hint:"For each index i, calculate the prefix sum up to that point. If the prefix sum minus k exists in the hash map, the subarray between those indices sums to k."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The algorithm works with negative numbers because prefix sums account for decreases in the sum. The condition prefixSum\u2212k correctly identifies subarrays that sum to k, regardless of the sign of the elements.",question:"How does the algorithm handle negative numbers in the array? "},{answer:"The hash map allows constant-time lookups to check if a subarray with the desired sum exists. This eliminates the need for nested loops, reducing the time complexity from O(n2) to O(n).",question:"Why use a hash map for prefix sums? "}],interview_followup_questions:[{answer:"In addition to storing the prefix sum, store the index where each prefix sum occurs. When a matching prefix sum is found, the subarray can be retrieved using the stored index and the current index.",question:"How would you handle finding the subarray itself, not just its length? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"hashing_hashing_faqs_countsubarrayswithgivensum-dup",problem_name:"Count subarrays with given sum",problem_slug:"count-subarrays-with-given-sum",problem_rank:3,misc:{tags:["KPMG","Morgan Stanley","Rakuten","Freshworks","Byju's","HashiCorp","Cerner","Zynga","Flipkart","ARM","DoorDash","Roblox","Databricks","Uber","IBM","Instacart","Johnson & Johnson","Wayfair","Teladoc Health","Rockstar Games","Swiggy","Roche","Bungie","Medtronic","Broadcom","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The underlying concept of this problem is extensively used in the development of financial software and analytical tools. They often require fetching and calculating subarrays of financial data with a certain sum to perform risk assessment, portfolio optimization, model investment scenarios, and track financial anomalies. It forms an integral part of the data analysis engine of these software systems.",hints:[{hint:"Use a hash map to store the frequency of prefix sums encountered so far. This allows efficient calculation of the number of subarrays that sum to k."},{hint:"For each index i, calculate the prefix sum up to that point. If prefixSum\u2212k exists in the hash map, it indicates that there are subarrays ending at index i with a sum equal to k."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"For each prefix sum encountered: Check if prefixSum\u2212k exists in the map (count the subarrays ending at the current index). Increment the count of the current prefix sum in the map.",question:"How is the hash map updated during the process? "}],interview_followup_questions:[{answer:`Multiple zeros allow multiple overlapping subarrays with sum k. The prefix sum logic naturally counts these overlapping subarrays correctly.  
Input: nums = [0, 0, 0], k = 0 
Output: 6 (Subarrays: [0], [0], [0], [0, 0], [0, 0], [0, 0, 0])`,question:"How does the algorithm handle arrays with multiple zeros?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"hashing_hashing_faqs_countsubarrayswithgivenxork-dup",problem_name:"Count subarrays with given xor K",problem_slug:"count-subarrays-with-given-xor-k",problem_rank:4,misc:{tags:["Qualcomm","Seagate Technology","Twilio","PayPal","JPMorgan Chase","Instacart","Square","Etsy","Epic Games","Broadcom","Pinterest","Riot Games","Bungie","Reddit","Teladoc Health","Byju's","Siemens Healthineers","Roblox","Western Digital","OYO Rooms","Robinhood","Rockstar Games","Snowflake","Cerner","Databricks","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The underlying concept of this problem is extensively used in cryptographic algorithms and network protocols in the realm of Cybersecurity. XOR operations, as used in this problem, are an integral part of many encryption methods for safeguarding data. These are used not just for encoding messages, but also for error detections in data transmission and storage, as well as generating hash functions and pseudorandom number sequences. A practical application of this problem's solution can hence lie in cracking certain encryption codes, or testing the strength of these encryption methodologies.",hints:[{hint:"Use a hash map to store the frequency of prefix XOR values encountered so far. This allows efficient computation of subarrays with a given XOR sum."},{hint:"For a subarray ending at index i, if prefixXOR[i]\u2295k exists in the hash map, it means there is a subarray whose XOR is k. For each index, count the subarrays ending at that index that satisfy the XOR condition and update the hash map with the current prefix XOR."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"XOR has the property that A\u2295B=C\u27F9A=B\u2295C. Using this property, you can efficiently determine if a subarray with the desired XOR exists by comparing the current prefix XOR with previously seen values.",question:"Why does XOR work for subarray problems?  "},{answer:`The hash map keeps track of the frequency of each prefix XOR. If multiple subarrays end at different indices with the same XOR, they are all counted correctly. 
Example: Input: nums = [4, 2, 2, 6], k = 6 
Output: 3 (Subarrays: [4, 2], [2, 6], [4, 2, 2, 6])`,question:"What happens if there are overlapping subarrays with the same XOR? "}],interview_followup_questions:[{answer:"Maintain two separate hash maps for k1 and k2. Alternate between the two as you traverse the array, counting valid subarrays for each condition.",question:"What if you need to count subarrays whose XOR alternates between two values, k1 and k2?  "},{answer:"XOR-based approaches are limited to problems where the target condition involves XOR properties. They cannot be directly applied to sum, product, or other arithmetic-based subarray problems.",question:"What are the limits of XOR-based approaches for subarray problems? "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"hashing_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:2,subcategory_type:"contest",problems:[{problem_id:"hashing_hashing_contest_countofsubarrayswithsumdivisiblebyk",problem_name:"Count of Subarrays with Sum Divisible by K",problem_slug:"count-of-subarrays-with-sum-divisible-by-k",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"hashing_hashing_contest_groupwordsbyanagrams",problem_name:" Group Words by Anagrams",problem_slug:"group-words-by-anagrams",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"hashing_hashing_contest_maximumpointsonaline",problem_name:"Maximum Points on a Line",problem_slug:"maximum-points-on-a-line",problem_rank:3,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"binarysearch",category_name:"Binary Search",category_slug:"binary-search",category_rank:4,subcategories:[{subcategory_id:"binarysearch_fundamentals",subcategory_name:"Fundamentals",subcategory_slug:"fundamentals",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"binarysearch_binarysearch_fundamentals_searchxinsortedarray",problem_name:"Search X in sorted array",problem_slug:"search-x-in-sorted-array",problem_rank:1,misc:{tags:["Mastercard","Epic Systems","Walmart","PwC","Morgan Stanley","Rockstar Games","Western Digital","JPMorgan Chase","Byju's","Ernst & Young","OYO Rooms","Splunk","DoorDash","GE Healthcare","Stripe","Wayfair","Lyft","Dropbox","NVIDIA","Shopify","Red Hat","Ubisoft","McKinsey & Company","KPMG","Teladoc Health","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"This problem is the basic concept behind search engines. Whether you're searching for a specific email in your inbox or a keyword on Google, the underlying program is using a more complex version of this algorithm to find and return the results you're looking for. Without it, the internet as we know it wouldn't exist.",hints:[{hint:"Instead of scanning through the array element by element (linear search), leverage the fact that the array is sorted. Divide the search space into halves repeatedly to locate the target. Each step either discards or keeps half the array."},{hint:"Always start by calculating the midpoint of the current search range. If the midpoint value matches the target, you\u2019re done. If it\u2019s smaller, the target must be on the right; if larger, it must be on the left."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"While linear search works, it requires O(n) time. Binary search reduces the complexity to O(logn), which is much faster for large arrays.",question:"Why not use linear search?"},{answer:"For an infinite sorted array, start with a bounded range and double the range size until the target is within the bounds. Then apply binary search within that range.",question:"What if the array is infinite?"}],interview_followup_questions:[{answer:"To find the first occurrence, adjust your logic to continue searching the left half even after finding a match. Similarly, for the last occurrence, search the right half after finding a match. This ensures you locate the boundary of duplicate elements.",question:"How would you modify binary search to find the first or last occurrence of the target?"},{answer:"For a rotated sorted array, modify the binary search to check which half of the array is sorted at each step. Use this information to decide whether to search in the left or right half.",question:"What if the array is rotated?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_fundamentals_lowerbound",problem_name:"Lower Bound",problem_slug:"lower-bound-",problem_rank:2,misc:{tags:["Morgan Stanley","Western Digital","Qualcomm","Broadcom","Ubisoft","ARM","Etsy","Instacart","Lyft","Chewy","GE Healthcare","Siemens Healthineers","Docker","HashiCorp","JPMorgan Chase","Epic Games","Twilio","Robinhood","Teladoc Health","Optum","Swiggy","Salesforce","Target","Goldman Sachs","AMD","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Fun Fact: Lower bound algorithms are commonly used in database queries and search engines. They help improve the speed of searches by eliminating sections of data that don't need to be searched. For example, when you're typing in the search bar of an e-commerce app, a lower bound algorithm can quickly find the starting point of the products that start with the letters you've entered, significantly speeding up the search process. So, every time you search for a product on a shopping app or a keyword on a search engine, there's a good chance you're using a lower bound algorithm!",hints:[{hint:'It\u2019s not just about finding x; you\u2019re looking for the first index where the array value is greater than or equal to x.Think of it as finding where x "fits" in the array while maintaining the sorted order.'},{hint:'"Use binary search logic but modify the condition for moving the pointers. If nums[mid]\u2265x, the answer might lie to the left, so move the high pointer. Otherwise, move the low pointer to search the right half."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"In regular binary search, you stop when you find the exact match. In lower bound, you don\u2019t stop there. You continue searching to find the smallest index satisfying nums[index]\u2265x.",question:"How does lower bound differ from regular binary search?"},{answer:"In this case, the algorithm correctly returns the size of the array, as x would be placed beyond the last index.",question:"What if x is larger than all elements?"}],interview_followup_questions:[{answer:`For a rotated sorted array:
Find the pivot first (smallest element).
Apply lower bound logic in the correct half of the rotated array.`,question:"What if the array is rotated?"},{answer:`Ensure your condition for updating pointers prevents overlapping:
Use low=mid+1 for moving right.
Use high=mid for moving left.
Terminate when low\u2265high.`,question:"How do I avoid infinite loops in binary search?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_fundamentals_upperbound",problem_name:"Upper Bound",problem_slug:"upper-bound",problem_rank:3,misc:{tags:["American Express","Shopify","Stripe","Micron Technology","Intel","Siemens Healthineers","Square","Bloomberg","Western Digital","Teladoc Health","Docker","Airbnb","Red Hat","Roblox","Target","Swiggy","Deloitte","Broadcom","HashiCorp","Pinterest","Optum","NVIDIA","Zomato","Splunk","Activision Blizzard","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"The underlying concept of the 'upper bound' problem is used in database indexing strategies. When querying data, databases often need to quickly find the range of entries that satisfy a certain condition. For instance, finding all customers whose yearly income is above a certain value. Here, the 'upper bound' function can efficiently return the first record that exceeds the specified income, and all successive records can be retrieved from there. This allows significant speedup in the processing of such queries, ultimately enhancing performance of applications that rely on large databases.",hints:[{hint:'"The upper bound doesn\u2019t care about whether x exists in the array. It\u2019s about finding the smallest index where nums[index]>x."'},{hint:'"Use the usual binary search setup, but adjust the condition: If nums[mid]>x, the result could be at mid, so move the high pointer to search the left half. Otherwise, move the low pointer to search the right half. Stop when the low pointer overtakes the high pointer."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The lower bound finds the first index where nums[index]\u2265x, while the upper bound looks for nums[index]>x. It\u2019s a subtle but crucial distinction that affects pointer movements in binary search.",question:"How is upper bound different from lower bound?"},{answer:`Data Filtering: Identifying elements greater than a threshold in sorted datasets.
Search Queries: Finding the smallest item larger than a user-defined parameter (e.g., "next larger price").`,question:"How can this be applied to real-world scenarios?"}],interview_followup_questions:[{answer:`Use external storage or chunked processing if the array doesn\u2019t fit in memory.
Binary search works efficiently even for large datasets due to logarithmic complexity.`,question:"How would you optimize for very large arrays?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarysearch_logicbuilding",subcategory_name:"Logic Building",subcategory_slug:"logic-building",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"binarysearch_binarysearch_logicbuilding_searchinsertposition",problem_name:"Search insert position",problem_slug:"search-insert-position",problem_rank:1,misc:{tags:["Oracle","Morgan Stanley","IBM","Shopify","Salesforce","Airbnb","Rakuten","Western Digital","Alibaba","Zoho","Byju's","OYO Rooms","Teladoc Health","Intel","Cloudflare","JPMorgan Chase","Square","Roche","Riot Games","Etsy","MongoDB","Stripe","Robinhood","Optum","Splunk","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Use the binary search algorithm to narrow down the position of the target or where it should be inserted."},{hint:'"If the target is smaller than all elements, return 0 (insert at the beginning). If the target is larger than all elements, return the size of the array (insert at the end)."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The low pointer always points to the first index where the target could fit without disrupting the sorted order.",question:" Why return low as the insertion position?"},{answer:`In a sense, this is equivalent to finding the lower bound of the target.
However, here you\u2019re also explicitly checking whether the target exists in the array.`,question:"How is this different from finding the lower bound?"}],interview_followup_questions:[{answer:"The algorithm can be adapted for floating-point numbers by changing the comparison logic. Ensure proper precision handling to avoid errors.",question:"What happens if the target is a floating-point value?"},{answer:`If duplicates are allowed, the algorithm still works and finds the first occurrence where the target can fit (lower bound logic).
Example:
Input: nums = [1, 3, 3, 5], target = 3 \u2192 Output: 1.`,question:"What if the array contains duplicates?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_logicbuilding_floorandceilinsortedarray",problem_name:"Floor and Ceil in Sorted Array",problem_slug:"floor-and-ceil-in-sorted-array",problem_rank:2,misc:{tags:["Etsy","Lyft","Red Hat","GE Healthcare","KPMG","McKinsey & Company","Twilio","Chewy","Mastercard","American Express","Cloudflare","Nutanix","Wayfair","Ubisoft","Johnson & Johnson","PwC","Uber","Snowflake","Target","Ernst & Young","PayPal","Roblox","Zomato","Instacart","HashiCorp","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:'"Perform a binary search for x in the sorted array. During the search: If nums[mid]\u2264x, update the floor to nums[mid] and move right. If nums[mid]\u2265x, update the ceiling to nums[mid] and move left."'},{hint:"If x is smaller than the smallest element, the floor is \u22121. If x is larger than the largest element, the ceiling is \u22121."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`Binary search systematically narrows the range:
For the floor, you look for the largest element less than or equal to x.
For the ceiling, you look for the smallest element greater than or equal to x.`,question:"How does binary search naturally find the floor and ceiling?"}],interview_followup_questions:[{answer:"Identify the pivot point first. Then: Search for the floor and ceiling in the left and right sorted halves separately.",question:" What if the array is rotated?"},{answer:"Once the floor and ceiling are identified, use binary search to find the range of indices between them.",question:"How would you extend this to find all elements between the floor and ceiling?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_logicbuilding_firstandlastoccurrence",problem_name:"First and last occurrence",problem_slug:"first-and-last-occurrence",problem_rank:3,misc:{tags:["PayPal","Qualcomm","Zoho","Western Digital","Johnson & Johnson","Ernst & Young","Roblox","eBay","Walmart","Shopify","Deloitte","NVIDIA","Goldman Sachs","MongoDB","Etsy","Dropbox","Riot Games","Flipkart","Bain & Company","Freshworks","Boston Consulting Group","Philips Healthcare","IBM","Roche","Robinhood","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Fun Fact: This problem is essentially about range queries which are a very common task in database management systems and search engines. For instance, if you use the filter function in an e-commerce website to specify a price range for a product, you're effectively asking the database to perform an operation much like this problem. The database will search through its sorted data to find the starting and ending positions of all products that fall within your specified price range. So the next time you're shopping online, remember you're indirectly solving this problem!",hints:[{hint:'"Perform two separate binary searches: One to find the first occurrence of the target. Another to find the last occurrence of the target."'},{hint:'"To find the first occurrence, move the search to the left half even after finding the target. To find the last occurrence, move the search to the right half after finding the target."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`In a sorted array with duplicates:
The first binary search stops only when the leftmost occurrence of the target is found.
The second binary search ensures the rightmost occurrence is located by adjusting the search bounds appropriately.`,question:"How does the algorithm ensure correctness with duplicates?"}],interview_followup_questions:[{answer:`The count is simply: count=lastIndex\u2212firstIndex+1
This computation is direct and efficient once the first and last occurrences are identified.`,question:"How would you modify the algorithm to find the count of the target value in the array?"},{answer:`Yes:
For floating-point numbers, ensure proper handling of precision in comparisons.
For custom logic (e.g., case-insensitive string comparisons), adapt the binary search condition to fit the requirement.`,question:" Can this algorithm handle floating-point numbers or custom comparison logic?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_logicbuilding_searchinrotatedsortedarray-i",problem_name:"Search in rotated sorted array-I",problem_slug:"search-in-rotated-sorted-array-i",problem_rank:4,misc:{tags:["Deloitte","Square","Reddit","Roblox","MongoDB","Zynga","Teladoc Health","Ernst & Young","Nutanix","GE Healthcare","Western Digital","Medtronic","ARM","Snowflake","Cloudflare","Qualcomm","McKinsey & Company","IBM","Twilio","Chewy","Lyft","Seagate Technology","NVIDIA","Epic Games","Walmart","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Use binary search to locate the target value while considering the rotation. During each iteration, check if the target lies in the sorted half of the array."},{hint:'"Compare the mid element with the first and last elements to determine which half is sorted: If nums[mid] >= nums[low], the left half is sorted. If nums[mid] <= nums[high], the right half is sorted."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`Single-element array: Directly check if the element matches the target.
No rotation: Binary search works as usual because the array is sorted.
Target at the rotation point: The algorithm naturally handles this by detecting the sorted halves.
`,question:"How do we handle edge cases like small arrays or extreme rotations?"},{answer:"Linear search would work, but it\u2019s inefficient with O(n) complexity. By leveraging binary search, we reduce the time complexity to O(logn), which is critical for handling large datasets efficiently.",question:"Why not linear search?"}],interview_followup_questions:[{answer:`With duplicates, the sorted property may be unclear. For example, [2, 2, 2, 3, 1, 2]:
If nums[mid] == nums[low] == nums[high], skip duplicates by incrementing low or decrementing high.`,question:"What if duplicates are allowed in the array?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_logicbuilding_searchinrotatedsortedarray-ii",problem_name:"Search in rotated sorted array-II",problem_slug:"search-in-rotated-sorted-array-2",problem_rank:5,misc:{tags:["Robinhood","Twilio","Walmart","Wayfair","Unity Technologies","Intel","Mastercard","Bain & Company","HashiCorp","Nutanix","Goldman Sachs","Qualcomm","Epic Systems","Stripe","Etsy","McKinsey & Company","Databricks","ARM","HCL Technologies","Freshworks","MongoDB","Byju's","Riot Games","NVIDIA","GE Healthcare","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"In a rotated sorted array, at least one of the two halves is guaranteed to be sorted. Identify this sorted half by comparing nums[mid] with nums[low] and nums[high]. Use this information to decide where the target might lie and narrow down the search space."},{hint:"Duplicates complicate determining the sorted half. When nums[low] == nums[mid] == nums[high], you cannot deduce which half is sorted. In this case, increment low or decrement high to skip duplicates and continue the binary search."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`Yes, even with duplicates, you ensure termination by updating low and high correctly:
Increment low or decrement high when duplicates are encountered.
Always check nums[mid] for the target before proceeding to analyze the sorted halves.`,question:"Can we guarantee a termination condition with duplicates?"},{answer:"Binary search works because the rotation splits the array into two parts, at least one of which is sorted. By identifying the sorted segment during each step, you can confidently determine where the target might reside, halving the search space as you go.",question:"Why does binary search work for rotated arrays?"}],interview_followup_questions:[{answer:"If the array is unsorted but rotated, the binary search logic breaks. You\u2019d first need to sort the array (O(nlogn)) and then apply the standard binary search or rotated logic. This preprocessing step adds overhead.",question:"What changes if the array is not sorted but still rotated?"},{answer:"You can modify the algorithm to locate the smallest number greater than or equal to the lower bound and the largest number smaller than or equal to the upper bound. This would involve combining the rotated binary search logic with range queries.",question:"What if you need to find the range of numbers within certain bounds in the rotated array?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_logicbuilding_findminimuminrotatedsortedarray",problem_name:"Find minimum in Rotated Sorted Array",problem_slug:"find-minimum-in-rotated-sorted-array",problem_rank:6,misc:{tags:["Ernst & Young","Nutanix","Red Hat","Optum","HashiCorp","Philips Healthcare","DoorDash","Target","Ubisoft","Zomato","Airbnb","Reddit","KPMG","Morgan Stanley","OYO Rooms","Zynga","Snowflake","Databricks","IBM","Uber","Siemens Healthineers","Splunk","Shopify","American Express","Twilio","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"A rotated sorted array contains two sorted segments, with the rotation causing a discontinuity. The smallest element (minimum) is the pivot point where the rotation occurs. The minimum element is the only one smaller than its previous element (except at index 0, where it is compared to the last element)."},{hint:'"Compare the middle element (nums[mid]) with the rightmost element (nums[high]): If nums[mid] > nums[high], the minimum lies in the right half (low = mid + 1). If nums[mid] <= nums[high], the minimum lies in the left half (high = mid)."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"If the array is sorted and not rotated, the first element (nums[0]) is the minimum. This is detected in O(1) by checking if nums[low] <= nums[high] at the start of the binary search.",question:"What happens if the array is not rotated?"},{answer:`If nums[mid] > nums[high], the minimum cannot lie in the left half because all elements in the left half are greater than nums[mid]. Move low = mid + 1.
If nums[mid] <= nums[high], the minimum could lie in the left half, so adjust high = mid.`,question:"How is the search space reduced at each step?"}],interview_followup_questions:[{answer:"The algorithm remains the same, but instead of returning the element (nums[low]), return the index (low). This is particularly useful in applications like finding the rotation count.",question:"How would you find the index of the minimum element?"},{answer:`Check if nums[0] <= nums[N-1]:
If true, the array is sorted and not rotated.
If false, the array is rotated.`,question:"How would you detect if the array is rotated and not sorted?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_logicbuilding_findouthowmanytimesthearrayisrotated",problem_name:"Find out how many times the array is rotated",problem_slug:"find-out-how-many-times-the-array-is-rotated",problem_rank:7,misc:{tags:["PwC","Philips Healthcare","Airbnb","Byju's","HCL Technologies","ARM","Pinterest","Riot Games","Splunk","Goldman Sachs","Boston Consulting Group","Oracle","Docker","Johnson & Johnson","Siemens Healthineers","Nutanix","Roblox","Deloitte","Databricks","Intel","Zoho","Chewy","Epic Games","Unity Technologies","Salesforce","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"The rotation count is equivalent to the index of the smallest element (pivot) in the rotated sorted array."},{hint:'"Use binary search to locate the smallest element (pivot) efficiently: If nums[mid] > nums[high], the pivot lies in the right half. Update low = mid + 1. If nums[mid] <= nums[high], the pivot lies in the left half or is the middle element itself. Update high = mid."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"A right rotation shifts elements to the right, and the smallest element ends up at the pivot. Its index directly represents how many positions the array has been rotated.",question:"Why does the pivot index indicate the number of rotations?"},{answer:`Binary search leverages the fact that one half of the rotated array is always sorted:
If nums[mid] > nums[high], the rotation point is in the unsorted right half.
If nums[mid] <= nums[high], the rotation point lies in the left half, including the middle element.`,question:"How does binary search work in this context?"}],interview_followup_questions:[{answer:"The pivot is the smallest element in the array. The binary search steps remain the same, and the rotation count is simply the index of this pivot.",question:"How would you locate the pivot explicitly?"},{answer:`A left-rotated array can be treated similarly by modifying the rotation count:
For a left rotation, the rotation count is n\u2212pivotIndex, where n is the array size.`,question:"What if the array is left-rotated instead of right-rotated?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_logicbuilding_singleelementinsortedarray",problem_name:"Single element in sorted array",problem_slug:"single-element-in-sorted-array",problem_rank:8,misc:{tags:["McKinsey & Company","GE Healthcare","Roche","Bain & Company","Visa","OYO Rooms","Intel","Alibaba","Electronic Arts","HCL Technologies","Morgan Stanley","Rockstar Games","Bungie","Snowflake","Zoho","Twilio","Uber","Walmart","Salesforce","ARM","Dropbox","Flipkart","Broadcom","Zomato","Ubisoft","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"The array is sorted, which means duplicate numbers will appear consecutively. The single number will break this pattern of consecutive duplicates. Use this property to identify the single number efficiently."},{hint:'"Perform a binary search to locate the single number. At each step, check the pairing pattern: If nums[mid] == nums[mid + 1], the single number lies in the unsorted half beyond this pair. Otherwise, if nums[mid] == nums[mid - 1], the single number lies before this pair."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The minimum size of the array is 3, consisting of one single number and one pair. For example, [1, 2, 2] or [1, 1, 2].",question:"What is the minimum size of the array, and why?"},{answer:"If the single number is at the start (nums[0]) or end (nums[n-1]), the binary search will naturally identify it because no pairing is possible for these positions.",question:"What happens if the single number is at the start or end of the array?"}],interview_followup_questions:[{answer:"For an unsorted array, the optimal approach is to use the XOR operation. XOR has the property a\u2295a=0 and a\u22950=a. XOR all elements in the array to isolate the single number in O(n).",question:"How would you modify this approach for unsorted arrays?"},{answer:"If there are multiple single numbers, XOR won\u2019t work directly. Use a hash map to count occurrences of each element, then return the numbers that appear once.",question:"What if the array contains more than one single number?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarysearch_onanswers",subcategory_name:"On answers",subcategory_slug:"on-answers",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"binarysearch_binarysearch_onanswers_findsquarerootofanumber",problem_name:"Find square root of a number",problem_slug:"find-square-root-of-a-number",problem_rank:1,misc:{tags:["Salesforce","Nutanix","Johnson & Johnson","Oracle","Instacart","Riot Games","Texas Instruments","McKinsey & Company","Deloitte","Roblox","Wayfair","Red Hat","Splunk","IBM","Zomato","Freshworks","Unity Technologies","Bain & Company","Teladoc Health","Airbnb","Activision Blizzard","Goldman Sachs","Square","Epic Systems","PwC","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"The goal is to calculate the integer square root of n, which is the largest integer x such that x2\u2264n. This can be efficiently solved using binary search as the square root function is monotonic (increases steadily)."},{hint:'"Use binary search to find x between 0 and n. At each step, calculate the middle value (mid) and its square (mid^2): If mid^2 == n, you\u2019ve found the square root. If mid^2 < n, adjust low = mid + 1 to move right. If mid^2 > n, adjust high = mid - 1 to move left."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Instead of directly calculating mid^2, compare mid with n/mid. If mid > n / mid, mid^2 exceeds n, and you should move left. This ensures safe arithmetic even for large n.",question:"How do we avoid integer overflow when computing mid^2?"},{answer:"The binary search naturally finds the exact square root when mid^2 == n. The result is returned directly without additional steps.",question:"What happens if n is a perfect square?"}],interview_followup_questions:[{answer:"Use approximation techniques like Newton\u2019s method, which converges quickly and is well-suited for systems requiring rapid results.",question:"What if the function needs to work in real-time systems?"},{answer:`For floating-point numbers, extend the binary search to calculate the square root up to a desired precision (\u03F5): Continue the search until \u2223mid^2\u2212n\u2223<\u03F5.
Update low and high with smaller increments as the range narrows.`,question:"How would you compute the square root for floating-point numbers?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_onanswers_findnthrootofanumber",problem_name:"Find Nth root of a number",problem_slug:"find-nth-root-of-a-number",problem_rank:2,misc:{tags:["Swiggy","DoorDash","American Express","Morgan Stanley","Broadcom","Stripe","Qualcomm","Rockstar Games","Micron Technology","Riot Games","Splunk","Bungie","Pinterest","Philips Healthcare","Nutanix","Salesforce","PayPal","Visa","Lyft","Target","OYO Rooms","Epic Systems","Shopify","Goldman Sachs","McKinsey & Company","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"This concept is widely used in game development, 3D graphics and image manipulation software. It's a key part in calculating distances and generating effects such as fog or light falloff. Additionally, the problem comes into play in audio processing for generating specific tones or adjusting volume and pitch. This mathematical operation, finding the Nth root, is an integral part of many algorithmic solutions in software.",hints:[{hint:"The N-th root of M is a number X such that X^N=M. The goal is to find X, and if X is not an integer, return \u22121. This problem involves numerical precision and logical decision-making to determine if X is an integer."},{hint:'"Use binary search to find X in the range [1,M]: Compute mid^N at each step."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Binary search will terminate without finding mid^N=M. Return \u22121 in such cases, as the N-th root is not an integer.",question:"What happens if M is not a perfect N-th power?"},{answer:`Instead of directly calculating mid^N, compute mid^N iteratively:
Multiply mid^N times while checking if the result exceeds M. Stop early if overflow is detected.`,question:"How do we avoid integer overflow when calculating mid^N?"}],interview_followup_questions:[{answer:"For large M, calculate mid^N iteratively to prevent overflow. For large N, reduce the problem to smaller powers using modular arithmetic or logarithms (log(M)/N) to estimate the root.",question:"What if M and N are very large?"},{answer:"For matrices or tensors, compute the root element-wise using the same binary search logic. If the root must satisfy additional conditions (e.g., orthogonality), integrate those into the solution.",question:"How would you extend this to multi-dimensional data?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_onanswers_findthesmallestdivisor",problem_name:"Find the smallest divisor",problem_slug:"find-the-smallest-divisor",problem_rank:3,misc:{tags:["NVIDIA","Square","Byju's","Mastercard","Riot Games","DoorDash","Zynga","Dropbox","Pinterest","Swiggy","HCL Technologies","Epic Systems","Goldman Sachs","Rakuten","Cloudflare","KPMG","Broadcom","Unity Technologies","ARM","Zomato","Western Digital","Epic Games","eBay","PwC","Intel","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem plays a crucial part in video streaming services like Netflix, YouTube, or Twitch, where the system needs to dynamically adjust the quality of video (bitrate) based on network conditions. The total amount of data that can be sent (threshold) is fixed, and the task is to find the smallest denominator (lowest video quality) so that the sum of data (video chunks) stays under the threshold. By solving this problem, services can ensure smooth streaming experiences, without buffering, while taking full advantage of all available bandwidth.",hints:[{hint:"The task is to find the smallest positive integer divisor, d, such that the sum of ceil(nums[i]/d) across all elements of the array nums is less than or equal to a given threshold."},{hint:"The divisor lies in the range [1,max(nums)]. Use binary search to efficiently find the smallest d. For a midpoint mid, calculate the sum of ceil(nums[i]/mid)."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Instead of using ceil(nums[i]/d), compute (nums[i]+d\u22121)//d. This avoids floating-point arithmetic and directly calculates the rounded-up integer value.",question:"How does the rounding work for division?"},{answer:"If the threshold is larger than or equal to the sum of elements when divided by 1 (i.e., \u2211(nums)), the smallest divisor is 1, as no larger divisor is required.",question:"What happens if the threshold is very high?"}],interview_followup_questions:[{answer:"Reverse the binary search logic to prioritize larger divisors. Use the same sum calculation but adjust the bounds to find the maximum d that satisfies the condition.",question:"What if you need the largest divisor instead of the smallest?"},{answer:"Divide the array into chunks, calculate partial sums for each chunk, and combine them dynamically during the binary search. This reduces memory usage and ensures scalability.",question:"How would you optimize this for extremely large datasets?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_onanswers_kokoeatingbananas",problem_name:"Koko eating bananas",problem_slug:"koko-eating-bananas",problem_rank:4,misc:{tags:["Shopify","Chewy","NVIDIA","Deloitte","Cloudflare","Johnson & Johnson","Walmart","Ubisoft","Twilio","MongoDB","Intel","Nutanix","McKinsey & Company","Etsy","Ernst & Young","JPMorgan Chase","Medtronic","Zoho","Morgan Stanley","Texas Instruments","GE Healthcare","Lyft","AMD","DoorDash","Mastercard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is based on Binary Search, an algorithm which is extensively used in real world applications. It presents a system with limited resources (the monkey and time) and seeks to optimize consumption (bananas). This is a common scenario in software design. For example, when dealing with job scheduling in Computer Systems, where there are 'n' number of tasks and a limited processing power, system designers have to allocate resources in a way to get minimum execution time. Similarly, in Databases, index searching for a particular record is optimized using Binary Search. Which is the same concept of finding the minimum (or optimal) number to improve efficiency.",hints:[{hint:"The monkey must eat at least k bananas per hour to finish all the bananas in h hours. The task is to determine the smallest k that satisfies this condition. Eating k bananas per hour affects how quickly piles are depleted, and k must balance speed and efficiency."},{hint:'"The range for k is between 1 and max(nums). Perform binary search to find the smallest k: For each k, calculate the total hours required to eat all bananas."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"If the hours exceed h for a given k, k is too small, and the monkey needs to eat faster. Adjust the binary search range by setting low=mid+1.",question:"What if the total hours required exceeds h?"},{answer:`Use (nums[i]+k\u22121)//k instead of floating-point division to avoid precision issues and maintain integer operations. This ensures accuracy even with large inputs.
`,question:"How do we handle very large values of nums[i] or h?"}],interview_followup_questions:[{answer:"If the monkey\u2019s eating rate changes per hour (e.g., k depends on the hour), use a dynamic approach to calculate the minimum k for each hour, adjusting the binary search to consider these variations.",question:"How would you extend this for varying hourly capacities?"},{answer:"For dynamic or replenishing piles, track the rate of replenishment and modify the binary search to account for the changing size of nums[i] at each hour.",question:"What if the piles of bananas can be replenished?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_onanswers_minimumdaystomakembouquets",problem_name:"Minimum days to make M bouquets",problem_slug:"minimum-days-to-make-m-bouquets",problem_rank:5,misc:{tags:["Deloitte","Johnson & Johnson","Wayfair","Walmart","Medtronic","Epic Games","Siemens Healthineers","Twilio","Robinhood","Rakuten","Intel","Philips Healthcare","Flipkart","Chewy","Lyft","Micron Technology","Zomato","Roblox","Optum","Qualcomm","GE Healthcare","DoorDash","Zoho","eBay","OYO Rooms","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem, at its essence, involves optimal scheduling and resource allocation - concepts critical to many areas in software development. An interesting real-world application is found in distributed computing or microservices architecture, where you need to manage the execution time and ordering of numerous independent tasks (roses blooming) to meet certain requirements (making bouquets). Similarly, this problem can reflect challenges in project management software, where tasks have specific start times (bloom days), and certain tasks have to be completed together (bouquet making) within specified time frames.",hints:[{hint:'"Use binary search to determine the smallest d within the range [1,max(nums)]. For each mid-point d, simulate the blooming process to check if at least m bouquets can be formed."'},{hint:"On a given day d, a rose is considered bloomed if nums[i]\u2264d. Traverse the array and count adjacent bloomed roses. If k adjacent roses are found, form one bouquet and reset the count. Repeat until m bouquets are formed or the array is exhausted."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Use a single pass through the array on day d:
Count consecutive roses that bloom on or before d.
Reset the count whenever nums[i]>d.
Stop early if m bouquets are formed, optimizing the simulation.`,question:"How is bouquet feasibility checked efficiently?"},{answer:"Testing each day from 1 to max(nums) linearly has O(n\u22C5max(nums)) complexity, which is inefficient. Binary search narrows down the range logarithmically, significantly reducing the number of simulations.",question:"Why use binary search to find the minimum days?"}],interview_followup_questions:[{answer:"For non-adjacent bouquets, modify the simulation to track individual roses that bloom on or before d. Count all such roses and check if their total is sufficient to form m\u22C5k bouquets.",question:"How would you handle non-adjacent bouquets?"},{answer:"Model blooming as a graph, where edges represent dependencies. Use topological sorting to calculate effective blooming times and then apply the same binary search logic.",question:"What if the roses bloom asynchronously, with delays or dependencies?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarysearch_faqs",subcategory_name:"FAQs",subcategory_slug:"faqs",subcategory_rank:4,subcategory_type:"study",problems:[{problem_id:"binarysearch_binarysearch_faqs_aggressivecows",problem_name:"Aggressive Cows",problem_slug:"aggressive-cows",problem_rank:0,misc:{tags:["IBM","Square","Texas Instruments","Morgan Stanley","MongoDB","Visa","Roche","Rockstar Games","Bungie","AMD","Walmart","Lyft","Broadcom","Oracle","Activision Blizzard","Western Digital","Freshworks","Epic Games","Splunk","Nutanix","Instacart","Reddit","Twilio","Airbnb","Goldman Sachs","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem and its underlying concept have practical applications in wireless communication, specifically in cell tower placement to provide maximum coverage with minimum interference. Given a certain number of towers (cows), the goal is to place them at specific locations (stalls) such that the minimum distance (signal interference) between any two towers is as large as possible, aiming for maximum signal strength and coverage.",hints:[{hint:"Start by sorting the positions of the stalls in ascending order. This ensures the stalls are in logical order for placing cows, simplifying the distance calculation."},{hint:'"Use binary search to find the maximum possible minimum distance. To check if k cows can be placed with a minimum distance of mid. Place the first cow in the first stall. For each subsequent stall, place a cow only if the distance from the last placed cow is \u2265mid. Count the total cows placed; if \u2265k, mid is feasible."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Sorting ensures the stalls are in sequential order, which is necessary to calculate the distance between adjacent stalls. Without sorting, the distance calculations would be incorrect, making placement infeasible.",question:"Why sort the stalls?"},{answer:"The feasibility function checks if it is possible to place k cows such that the minimum distance between any two cows is mid. This involves greedily placing cows in the stalls and counting how many can be placed.",question:"What is the feasibility function?"}],interview_followup_questions:[{answer:"If some stalls are unavailable, exclude them from the sorted list. Adjust the feasibility function to skip unavailable stalls during placement.",question:"What if there are constraints on stall availability?"},{answer:"Use a data structure like a balanced binary search tree to maintain the sorted order of stall positions dynamically. Update the tree and re-evaluate the feasibility function as stalls are added or removed.",question:"How would you handle dynamic updates to the stalls?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_faqs_bookallocationproblem",problem_name:"Book Allocation Problem",problem_slug:"book-allocation-problem",problem_rank:1,misc:{tags:["Nutanix","HashiCorp","Airbnb","Ubisoft","Wayfair","JPMorgan Chase","Red Hat","Micron Technology","Unity Technologies","Alibaba","Oracle","Zomato","Roche","Zynga","Reddit","Cloudflare","Epic Systems","Stripe","Walmart","Broadcom","Texas Instruments","Square","Medtronic","ARM","eBay","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem statement emphasizes the concept of load balancing, which is a crucial aspect of modern software infrastructure. In real-world scenarios, this could be applied in designing a system that evenly distributes network or computational tasks across a network of servers. As in this problem, we aim to minimize the maximum load handled by any single server, enhancing efficiency and preventing overloading. Similarly, content delivery networks, cloud-based services, and parallel computing often use these principles to optimize resources.",hints:[{hint:"Perform binary search to find the smallest feasible value of the maximum pages a student can be allocated."},{hint:'"To check if a given maximum mid pages is feasible: Traverse the array and allocate books to students while keeping the sum of pages for each student \u2264mid. If more than m students are required, mid is not feasible, and a higher maximum needs to be considered. Otherwise, mid is feasible."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Start with the first student and a running sum of pages. Add books until the sum exceeds mid, then allocate a new student. If the number of students exceeds m, return false. Otherwise, return true.",question:"How is the feasibility function implemented?"},{answer:`The lower bound max(nums) ensures that no student is assigned less than the largest book.
The upper bound sum(nums) represents the scenario where one student gets all the books.`,question:"What is the significance of max(nums) and sum(nums) as bounds?"}],interview_followup_questions:[{answer:"Incorporate the reading capacities into the feasibility function by limiting the maximum pages each student can handle. Adjust the binary search accordingly to account for these constraints.",question:"What if the students have varying reading capacities?"},{answer:"For dynamic updates, maintain a prefix sum array of book pages. Use this to quickly calculate the total pages in any contiguous subarray, speeding up feasibility checks.",question:"What if the number of books or students changes dynamically?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_faqs_findpeakelement",problem_name:"Find peak element",problem_slug:"find-peak-element",problem_rank:2,misc:{tags:["Epic Games","Dropbox","PwC","Square","Nutanix","Ubisoft","Alibaba","Philips Healthcare","Broadcom","Intel","Oracle","Chewy","Docker","Mastercard","IBM","Optum","Morgan Stanley","Epic Systems","Bloomberg","Seagate Technology","Roblox","Qualcomm","GE Healthcare","Airbnb","Flipkart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This type of problem or its underlying concept is commonly utilized in Data Analysis and Financial sectors. For example, in Stock Market Analysis, peak detection is critical in identifying patterns and trends, especially in time series data. When visualizing stock prices, a "peak" would represent a maximum point (local maxima) before prices drop, or in other words, an optimal sell point. Thus, efficient algorithms for identifying "peaks" from array-like data are crucial for decision-making processes in these areas. This gives a real-world importance to such a seemingly theoretical problem.',hints:[{hint:"You can find a peak in O(logn) using binary search"},{hint:'"If an element is not a peak, at least one of its neighbors is greater. This ensures that moving toward the greater neighbor will lead to a peak. The problem guarantees at least one peak exists, so binary search always converges to a peak."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If the middle element is at the start (arr[0]) or end (arr[n\u22121]) of the array, compare it with its only neighbor. Binary search adapts to these cases seamlessly.",question:"How does the algorithm handle edge indices?"},{answer:"Peaks are defined based on strict inequality, so duplicates may break the guarantee of finding a peak at some points. However, the algorithm will still find a valid peak if one exists.",question:"What happens if the array has duplicates?"}],interview_followup_questions:[{answer:"Use a linear scan to check each element and its neighbors. Record all indices where arr[i\u22121]<arr[i]>arr[i+1]. This increases the complexity to O(n).",question:"How would you modify the algorithm to find all peaks?"},{answer:"Find all peaks and sort them by their values. This is useful in applications like optimization or ranking tasks where the relative height of peaks matters.",question:"What if the peaks need to be ranked by their values?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_faqs_medianof2sortedarrays",problem_name:"Median of 2 sorted arrays",problem_slug:"median-of-2-sorted-arrays",problem_rank:3,misc:{tags:["Square","Visa","Target","American Express","Lyft","Bungie","Micron Technology","Roche","Ubisoft","Alibaba","Snowflake","Ernst & Young","Riot Games","Reddit","IBM","Splunk","Pinterest","Etsy","Unity Technologies","Salesforce","KPMG","Western Digital","Stripe","Zomato","Walmart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: In real-world software applications, finding the median of two sorted arrays is commonly used in statistical computations and data analysis. In particular, it is heavily used in big data processing where two different data sets need to be combined and subsequently analyzed, such as combining user behavior data from different servers or databases. Furthermore, the concept behind this problem is leveraged in creating recommendation engines where statistical calculations play an imperative role in predicting user preferences based on different datasets. So, next time when Netflix recommends you a movie, remember, the solutions of such programming problems might be working behind the scenes!",hints:[{hint:"Instead of merging the arrays fully, focus only on locating the required middle element(s)."},{hint:"Divide both arrays into two halves such that the left halves contain the smaller elements and the right halves contain the larger elements."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Binary search works regardless of the sizes of the arrays. The smaller array is chosen for the binary search to ensure efficiency, reducing the time complexity to O(log(min(m,n))).",question:"What if the arrays have different sizes?"},{answer:`Special conditions handle scenarios like:
partitionX=0: All elements in the left partition come from arr2.
partitionX=m: All elements in the right partition come from arr2.`,question:"How does the algorithm ensure correctness for edge cases?"}],interview_followup_questions:[{answer:"For k sorted arrays, use a priority queue (min-heap) to merge them while keeping track of their elements. After merging, compute the median in O(klogk+n).",question:"Can this approach be extended to more than two arrays?"},{answer:"The algorithm handles duplicates naturally. The median is determined based on the partitioned halves, irrespective of repeated values.",question:"What if the arrays contain duplicates?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_faqs_minimisemaxdistancetogasstations",problem_name:"Minimise max distance to gas stations",problem_slug:"minimise-max-distance-to-gas-stations",problem_rank:4,misc:{tags:["Rakuten","Alibaba","Broadcom","Zynga","Shopify","Docker","MongoDB","Electronic Arts","Chewy","American Express","Zomato","Deloitte","Splunk","Snowflake","Epic Games","Seagate Technology","HCL Technologies","Activision Blizzard","Epic Systems","Intel","NVIDIA","Robinhood","Oracle","Micron Technology","JPMorgan Chase","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem embodies the concept of binary search, which can be used in real-life application route planning software. Tools like Google Maps, Waze or Apple Maps often have to solve similar problems when determining optimal locations for refueling or rest stops during a trip. The goal is to minimize the longest distance between stops, ensuring that the user's gas tank doesn't run out. Therefore, developers of such apps need to design and implement efficient algorithms to provide the best service to their users.",hints:[{hint:"For a given dist, calculate the number of new gas stations required to ensure that no gap exceeds dist. Sum the required gas stations across all gaps. If the total gas stations required is less than or equal to k, the given dist is feasible."},{hint:'"If dist is feasible (i.e., the required gas stations \u2264k), search for a smaller dist (high=mid). If dist is not feasible, search for a larger dist (low=mid+\u03F5), where \u03F5 ensures precision for floating-point values."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Since gas stations can be placed at non-integer positions, floating-point arithmetic is used. The binary search stops when the range of possible dist values is smaller than a specified precision (\u03F5).",question:"How does floating-point precision affect the solution?"},{answer:`If there is only one gas station (n=1), the gap is undefined. Any additional gas stations can be placed arbitrarily, making dist depend only on their positions.
`,question:"What if the array has fewer than two gas stations?"}],interview_followup_questions:[{answer:"If new stations must be placed at predefined positions (e.g., integer locations), modify the feasibility check to only consider those positions and adjust the binary search accordingly.",question:"What if gas stations cannot be placed at arbitrary positions?"},{answer:"For dynamic updates, maintain a sorted list of gas station positions. Use efficient data structures like balanced binary search trees to dynamically insert or remove stations and recompute dist.",question:"How would you handle dynamic updates (e.g., removing stations)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_faqs_kthelementof2sortedarrays",problem_name:"Kth element of 2 sorted arrays",problem_slug:"kth-element-of-2-sorted-arrays",problem_rank:5,misc:{tags:["Visa","Flipkart","Unity Technologies","Etsy","DoorDash","eBay","Wayfair","Stripe","Walmart","Western Digital","OYO Rooms","Ernst & Young","Red Hat","ARM","Electronic Arts","Zomato","Uber","Nutanix","PwC","Alibaba","Epic Games","Docker","Rockstar Games","Epic Systems","Robinhood","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One fun fact related to this problem is its use in database management systems, particularly in operations such as merge and join. Companies that deal with large amounts of data (like Google, Facebook, or Amazon) often need to perform operations on sorted data from different sources or databases. By optimizing solutions to problems like this, they can ensure more efficient data retrieval, impacting overall system performance.",hints:[{hint:'"At each step, calculate the partition indices for both arrays: Let i be the number of elements taken from array a, so j=k\u2212i elements are taken from array b."'},{hint:"Ensure that the largest element in the left half is less than or equal to the smallest element in the right half. If valid, the k-th element is the maximum of the last element in the left half"}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Merging the arrays requires O(m+n) time and space. The binary search approach avoids the full merge and works in O(log(min(m,n))), which is significantly faster and more efficient.",question:"Why not merge the arrays to find the k-th element?"}],interview_followup_questions:[{answer:`For k-th element across multiple sorted arrays:
Use a min-heap to track the smallest elements from each array. Extract k-1 elements from the heap to find the k-th smallest.
Complexity: O(k\u22C5log(number\xA0of\xA0arrays)).`,question:"How would you extend this to more than two arrays?"},{answer:"If the arrays are unsorted, sort them first (O(mlogm+nlogn)), then apply the same binary search logic. Sorting adds preprocessing overhead but ensures correctness.",question:"What if the arrays are unsorted?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_faqs_splitarray-largestsum",problem_name:"Split array - largest sum",problem_slug:"split-array---largest-sum",problem_rank:6,misc:{tags:["Siemens Healthineers","Splunk","Airbnb","Optum","Ernst & Young","Robinhood","Reddit","Seagate Technology","Roche","Rockstar Games","Alibaba","AMD","Walmart","MongoDB","Rakuten","Qualcomm","GE Healthcare","Etsy","Deloitte","Electronic Arts","IBM","Epic Games","Broadcom","NVIDIA","Freshworks","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem reflects a practical problem in load balancing concept in distributed computing. A common task in managing a distributed system is distributing workload evenly across machines. This is a form of the problem where each machine is a subarray and the load is represented by the sum of the elements in the subarray. For optimum load balancing, the goal is to minimize the largest sum across all machines. This is necessary to ensure no single machine is overwhelmed with too much work while others are idle, thereby maximizing system efficiency and performance.",hints:[{hint:"Use binary search to find the smallest possible value of the maximum subarray sum."},{hint:'"If mid is feasible (subarrays can be formed with a maximum sum \u2264mid), search for a smaller maximum sum (high=mid). If mid is not feasible, search for a larger maximum sum (low=mid+1)."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Testing all possible splits is computationally expensive (O(2^n)). Binary search narrows the range of possible sums, reducing the complexity to O(n\u22C5log(sum(a)\u2212max(a))).",question:"Why use binary search to minimize the largest sum?"},{answer:`Traverse the array and form subarrays:
Add elements to the current subarray until adding another element would exceed mid.
Start a new subarray and increment the subarray count.
If the subarray count exceeds k, mid is not feasible.`,question:"How is the feasibility of mid checked?"}],interview_followup_questions:[{answer:"For dynamic scenarios, maintain a prefix sum array to quickly recompute sums. Apply the binary search logic on the updated prefix sum.",question:"Can this approach handle dynamic updates to the array?"},{answer:"Modify the feasibility check to account for the maximum allowed subarray length. Ensure that the number of elements in each subarray does not exceed the constraint during the traversal.",question:"How would you handle additional constraints, like maximum subarray length?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarysearch_2darrays",subcategory_name:"2D Arrays",subcategory_slug:"2d-arrays",subcategory_rank:5,subcategory_type:"study",problems:[{problem_id:"binarysearch_binarysearch_2darrays_findrowwithmaximum1's",problem_name:"Find row with maximum 1's",problem_slug:"find-row-with-maximum-1's",problem_rank:1,misc:{tags:["Alibaba","JPMorgan Chase","PwC","Ernst & Young","Roblox","Zoho","Philips Healthcare","Salesforce","Robinhood","Uber","GE Healthcare","Visa","ARM","Cloudflare","Wayfair","Square","Riot Games","Epic Games","DoorDash","Optum","Intel","Epic Systems","McKinsey & Company","Docker","Bloomberg","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One real-world application of this problem can be found in Image Processing. Notably, in the case of binary images, which consists solely of 1s (indicating white pixels) and 0s (indicating black pixels). By finding the row with the most white pixels (1s), certain characteristics of the image can be determined, such as the location of an object within the image. This concept is at the heart of many computer vision tasks that form the basis for features like facial recognition in apps like Facebook and Snapchat.",hints:[{hint:'"Since rows are sorted, the first 1 in a row determines the count of 1s. If a row contains n columns and the first 1 appears at index j, then the count of 1s in that row is n\u2212j."'},{hint:"For each row, use binary search to find the index of the first 1. Keep track of the row with the maximum number of 1s as you iterate through the grid."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Counting 1s in each row requires O(n\u22C5m), where n is the number of rows and m is the number of columns. By leveraging sorting properties, you can reduce the complexity.",question:"Why not just count the 1s in each row directly?"},{answer:"If multiple rows have the same number of 1s, return the smallest row index. Both binary search and column traversal naturally ensure this.",question:"What happens if all rows have the same number of 1s?"}],interview_followup_questions:[{answer:`If rows are unsorted, sort each row first (O(n\u22C5mlogm)) and then apply the same logic.
Alternatively, scan each row to count 1s directly, which takes O(n\u22C5m).`,question:"What if the grid is not sorted?"},{answer:"For higher-dimensional grids (e.g., 3D matrices), flatten the grid along one dimension (e.g., rows or columns) and apply the same logic.",question:"Can this logic extend to multidimensional grids?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_2darrays_searchina2dmatrix",problem_name:"Search in a 2D matrix",problem_slug:"search-in-a-2d-matrix",problem_rank:2,misc:{tags:["Pinterest","Square","Docker","Airbnb","Bloomberg","Ernst & Young","Robinhood","Epic Games","Mastercard","IBM","American Express","McKinsey & Company","Dropbox","HCL Technologies","Lyft","Chewy","Intel","PayPal","Medtronic","Seagate Technology","Ubisoft","Freshworks","ARM","Flipkart","Siemens Healthineers","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is essentially a form of sorted matrix search, a concept widely applied in database querying systems and search engines. When handling large volumes of data arranged in a sorted format (like timestamps/logs), efficient searching algorithms are critical for performance. Applications like Google, where millions of search queries are performed each second, need to effectively implement algorithms similar to this problem in their infrastructure. These systems frequently use multi-dimensional arrays (matrices) for quicker access and traversal, hence the significance of such problems.",hints:[{hint:"Treat the matrix as a 1D array with indices ranging from 0 to m\xD7n\u22121, where m is the number of rows and n is the number of columns."},{hint:"Map the 1D index mid to a 2D position using: row=mid/n, col=mid%n"}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Treating the matrix as a 1D array enables a single binary search over the entire dataset, reducing complexity from O(m\u22C5logn) to O(log(m\u22C5n)).",question:"Why treat the matrix as a virtual 1D array?"},{answer:"The algorithm works seamlessly with duplicates. It returns True for the first occurrence of the target encountered during the search.",question:"How does this approach handle duplicates?"}],interview_followup_questions:[{answer:"Modify the algorithm to return the 2D index of the target (row,col) when found, or \u22121 if the target does not exist.",question:"What if the target needs to be located instead of just checking its presence?"},{answer:`For higher-dimensional arrays:
Flatten the array into a 1D structure and apply binary search.
Use modular arithmetic to map 1D indices to multi-dimensional coordinates.`,question:"Can this approach be extended to 3D or higher-dimensional arrays?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_2darrays_searchin2dmatrix-ii",problem_name:"Search in 2D matrix - II",problem_slug:"search-in-2d-matrix-ii",problem_rank:3,misc:{tags:["Texas Instruments","Shopify","GE Healthcare","Medtronic","Nutanix","Optum","Freshworks","Oracle","HCL Technologies","Unity Technologies","Chewy","Cerner","Etsy","Riot Games","Deloitte","Instacart","Splunk","Flipkart","Rakuten","Dropbox","Philips Healthcare","Bain & Company","Zynga","Target","Red Hat","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is at the heart of many search engines, like Google Maps or Yelp, where a ton of geospatial data exists with specific sorting around latitude (rows) and longitude (columns). The restaurants, shops, or other points of interests are looked up efficiently, similar to searching for a target in a 2D matrix. Adopting a 2D array matrix search optimization like this can significantly speed up the search and improve the user interaction experience.",hints:[{hint:"Start at the top-right corner as it provides a vantage point: Moving left reduces the value. Moving down increases the value."},{hint:"Perform binary search on each row to find the target. If the target may be present in multiple rows, narrow the search space by limiting to rows where row[0]\u2264target\u2264row[n\u22121]."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Starting at the top-right corner simplifies the search logic:
You can directly move left or down based on comparisons.
Other corners (e.g., bottom-left) also work but reverse the movement logic.`,question:"Why use the top-right corner for the search?"},{answer:"Yes, duplicates do not affect the algorithm because the search is based on comparisons with the target, not the uniqueness of values.",question:"Can this approach handle duplicate values in the matrix?"}],interview_followup_questions:[{answer:`Keep track of the current candidate for the smallest element larger than the target while moving through the matrix.
Use a modified version of the search logic to update the candidate whenever a larger element is encountered.`,question:"How would you find the smallest element larger than the target?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_2darrays_findpeakelement-dup",problem_name:"Find Peak Element",problem_slug:"find-peak-element-ii",problem_rank:4,misc:{tags:["Zynga","Target","American Express","Mastercard","Snowflake","Zoho","MongoDB","Goldman Sachs","Byju's","Nutanix","Optum","Rakuten","Electronic Arts","KPMG","HCL Technologies","Deloitte","Rockstar Games","Roche","Bungie","Ubisoft","Bain & Company","Red Hat","Riot Games","Reddit","Freshworks","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem statement to find a peak element in a 2D grid can be seen as a core concept behind many terrain mapping systems in software like geographic information systems (GIS). In these scenarios, different altitudes can be represented as different values in the matrix, a 'peak' would represent the highest point in surrounding region (like a hill or mountain). Algorithms for finding such peak elements are crucial when it comes to features like terrain visualization, path planning or shortest path computations in uneven landscapes.",hints:[{hint:"For a given column or row, find the global maximum and compare it with its adjacent elements in the matrix."},{hint:'"Start by selecting the middle column (mid) of the matrix. Find the row index of the maximum element in that column. Compare this element with its left and right neighbors: If it is greater than its neighbors, it is a peak. If a neighbor is greater, move to the left or right half of the columns based on the larger neighbor and repeat the process."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Traverse the column or row once to find the index of the largest element (O(n) or O(m)), which is much faster than scanning the entire matrix.",question:"How is the global maximum in a column or row found efficiently?"},{answer:"The outer perimeter of \u22121 ensures that any element on the matrix boundary can be a peak if it is larger than its neighbors.",question:"What if the peak lies at the boundary of the matrix?"}],interview_followup_questions:[{answer:"Modify the comparison condition to include equality. The algorithm remains the same, but more elements may qualify as peaks.",question:"How would you handle non-strict peaks (i.e., \u2265 neighbors)?"},{answer:"A brute-force approach iterating over all elements is required. However, for large matrices, you can parallelize this computation or use divide-and-conquer techniques to find peaks in chunks.",question:"How would you find all peaks in the matrix?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_2darrays_matrixmedian",problem_name:"Matrix Median",problem_slug:"matrix-median",problem_rank:5,misc:{tags:["Optum","Wayfair","Riot Games","Mastercard","Electronic Arts","Ernst & Young","Docker","McKinsey & Company","Zynga","Micron Technology","IBM","Zoho","Roche","Western Digital","Etsy","eBay","NVIDIA","Philips Healthcare","Twilio","PayPal","Boston Consulting Group","Dropbox","Square","Rakuten","Bloomberg","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"In the field of image processing and computer graphics, a similar problem is frequently encountered. Pixels of an image are typically represented as a 2D matrix. Operations like median filtering, which involves finding the median of a submatrix or neighborhood of pixels, are applied to remove 'salt and pepper' noise from images while keeping the edges intact. Hence, understanding how to efficiently compute the median of a 2D matrix is crucial in these areas.",hints:[{hint:"Adjust the binary search range based on whether the count is greater or less than the desired position of the median."},{hint:'"Since each row is sorted, count the number of elements \u2264mid efficiently for each row using binary search (O(logm) per row). Sum the counts for all rows to get the total number of elements \u2264 mid."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Use binary search for each row to count elements \u2264mid.
For a sorted row, the count is the index of the first element >mid, which can be found in O(logm).`,question:"How do we count elements \u2264mid efficiently?"},{answer:"For matrices with variable row lengths, ensure that binary search skips empty rows and counts only valid elements. The logic remains unchanged.",question:"What if the matrix has uneven row lengths?"}],interview_followup_questions:[{answer:"Combine all matrices and find the median using a priority queue (min-heap) to maintain the smallest k elements while iterating through the rows.",question:"What if we need the median of multiple matrices?"},{answer:"Maintain a streaming median using two heaps (min-heap and max-heap) to balance elements dynamically as new rows arrive.",question:"What if the median needs to be computed in real-time?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarysearch_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:6,subcategory_type:"contest",problems:[{problem_id:"binarysearch_binarysearch_contest_cleaningwindows",problem_name:"Cleaning Windows",problem_slug:"cleaning-windows",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_contest_neighbourswithinkdistance",problem_name:"Neighbours within k distance",problem_slug:"neighbours-within-k-distance",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearch_binarysearch_contest_z-score",problem_name:"Z-Score",problem_slug:"z-score",problem_rank:3,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"recursion",category_name:"Recursion",category_slug:"recursion",category_rank:5,subcategories:[{subcategory_id:"recursion_implementation",subcategory_name:"Implementation Problems",subcategory_slug:"implementation-problems",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"recursion_recursion_implementation_pow(x,n)",problem_name:"Pow(x,n)",problem_slug:"pow(x,n)",problem_rank:1,misc:{tags:["Shopify","Siemens Healthineers","PwC","Ubisoft","Bloomberg","Zynga","Cloudflare","Deloitte","GE Healthcare","Philips Healthcare","Goldman Sachs","Robinhood","Zomato","Roche","Medtronic","Chewy","Western Digital","Cerner","Salesforce","Etsy","Databricks","Square","DoorDash","Morgan Stanley","Splunk","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"In Google's search algorithm, the concept of power function comes into play. This algorithm named PageRank, uses power iteration methodology to calculate the ranks of pages. The basic idea is to count the number and quality of links to a page to determine a rough estimate of how important the page is. The underlying assumption is that more important pages are likely to receive more links from other websites. Thus, a mathematically defined multiple number of iterations (x raised to n) helps in providing more precise page rankings.",hints:[{hint:"Use Exponentiation by Squaring, which reduces the time complexity to O(logn)"},{hint:'"Iterative: Avoids stack overflow and is more memory-efficient (O(1) space). Recursive: Cleaner and simpler code, but uses O(logn) space due to recursion."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"For negative n, the result is 1/x^\u2212n. Compute x\u2212n as if n were positive, then take the reciprocal.",question:"What happens if n<0?"},{answer:`Iterative implementation uses constant space (O(1)) and avoids stack overflow for large n. This makes it more robust for competitive programming scenarios.
`,question:"Why is iterative implementation preferred in competitive programming?"}],interview_followup_questions:[{answer:`Use the formula ((amodm)\u22C5(bmodm))modm at each step to keep intermediate results within bounds.
Modular exponentiation is widely used in cryptography and number theory.`,question:"How would you modify this algorithm for modular exponentiation ((x^n)modm)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_implementation_generateparanthesis",problem_name:"Generate Paranthesis",problem_slug:"generate-paranthesis",problem_rank:2,misc:{tags:["Reddit","Texas Instruments","DoorDash","Lyft","Philips Healthcare","PayPal","Splunk","Rakuten","Zomato","Etsy","Walmart","American Express","Flipkart","Stripe","KPMG","Siemens Healthineers","Zoho","Intel","Uber","Epic Systems","Unity Technologies","Boston Consulting Group","Bungie","Cerner","Freshworks","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Fun Fact: The concept behind well-formed parentheses is key in developing various software tools, especially in language parsing libraries and compilers. Programmers often deal with nested structures like functions, loops, and conditionals in coding, which are represented using parentheses, braces, etc. The formation or validation of these correctly structured parentheses and other symbols is of utmost importance for the correct interpretation of the code. Similarly, tools for checking the validity of XML or JSON also use this concept to ensure the correct pairing and nesting of tags and braces.",hints:[{hint:"Start with an empty string and keep adding ( or ) recursively. If the string has 2\xD7n characters, add it to the result."},{hint:"Use a backtracking approach where you explore all possibilities and backtrack when the current combination is invalid."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`Use two counters to track the number of ( and ) added:
Add ( only if ( count < n.
Add ) only if ) count < ( count.`,question:"How do you ensure that the combinations are valid?"},{answer:"The base case is when the length of the current combination reaches 2\xD7n. At this point, the combination is added to the result list.",question:"What is the base case for recursion?"}],interview_followup_questions:[{answer:"Yes, use a stack to simulate the backtracking process. Push intermediate states onto the stack and pop them as you explore combinations.",question:"Can this problem be solved iteratively instead of recursively?"},{answer:"Modify the algorithm to handle multiple types of brackets. Track counts for each type separately and ensure valid nesting.",question:"How would you extend this for other types of brackets (e.g., {}, [])?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_implementation_powerset",problem_name:"Power Set",problem_slug:"power-set",problem_rank:3,misc:{tags:["Wayfair","Dropbox","Red Hat","Swiggy","Bain & Company","Roche","Zynga","Nutanix","Morgan Stanley","Freshworks","Visa","MongoDB","Seagate Technology","Bloomberg","Bungie","Optum","Boston Consulting Group","Micron Technology","Splunk","HCL Technologies","Activision Blizzard","DoorDash","Philips Healthcare","Riot Games","JPMorgan Chase","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"The problem of finding all possible subsets from a set, also known as the power set, is an important concept in many areas of software development. In database technologies, such as SQL, this concept is used in designing queries that require combinations of data, such as generating all combinations of products that can be bundled together. In Machine Learning, power sets are used in feature selection, where combinations of different features are tested to see which set gives the best predictive accuracy. Meanwhile in Software Testing, generating all possible subsets of a feature set aids in creating exhaustive test cases which helps find potential bugs or issues.",hints:[{hint:"Use recursion to build subsets by deciding for each element whether to include it in the current subset."},{hint:'"At each recursive step: Add the current subset to the result. Recursively add subsets including the next element."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The problem guarantees that nums contains unique elements, so duplicates will not arise during subset generation.",question:"How do you ensure no duplicates are included?"},{answer:"The order of elements in subsets follows the input array's order. If specific ordering is required, sort the array before generating subsets.",question:"How do subsets handle ordering?"}],interview_followup_questions:[{answer:"Use a backtracking approach with a constraint that the subset's size equals k.",question:"How would you modify this to generate subsets of a fixed size k?"},{answer:"Sort the array first, then skip duplicate elements during subset generation to avoid redundant subsets. This ensures unique combinations.",question:"What if duplicates are allowed in the input array?"},{answer:"Represent subsets using binary strings, where each bit indicates whether an element is included. This is useful in optimization problems where subsets must be encoded compactly.",question:"What are alternative representations of subsets?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"recursion_subsequencepatternproblems",subcategory_name:"Subsequence Pattern Problems",subcategory_slug:"subsequence-pattern-problems",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"recursion_recursion_subsequencepatternproblems_countallsubsequenceswithsumk",problem_name:"Count all subsequences with sum K",problem_slug:"count-all-subsequences-with-sum-k",problem_rank:2,misc:{tags:["Teladoc Health","Roblox","Airbnb","Rockstar Games","MongoDB","OYO Rooms","Oracle","Boston Consulting Group","DoorDash","Optum","Rakuten","Snowflake","Databricks","Bain & Company","Shopify","Square","Byju's","Chewy","Cloudflare","Riot Games","Bungie","AMD","Lyft","Stripe","PayPal","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:'Fun Fact: The "sum of subsequence equals K" problem concept has a broad range of applications. It is primarily used in financial software for portfolio optimization and risk management. For example, an investor may want to find all combinations of stocks (subsequences from an array of available stocks) that result in a specific target return (sum equals to K). Optimizing and streamlining this process can result in substantial investment efficiency. It is also used in budgeting apps for determining possible allocations of available resources to achieve a financial goal.',hints:[{hint:"Use a boolean DP array dp where dp[j] represents whether a subset with sum j can be formed."},{hint:'"Recursively explore all combinations of elements: Either include the current element in the subset or skip it. If the sum equals k at any point, return True."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The DP array tracks all possible subset sums that can be formed using elements seen so far. If dp[k] is True, it means a subset with sum k exists.",question:"How does the DP array work?"},{answer:"If k>sum(nums), it is impossible to find a subset with sum k. The algorithm naturally returns False in such cases.",question:"What happens if k is larger than the sum of nums?"}],interview_followup_questions:[{answer:"Use backtracking to generate all subsets, and collect those with a sum of k. This can be more computationally intensive than checking for existence.",question:"How would you modify this to find all subsets with sum k?"},{answer:"Flatten the array and apply the same logic. For multi-dimensional constraints, modify the DP approach to include more states.",question:"Can this be extended to multi-dimensional arrays?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_subsequencepatternproblems_checkifthereexistsasubsequencewithsumk",problem_name:"Check if there exists a subsequence with sum K",problem_slug:"check-if-there-exists-a-subsequence-with-sum-k",problem_rank:2,misc:{tags:["JPMorgan Chase","Intel","MongoDB","Bain & Company","IBM","Epic Systems","Wayfair","Databricks","Boston Consulting Group","Docker","Epic Games","Micron Technology","Roche","Robinhood","Unity Technologies","Activision Blizzard","Visa","Optum","Stripe","Bloomberg","Twilio","DoorDash","Freshworks","Byju's","AMD","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:`Fun Fact: Checking if a subsequence sums to a given value is a core problem in the development of financial software, particularly in portfolio management and risk analysis. By defining "nums" as investment returns and "k" as a desired return, this approach can help determine potential combinations of investments that could achieve a particular financial goal. Similarly, it's also used in encryption and decoding algorithms in cyber security, which is quite imperative for maintaining data integrity and confidentiality.`,hints:[{hint:"Explore all possible subsequences recursively and count the valid ones where the sum equals k. Use a DP table where dp[j] represents the number of subsequences with sum j."},{hint:"Use recursion to explore all subsequences:Count the number of valid subsequences where the sum equals k."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The DP table tracks how many subsequences can form a specific sum. For each element num, it updates possible sums to include subsequences containing num.",question:"How does the DP table work?"},{answer:"If k is greater than the sum of all elements in nums, return 0 immediately, as no subsequence can achieve that sum.",question:"What if k>sum(nums)?"}],interview_followup_questions:[{answer:"Modify the DP array or backtracking condition to include sums within the tolerance range.",question:"How would you handle approximate sums (e.g., \u2223sum\u2212k\u2223\u2264tolerance)?"},{answer:"Use backtracking to collect all subsequences with sum k. Append valid subsequences to a result list instead of just counting them.",question:"How would you modify this to return the subsequences instead of the count?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"recursion_faqs",subcategory_name:"FAQs (Medium)",subcategory_slug:"faqs-medium",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"recursion_recursion_faqs_combinationsum",problem_name:"Combination Sum",problem_slug:"combination-sum",problem_rank:1,misc:{tags:["JPMorgan Chase","Mastercard","Cerner","Broadcom","PayPal","Shopify","Snowflake","Walmart","Intel","Boston Consulting Group","Stripe","Dropbox","Philips Healthcare","Morgan Stanley","KPMG","Byju's","Unity Technologies","Databricks","Visa","Pinterest","Robinhood","Ubisoft","Wayfair","Optum","Goldman Sachs","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is a classic demonstration of combinatorial search and dynamic programming, and it's often encountered in real-world scenarios, especially in e-commerce and budgeting-oriented applications. For example, given a budget, we might want to find all combinations of products (represented by their prices) that would total up to the budget. The problem also relates to other cases such as coin change problems, which are popular in coding interviews, and are used behind the scenes in ATM and cash transactions, to provide the fewest possible number of coins or bills.",hints:[{hint:"Use recursion to explore all combinations of numbers: Include the current number and subtract it from the target. Skip the current number and move to the next candidate."},{hint:"Start each recursive call with the current index to avoid revisiting previous elements and prevent duplicate combinations."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"In backtracking, allow the recursive call to revisit the same index to include the current candidate multiple times. Move to the next index only when the candidate is skipped.",question:"How do you handle unlimited usage of a candidate?"},{answer:"Sorting ensures that candidates are processed in ascending order. This allows early termination of branches when the target becomes smaller than the current candidate.",question:"How does sorting the candidates help?"}],interview_followup_questions:[{answer:"Modify the recursive function to move to the next index after including the current candidate. This prevents reusing a candidate multiple times.",question:"What if candidates can only be used once?"},{answer:"For large targets, reduce the problem size using memoization to cache results for previously computed targets. This avoids redundant computations.",question:"How would you handle large values of target?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_faqs_combinationsumii",problem_name:"Combination Sum II",problem_slug:"combination-sum-ii",problem_rank:2,misc:{tags:["Cerner","Broadcom","American Express","Epic Systems","Teladoc Health","eBay","NVIDIA","Bain & Company","Uber","Western Digital","Snowflake","DoorDash","Morgan Stanley","Stripe","Lyft","HashiCorp","Red Hat","Instacart","Splunk","Chewy","IBM","Philips Healthcare","Roblox","MongoDB","JPMorgan Chase","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem can be framed as a subset sum problem, which has a wide range of applications in the software industry, particularly in financial technology (fintech) and inventory management systems. For example, in a stock trading application, an algorithm might need to find combinations of stocks that add up to a user's specified budget. Similarly, in inventory management, it could assist in finding combinations of items to fulfill a certain order, given constraints such as weight or cost.",hints:[{hint:"Use recursion to explore all possible combinations. Stop when the target becomes zero (a valid combination is found) or when the target becomes negative (discard the branch)."},{hint:'"Sort the input array candidates to handle duplicates easily. Skip duplicates during recursion: If candidates[i]==candidates[i-1] and i>start, skip the current element."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Sorting simplifies duplicate handling and ensures that combinations are generated in lexicographical order.",question:"Why sort the candidates array?"},{answer:"Sorting candidates before recursion ensures that combinations are generated in ascending order.",question:"How is the order of output combinations ensured?"}],interview_followup_questions:[{answer:"Modify the recursion to allow revisiting the same index instead of moving to the next index after including a number.",question:"What if candidates can be used multiple times?"},{answer:"Instead of storing valid combinations, maintain a counter to track the number of valid combinations found.",question:"How would you modify this to return the number of unique combinations instead of the combinations themselves?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_faqs_subsetsi",problem_name:"Subsets I",problem_slug:"subsets-i",problem_rank:3,misc:{tags:["Docker","Bloomberg","Texas Instruments","Seagate Technology","Red Hat","Bungie","Epic Games","Zomato","Splunk","Walmart","Wayfair","Cloudflare","Boston Consulting Group","HashiCorp","Ubisoft","Robinhood","Snowflake","Ernst & Young","Rakuten","Optum","Instacart","Unity Technologies","Flipkart","Teladoc Health","Uber","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is actually a fundamental concept in business analytics and Big Data processing. Whenever companies perform market basket analysis (eg supermarket transaction data to find the association between different item sets) or power set calculations, this function for calculating the sum of all subsets can be heavily used. Having optimized algorithms to solve this problem can greatly improve the efficiency of processing large datasets. This subset sum problem is also related to cryptography, operations research, and complexity theory, all essential concepts in software industry.",hints:[{hint:`"Each element in nums contributes to exactly half of the subsets because every element either appears or doesn't appear in any given subset. For an element x in nums, it contributes x\xD72^n\u22121 to the total sum, where n is the size of the array."`},{hint:"Generate all subsets of nums and compute their sums individually."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Generating all subsets is computationally expensive for large n. Optimizing using the 2^n\u22121 contribution rule avoids this.",question:"Why not generate all subsets explicitly?"},{answer:"In a set of size n, each element appears in exactly half of the 2^n subsets because subsets either include or exclude the element.",question:"How does each element contribute to 2^n\u22121 subsets?"}],interview_followup_questions:[{answer:"Use backtracking or bit masking to generate subsets and compute their sums. This may be required in specific scenarios where all subsets are needed.",question:"What if subsets must be generated explicitly?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_faqs_subsetsii",problem_name:"Subsets II",problem_slug:"subsets-ii",problem_rank:4,misc:{tags:["Goldman Sachs","OYO Rooms","Optum","Chewy","Zomato","Etsy","Salesforce","Rockstar Games","Flipkart","Stripe","Electronic Arts","Uber","Deloitte","Rakuten","Freshworks","Zoho","Intel","Oracle","Bungie","Walmart","Roblox","Zynga","HCL Technologies","AMD","Databricks","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The underlying concept of the problem statement - power set - has real-world applications in a lot of areas within software development. An interesting fact is in the recommendation engines you interact with every day when you use platforms like Netflix or Amazon. These recommendation systems often use the concept of power sets in their algorithms to generate combinations of items (for instance, movies or products) that a user may be interested in based on their previous behavior. The concept of power sets, thus, plays a significant role in building personalized user experience across many applications.",hints:[{hint:"Sort the input array nums to group duplicate elements together. While generating subsets, skip duplicate elements to avoid generating the same subset multiple times"},{hint:"Start with an empty subset. For each element in nums, add it to all existing subsets. To handle duplicates, only extend subsets created in the previous iteration for duplicate elements."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"By skipping duplicate elements during recursion or tracking subsets generated in the last step during iteration, the algorithm avoids duplicate subsets.",question:"How does the solution ensure subsets are unique?"}],interview_followup_questions:[{answer:"Use combinations from the itertools library or modify the backtracking approach to include a size constraint.",question:"What if subsets of a specific size k are required?"},{answer:"Sorting simplifies the process of skipping duplicates, but you can use a hash set to track generated subsets and ensure uniqueness without sorting.",question:"Can this problem be solved without sorting the array?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_faqs_combinationsumiii",problem_name:"Combination Sum III",problem_slug:"combination-sum-iii",problem_rank:5,misc:{tags:["GE Healthcare","Lyft","Medtronic","Nutanix","Byju's","Morgan Stanley","Johnson & Johnson","IBM","Mastercard","DoorDash","Texas Instruments","ARM","NVIDIA","Freshworks","Airbnb","Alibaba","MongoDB","Riot Games","Electronic Arts","eBay","Zynga","Unity Technologies","HashiCorp","Cerner","Zomato","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem is a variant of the classic combinatorial problem in computer science often encountered in financial software, where an organization might want to understand all possible combinations of assets that can achieve a given financial target. Beyond finance, it also broadly applies in decision-making algorithms, such as in Artificial Intelligence for exploring all potential paths or actions. By enumerating all possibilities, the software can make more informed decisions to achieve the desired goal.",hints:[{hint:'"Use recursion to explore combinations. Include a number from 1 to 9 and reduce both n (target sum) and k (remaining numbers to select). Exclude the current number and move to the next."'},{hint:"Generate combinations by iterating through numbers from the current index to ensure each number is used only once. This avoids generating duplicate combinations."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"By iterating from the current number onwards and avoiding revisits, duplicate combinations like [2,3] and [3,2] are naturally avoided.",question:"How do you ensure combinations are unique?"},{answer:"Brute force involves generating all subsets of size k and checking their sum, which is inefficient. Backtracking avoids unnecessary computations by pruning invalid branches early.",question:"Why not use brute force to generate all subsets?"}],interview_followup_questions:[{answer:"Modify the recursion to allow revisiting the same number. Start recursive calls from the current number instead of the next number.",question:"What if numbers can be reused?"},{answer:"Use memoization to store intermediate results for previously computed states to avoid redundant calculations.",question:"How would you handle very large n and k?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"recursion_hard",subcategory_name:"Hard",subcategory_slug:"hard",subcategory_rank:4,subcategory_type:"study",problems:[{problem_id:"recursion_recursion_hard_lettercombinationsofaphonenumber",problem_name:"Letter Combinations of a Phone Number",problem_slug:"letter-combinations-of-a-phone-number",problem_rank:1,misc:{tags:["Stripe","HCL Technologies","IBM","Goldman Sachs","Boston Consulting Group","Broadcom","Dropbox","Epic Systems","Cerner","Flipkart","Ernst & Young","Epic Games","Chewy","HashiCorp","Qualcomm","Square","Morgan Stanley","MongoDB","Micron Technology","OYO Rooms","Intel","Mastercard","Shopify","Nutanix","Seagate Technology","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"A practical application of this programming problem lies in the creation of telephone dial-in systems or mobile texting in old feature phones, where a combination of number presses resulted in different letters. The predictive text (T9 word) feature, for instance, used this method to help users type faster. The logic behind typing on old mobile phones is similar to the problem mentioned - every number corresponds to a different set of letters and a combination results in different words. Nowadays, even though smartphones with full QWERTY keyboards are dominant, this concept is very crucial for accessibility programs for visually impaired or specially-abled users.",hints:[{hint:"Use recursion to explore all combinations. For each digit, iterate over its mapped letters. Append each letter to the current combination and proceed to the next digit."},{hint:"Start with an empty combination in a queue. For each digit, extend all existing combinations in the queue by appending each possible letter. Continue until all digits have been processed."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Backtracking systematically generates all combinations by exploring all possibilities at each digit. It avoids redundant computations by building combinations incrementally.",question:"Why use backtracking for this problem?"},{answer:"The order of combinations depends on the traversal order in the recursive or iterative approach. The problem does not specify any required order, so either lexicographical or arbitrary order is acceptable.",question:"Can the order of combinations affect the result?"}],interview_followup_questions:[{answer:'Define a mapping for 0 and 1 (e.g., 0\u2192"" and 1\u2192""), or ignore them in the input.',question:"How would you modify this problem to include digits 0 and 1?"},{answer:"Sorting the mapped letters for each digit ensures the combinations are generated in lexicographical order.",question:"What if a specific order (e.g., lexicographical) is required for the output?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"recursion_faqs(hard)",subcategory_name:"FAQs (Hard)",subcategory_slug:"faqs-hard",subcategory_rank:5,subcategory_type:"study",problems:[{problem_id:"recursion_recursion_faqs(hard)_palindromepartitioning",problem_name:"Palindrome partitioning",problem_slug:"palindrome-partitioning",problem_rank:1,misc:{tags:["Instacart","PayPal","Airbnb","Walmart","American Express","Shopify","Medtronic","Seagate Technology","Cloudflare","Morgan Stanley","Siemens Healthineers","Qualcomm","Unity Technologies","Electronic Arts","Pinterest","Mastercard","PwC","Robinhood","Salesforce","Stripe","Visa","Ubisoft","Wayfair","Byju's","Freshworks","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem concept is heavily applied in building AI chatbots, particularly for checking if a sentence or phrase is the same forward and backward, an example of a palindrome. Natural language processing (NLP) is a massive part of AI chatbots that can parse, understand, and respond to user input in a way that simulates natural human conversation - the palindrome partitioning helps in this case. Besides, it's also used in DNA sequence analysis in bioinformatics, where analyzing palindromic sequences can play a critical role in understanding DNA sequences and their functions.",hints:[{hint:"Use recursion to explore all possible partitions. Backtrack to remove the last added substring and try other possibilities."},{hint:"Use a helper function to check if a substring is a palindrome."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Duplicate partitions are naturally avoided because backtracking generates partitions by iterating through the string in order and only includes valid substrings.",question:"How do you avoid duplicate partitions?"},{answer:"The output will include all possible partitions, ranging from each character as a separate partition to the entire string as a single partition.",question:"What if the input contains only palindromes?"}],interview_followup_questions:[{answer:"Return the first partition found during backtracking. This reduces the search space and improves performance.",question:"What if the problem required finding only one valid partition?"},{answer:"Modify the recursion to include overlapping substrings. This would require additional bookkeeping to avoid duplicate results.",question:"What if overlapping palindromic substrings are allowed?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_faqs(hard)_wordsearch",problem_name:"Word Search",problem_slug:"word-search",problem_rank:2,misc:{tags:["Oracle","Walmart","Roche","JPMorgan Chase","Morgan Stanley","Goldman Sachs","Johnson & Johnson","Activision Blizzard","Shopify","Ernst & Young","OYO Rooms","Intel","Teladoc Health","MongoDB","Epic Systems","Medtronic","DoorDash","Western Digital","Rakuten","Swiggy","Riot Games","Salesforce","McKinsey & Company","IBM","Zoho","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`The underlying concept of this problem is often used in word puzzle games like "Boggle" or "Words With Friends", where players are required to search for words in grids. Specifically, the logic of checking for word existence in a grid by looking horizontally or vertically - without reusing the same letter cell, is an integral part of such game development to validate a player's move.`,hints:[{hint:"Start at every cell in the grid and try to match the first character of word. If a match is found, recursively explore the neighboring cells to match the subsequent characters. Mark the current cell as visited (e.g., by modifying its value temporarily) to prevent revisiting it in the same path."},{hint:"If the current index of the word equals its length, it means the word is successfully found. If the current cell does not match the expected character or goes out of bounds, backtrack immediately."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Repeated characters are handled naturally since each character must be matched independently in adjacent cells.",question:"What happens if the word contains repeated characters?"},{answer:"Temporarily modify the grid value (e.g., set it to #) during the search. Restore it after backtracking to ensure the grid remains intact for other paths.",question:"How do you handle visited cells?"}],interview_followup_questions:[{answer:"Modify the neighbor exploration step to include diagonal directions (top-left, top-right, bottom-left, bottom-right).",question:"How would you handle diagonal moves?"},{answer:"Modify the neighbor exploration to allow wrapping (e.g., moving off the right edge brings you to the left edge of the same row).",question:"What if the word must wrap around the edges of the grid?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_faqs(hard)_nqueen",problem_name:"N Queen",problem_slug:"n-queen",problem_rank:3,misc:{tags:["Morgan Stanley","Zoho","Deloitte","Robinhood","Stripe","Philips Healthcare","Electronic Arts","GE Healthcare","Texas Instruments","NVIDIA","PwC","Qualcomm","Broadcom","Mastercard","Western Digital","IBM","Cloudflare","JPMorgan Chase","Lyft","Roblox","Bungie","Snowflake","Dropbox","Seagate Technology","HashiCorp","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The N-Queens problem, while initially appearing as just a chess puzzle, actually has valuable implications in real-world applications. Its solution relies on a fundamental concept in technology: backtracking, which is used in recommendation algorithms, routing protocols, database queries optimizations and more. Any time you need to make a series of decisions, where each decision leads to a new set of choices, backtracking becomes a handy tool. The principles of this problem are even applied in branches of artificial intelligence for constraint satisfaction problems such as scheduling, map-coloring and Sudoku.",hints:[{hint:"Use backtracking to try placing queens row by row. "},{hint:"Use sets to efficiently track conflicts in columns, main diagonals, and anti-diagonals. Prune invalid branches early to reduce unnecessary computations."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Backtracking systematically explores all possible configurations and prunes invalid ones early, making it well-suited for combinatorial problems like this.",question:"Why use backtracking for this problem?"},{answer:"Maintain the column index for each row where a queen is placed. Use this to build the board as a list of strings.",question:"How do you construct the board from the solution?"}],interview_followup_questions:[{answer:"Adjust the recursion to stop after placing k queens instead of n.",question:"How would you modify the solution for a k-queens problem (fewer than n queens)?"},{answer:"Use a counter instead of storing solutions. Increment the counter whenever a valid configuration is found.",question:"How would you count the total number of solutions instead of returning them?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_faqs(hard)_ratinamaze",problem_name:"Rat in a Maze",problem_slug:"rat-in-a-maze",problem_rank:4,misc:{tags:["Boston Consulting Group","Snowflake","Unity Technologies","Ubisoft","OYO Rooms","Broadcom","Cloudflare","MongoDB","Chewy","Teladoc Health","Swiggy","Splunk","Walmart","Johnson & Johnson","Oracle","Reddit","Square","Target","Nutanix","McKinsey & Company","AMD","Twilio","ARM","PwC","Docker","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem statement is a practical manifestation of pathfinding algorithms used in a variety of disciplines in software development. A prime example can be found in video game development, where these algorithms allow characters to navigate around obstacles in an environment. In particular, the A* (A-star) search algorithm, which incorporates heuristic information, is commonly used for its efficiency and accuracy in finding the shortest path. Additionally, similar problem-solving structures are used in web routing protocols and Global Positioning System (GPS) for finding the shortest route between two locations.",hints:[{hint:"Use recursion to explore all possible moves from the current cell. At each step, check if the current cell is valid for traversal (inside the grid, unvisited, and not blocked). If valid, mark the cell as visited and attempt to move in all four possible directions. Append the direction (U, D, L, R) to the current path while moving."},{hint:"If the current cell is (n\u22121,n\u22121), it means the rat has reached the destination. Add the current path to the list of results. If the current cell is invalid (out of bounds, blocked, or already visited), return immediately without proceeding further."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Use a visited matrix or temporarily mark the grid cell as blocked (e.g., setting it to 0) while exploring it. After backtracking, restore the cell to its original state.",question:"How do you ensure the rat doesn\u2019t revisit cells in the same path?"},{answer:"Each recursive path is independently constructed by appending the current direction. As long as cells are not revisited within a path, duplicate paths are naturally avoided.",question:"How do you ensure all paths are distinct? "}],interview_followup_questions:[{answer:"Instead of finding all paths, use a Breadth-First Search (BFS) approach to find the shortest path. BFS explores all possible paths layer by layer and guarantees the shortest path in unweighted grids.",question:"How would you modify the algorithm to return only the shortest path?"},{answer:"Add logic to track items or constraints (e.g., counting the number of specific cells visited). Include this information in the recursion state to enforce the constraints during path exploration.",question:"What if the rat must collect items or satisfy constraints along the way?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_faqs(hard)_mcoloringproblem",problem_name:"M Coloring Problem",problem_slug:"m-coloring-problem",problem_rank:6,misc:{tags:["Instacart","Flipkart","Bain & Company","Rockstar Games","Qualcomm","Cerner","KPMG","eBay","Swiggy","Electronic Arts","Philips Healthcare","Broadcom","GE Healthcare","Salesforce","Zomato","ARM","Medtronic","Shopify","Reddit","Rakuten","Seagate Technology","Morgan Stanley","McKinsey & Company","PwC","Western Digital","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The graph coloring problem is a critical concept in many real-world applications, such as register allocation in compilers, mobile radio frequency assignment, task scheduling and in Sudoku puzzles. For example, in register allocation during the compiling process, each register can be viewed as a color. The goal is to allocate the most efficiently without using the same register for intersecting live ranges of variables, similar to not coloring adjacent vertices with the same color in a graph. This graph-coloring method helps in writing efficient programs.",hints:[{hint:"This is a variation of the graph coloring problem, which is NP-complete. Start by attempting to color each vertex one by one. For each vertex, try assigning it a color from 1 to M."},{hint:'"Use an adjacency list or adjacency matrix to represent the graph. For a vertex v, a color c is valid if no vertex adjacent to v is already colored withc. This can be implemented by iterating through the neighbors of v and checking their current colors."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Treat each connected component independently. If any component cannot be colored with M colors, return False.",question:"How do you handle disconnected graphs?"},{answer:"For each vertex, check the colors of all its neighbors before assigning a color. Use a helper function to validate color assignments.",question:"How do you ensure adjacent vertices have different colors?"}],interview_followup_questions:[{answer:"Directed graphs require ensuring no two vertices in a directed path share the same color. This may require reinterpreting the problem as a graph partitioning problem.",question:"How would you modify this for directed graphs?"},{answer:"Yes, use an iterative approach with a stack or queue to simulate the backtracking process. However, recursion is simpler and more intuitive for this problem.",question:"Can this problem be solved without recursion?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"recursion_recursion_faqs(hard)_sudokosolver",problem_name:"Sudoko Solver",problem_slug:"sudoko-solver",problem_rank:7,misc:{tags:["Airbnb","Visa","McKinsey & Company","ARM","Stripe","Bungie","Alibaba","Ernst & Young","Flipkart","Etsy","Medtronic","Zoho","Zomato","Broadcom","Riot Games","Goldman Sachs","Uber","Zynga","Databricks","Activision Blizzard","Freshworks","Optum","Micron Technology","Ubisoft","Texas Instruments","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The concept behind solving Sudoku puzzles programmatically is often used in the real world as a common example of constraint satisfaction problems (CSPs). CSPs are mathematical questions defined as a set of objects whose state must satisfy a number of constraints or restrictions. CSPs are applied in areas like AI planning and scheduling, routing problems, and even efficiently allocating resources in large data centers. For instance, Google uses CSPs in their Or-Tools software to solve complex planning and resource allocation problems.",hints:[{hint:"Use recursion to try filling in each empty cell. For each empty cell, try placing numbers 1 through 9. After placing a number, recursively attempt to solve the rest of the puzzle."},{hint:"Maintain data structures (e.g., sets or arrays) to track used numbers for each row, column, and sub-grid. This avoids repeatedly iterating over the grid to check constraints. Terminate as soon as the puzzle is solved, as only one solution exists for a valid Sudoku."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Backtracking systematically explores all possible configurations, ensuring that the solution satisfies all constraints. It is efficient for problems like Sudoku, where the solution space can be pruned early.",question:"Why use backtracking for solving Sudoku?"},{answer:"Validate the board before solving by checking for duplicates in rows, columns, and sub-grids. If invalid, return an appropriate error or flag.",question:"How do you handle invalid Sudoku boards?"}],interview_followup_questions:[{answer:"Modify the backtracking function to terminate after finding the first valid number for the target cell.",question:"What if only partial solutions are required (e.g., fill one cell)?"},{answer:"Parallelizing backtracking is challenging due to its sequential nature. However, independent sub-grids can be solved in parallel for puzzles with partial constraints.",question:"Can the algorithm be parallelized?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"recursion_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:6,subcategory_type:"contest",problems:[{problem_id:"different_series",problem_name:"Different Series",problem_slug:"different-series",problem_rank:0,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"combination_xor",problem_name:"Combination XOR",problem_slug:"combination-xor",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"find_distinct_outcomes",problem_name:"Find Distinct Expressions",problem_slug:"find-distinct-expressions",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"linked-list",category_name:"Linked-List",category_slug:"linked-list",category_rank:6,subcategories:[{subcategory_id:"linked-list_fundamentals(singlell)",subcategory_name:"Fundamentals (Single LL)",subcategory_slug:"fundamentals-single-ll",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"linked-list_linked-list_fundamentals(singlell)_introductiontosinglylinkedlist",problem_name:"Introduction to Singly LinkedList",problem_slug:"introduction-to-singly-linkedlist",problem_rank:1,misc:{tags:["Swiggy","Cerner","Activision Blizzard","IBM","Byju's","McKinsey & Company","Oracle","DoorDash","Broadcom","Siemens Healthineers","Zynga","Twilio","Databricks","GE Healthcare","Walmart","Deloitte","Robinhood","Ernst & Young","Zoho","Mastercard","Texas Instruments","KPMG","Snowflake","Micron Technology","Alibaba","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"linked-list_linked-list_fundamentals(singlell)_traversalinlinkedlist",problem_name:"Traversal in Linked List",problem_slug:"traversal-in-linked-list",problem_rank:2,misc:{tags:["Zoho","Freshworks","McKinsey & Company","Splunk","Robinhood","Micron Technology","Bain & Company","MongoDB","Philips Healthcare","HCL Technologies","American Express","Uber","OYO Rooms","PwC","AMD","Cerner","Broadcom","ARM","Walmart","Ubisoft","Etsy","Teladoc Health","Nutanix","Alibaba","Goldman Sachs","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"Fun Fact: The problem of traversing a singly Linked List is very commonly used in software development. One of its real-world applications is found in web browser history. When you navigate the web, your browser keeps track of the websites you've visited using a form of linked list. Each site is a node in the list and you can move backwards and forwards through your history, much like traversing a linked list. Additionally, linked lists are also frequently used in the implementation of filesystems, where directories are often represented as singly linked lists, with each node representing a file or sub-directory.",hints:[{hint:"Start at the head node. Use a loop to traverse through each node of the linked list."},{hint:"Initialize an empty array to store the values. Use a pointer to traverse the list. When the pointer becomes null or None, the traversal is complete."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The iterative approach is preferred for large lists because it avoids the stack overflow risk associated with recursion.",question:"How do you handle very large linked lists?"},{answer:"The traversal order is guaranteed to be the same as the linked list order because each node is processed sequentially.",question:"How do you confirm the traversal order?"}],interview_followup_questions:[{answer:"Use a stack to store the values during traversal and pop elements from the stack to get them in reverse order. Alternatively, reverse the array after traversal.",question:"What if you need to reverse the traversal order?"},{answer:"Traversing a singly linked list cannot be parallelized because each node depends on the next pointer of the previous node. However, parallelization is possible for tasks performed on the data after traversal.",question:"Can this algorithm be parallelized?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_fundamentals(singlell)_deletioninlinkedlist",problem_name:"Deletion in Linked List",problem_slug:"deletion-in-linked-list",problem_rank:3,misc:{tags:["Roblox","Riot Games","Cerner","Byju's","Mastercard","McKinsey & Company","Visa","Alibaba","Wayfair","Robinhood","Square","Unity Technologies","American Express","Morgan Stanley","Stripe","Goldman Sachs","HashiCorp","Flipkart","Salesforce","Databricks","HCL Technologies","Zynga","Epic Games","Uber","Intel","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"linked-list_linked-list_fundamentals(singlell)_insertioninlinkedlist",problem_name:"Insertion in Linked List",problem_slug:"insertion-in-linked-list",problem_rank:4,misc:{tags:["Airbnb","Oracle","Texas Instruments","Siemens Healthineers","Epic Systems","Rockstar Games","Shopify","Deloitte","KPMG","Ubisoft","Target","Cerner","Goldman Sachs","Teladoc Health","Dropbox","NVIDIA","Optum","American Express","ARM","Walmart","Flipkart","Mastercard","Zoho","Square","PayPal","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_extras_basiclinkedlist_deletionoftheheadofll",problem_name:"Deletion of the head of LL",problem_slug:"deletion-of-the-head-of-ll",problem_rank:5,misc:{tags:["Texas Instruments","Oracle","Roche","IBM","MongoDB","Riot Games","eBay","McKinsey & Company","Morgan Stanley","Pinterest","Byju's","Epic Systems","PwC","Shopify","Seagate Technology","Unity Technologies","Stripe","Target","Nutanix","Zoho","Walmart","Johnson & Johnson","Chewy","Flipkart","DoorDash","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Check if the list is empty (i.e., head is null or None). If true, return null or None, as there's no node to delete. "},{hint:"If the list contains at least one node, move the head pointer to the next node."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The new head is the node immediately following the current head (head.next). If the current head is the only node, the new head becomes None.",question:"What is the new head after deletion?"},{answer:"Traverse the modified list starting from the new head to ensure that the first node has been removed and all other nodes remain intact.",question:"How do you verify the result?"}],interview_followup_questions:[{answer:`If the list is circular, check if the head is the only node.
If true, set the head to None. Otherwise, update the tail\u2019s next pointer to skip the deleted node and point to the new head.`,question:"What if the list is circular?"},{answer:"Deleting the head does not require traversal or a previous pointer, making it simpler. Deleting other nodes requires maintaining a reference to the previous node.",question:"What is the difference between deleting the head and other nodes?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_deletionofthetailofll",problem_name:"Deletion of the tail of LL",problem_slug:"deletion-of-the-tail-of-ll",problem_rank:6,misc:{tags:["McKinsey & Company","ARM","Oracle","Bloomberg","Goldman Sachs","Salesforce","Texas Instruments","IBM","Databricks","Riot Games","Ubisoft","Stripe","PwC","Red Hat","Flipkart","DoorDash","NVIDIA","JPMorgan Chase","Philips Healthcare","Micron Technology","Dropbox","Broadcom","Airbnb","Western Digital","Johnson & Johnson","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"If the list is empty (head == None), return None. If there is only one node (head.next == None), removing the tail leaves an empty list, so return None."},{hint:"Traverse to the last node (tail), which is the node where next == None. Update the second last node\u2019s next = None to remove the tail. Return the updated head of the list."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"To update the second last node\u2019s next to None, correctly removing the tail.",question:"Why do we need to traverse to the second last node instead of directly removing the last node?"},{answer:"No, removing the head requires updating head.next and its prev pointer.",question:"Can we use the same logic for removing the head node?"}],interview_followup_questions:[{answer:"Update prev.next and next.prev to unlink the node.",question:"How would you modify this to remove a node from the middle of the list?"},{answer:"Store the removed node in a temporary variable before modifying pointers.",question:"How would you modify this to return the deleted node instead of just updating the list?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_deletionofthekthelementofll",problem_name:"Deletion of the Kth element of LL",problem_slug:"deletion-of-the-kth-element-of-ll",problem_rank:7,misc:{tags:["OYO Rooms","Square","Teladoc Health","Activision Blizzard","Walmart","Morgan Stanley","Bloomberg","Red Hat","Rakuten","Micron Technology","Philips Healthcare","Johnson & Johnson","McKinsey & Company","Uber","Reddit","Riot Games","JPMorgan Chase","Electronic Arts","Cloudflare","eBay","Salesforce","Siemens Healthineers","KPMG","Cerner","Epic Systems","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"If the list is empty (head == None), return None. If k == 1, remove the head node and return head.next. Traverse the list to find the k-th node."},{hint:"Update the pointers, If the node has a previous node (prev), update prev.next = node.next. If the node has a next node (next), update next.prev = node.prev. If k is beyond the length of the list, return the original head."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"If k is greater than the number of nodes, return the original list.",question:"What happens if k is out of bounds?"}],interview_followup_questions:[{answer:"If k == 1, update the tail's next to the new head.",question:"How would you modify this for a circular doubly linked list?"},{answer:"Traverse the list and remove all nodes where val == target, updating pointers accordingly.",question:"How would you modify this to remove all occurrences of a specific value instead of a position?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_deletetheelementwithvaluex",problem_name:"Delete the element with value X",problem_slug:"delete-the-element-with-value-x",problem_rank:8,misc:{tags:["AMD","Johnson & Johnson","Unity Technologies","Roblox","Riot Games","Zomato","Swiggy","Bloomberg","Reddit","McKinsey & Company","DoorDash","Seagate Technology","Texas Instruments","Qualcomm","Western Digital","PwC","Salesforce","Dropbox","OYO Rooms","Cerner","Walmart","Robinhood","Electronic Arts","Pinterest","Goldman Sachs","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"If the list is empty (head is None), return None as there is no node to delete. If the value X is present in the head node, update the head pointer to head.next to remove the head node. Traverse the list starting from the head, keeping track of the previous node"},{hint:"Use a pointer to traverse the list starting from the head. Maintain a reference to the current node and the previous node during traversal."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"If the head contains X, update the head pointer to head.next to remove the head node.",question:"How do you handle deleting the head node?"},{answer:"Yes, but the problem specifies deleting only the first occurrence of X. The rest of the list remains unchanged.",question:"Can the value X appear multiple times in the list?"}],interview_followup_questions:[{answer:"Instead of stopping after deleting the first occurrence, continue traversing the list and update pointers to remove all nodes containing X.",question:"What if you need to delete all occurrences of X?"},{answer:"For a circular linked list, ensure that the tail node\u2019s next pointer is updated appropriately if the deleted node is the head or the node with value X.",question:"How would you handle circular linked lists?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_insertionattheheadofll",problem_name:"Insertion at the head of LL",problem_slug:"insertion-at-the-head-of-ll",problem_rank:9,misc:{tags:["DoorDash","Oracle","Twilio","Seagate Technology","Shopify","Cerner","Qualcomm","Teladoc Health","Riot Games","Roche","Databricks","JPMorgan Chase","Johnson & Johnson","MongoDB","Goldman Sachs","Flipkart","Siemens Healthineers","Byju's","Docker","Rakuten","HashiCorp","Chewy","ARM","Zynga","Optum","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Create a new node with value X. Set the next pointer of the new node to the current head."},{hint:"Update the head pointer to point to the new node, making it the first node of the list."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Inserting at the head does not require traversal or reference to other nodes, making it simpler and faster than inserting at other positions.",question:"What is the difference between inserting at the head and at other positions?"},{answer:"By setting the next pointer of the new node to the current head, all subsequent nodes remain linked to the list.",question:"How do you ensure the rest of the list remains intact?"}],interview_followup_questions:[{answer:`For a circular linked list:
Set the next pointer of the new node to the current head.
Traverse the list to find the tail node and update its next pointer to the new node.
Update the head pointer to the new node.`,question:"How would you handle a circular linked list?"},{answer:"Inserting at the head is inherently efficient in linked lists due to O(1) complexity. However, maintaining a reference to the head ensures optimal performance during repeated insertions.",question:"What if you frequently need to insert at the head?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_insertionatthetailofll",problem_name:"Insertion at the tail of LL",problem_slug:"insertion-at-the-tail-of-ll",problem_rank:10,misc:{tags:["GE Healthcare","Square","Teladoc Health","Flipkart","Pinterest","Texas Instruments","Nutanix","Robinhood","Western Digital","Medtronic","Siemens Healthineers","Roche","Bloomberg","KPMG","OYO Rooms","Twilio","Target","Mastercard","DoorDash","Deloitte","Epic Games","Databricks","Walmart","PwC","Uber","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Create a new node with value X and set its next pointer to None. If the list is empty (head is None), the new node becomes the head of the list. Otherwise, traverse the list to reach the current tail (node whose next pointer is None)."},{hint:"Use a pointer to traverse the list starting from the head. Stop when the pointer reaches the tail node (where next is None). Update the next pointer of the tail node to point to the new node."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Inserting at the tail requires traversal to the end of the list (unless the tail is tracked separately), while inserting at other positions might require locating a specific index or node.",question:"What is the difference between inserting at the tail and other positions?"},{answer:"By traversing the list until the tail (node with next = None) is found and updating its next pointer to point to the new node.",question:"How do you ensure the new node is added at the correct position?"}],interview_followup_questions:[{answer:"Maintain a direct reference to the tail node, allowing O(1) insertion without requiring traversal.",question:"What if you frequently need to insert at the tail?"},{answer:`Traverse the list to find the correct position based on 
X\u2019s value, and insert the new node at that position.`,question:"What if the list needs to remain sorted after insertion?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_insertionatthekthposition",problem_name:"Insertion at the Kth position of LL",problem_slug:"insertion-at-the-kth-position-of-ll",problem_rank:11,misc:{tags:["Splunk","Instacart","NVIDIA","Robinhood","Twilio","Roblox","Etsy","Docker","Wayfair","AMD","McKinsey & Company","Philips Healthcare","HashiCorp","Chewy","Pinterest","MongoDB","Flipkart","Ubisoft","Western Digital","Bungie","Riot Games","Goldman Sachs","Lyft","eBay","Stripe","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Traverse the list to find the (K\u22121)-th node (the node just before the desired position). Create a new node with value X."},{hint:"Use a pointer to traverse the list, keeping track of the current position. Stop when you reach the (K\u22121)-th node or when the list ends."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Append the new node at the tail. Traverse to the end of the list and update the last node\u2019s next pointer to point to the new node.",question:"What if K is greater than the length of the list + 1?"},{answer:"By carefully updating the next pointers of the surrounding nodes during insertion, you maintain the integrity of the linked list.",question:"How do you ensure the list structure remains intact?"}],interview_followup_questions:[{answer:`For circular linked lists:
Traverse the list to the (K\u22121)-th node. Insert the new node and update pointers to maintain the circular structure.`,question:"How would you handle circular linked lists?"},{answer:"If the list is sorted, traverse the list to find the correct position based on X\u2019s value and insert the new node there.",question:"What if the list is sorted?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_insertionbeforethevaluex",problem_name:"Insertion before the value X in LL",problem_slug:"insertion-before-the-value-x-in-ll",problem_rank:12,misc:{tags:["Rakuten","JPMorgan Chase","HCL Technologies","Visa","DoorDash","Cerner","MongoDB","OYO Rooms","Zomato","Pinterest","GE Healthcare","Ubisoft","Square","Epic Games","Mastercard","Bain & Company","Byju's","Western Digital","Optum","PayPal","Broadcom","Micron Technology","Seagate Technology","Unity Technologies","Swiggy","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Traverse the list from the head to locate the first node with value X."},{hint:"If X is found at the head, the task becomes straightforward, create a new node and make it the new head. For all other positions, keep track of the node preceding X during traversal, as this is where the insertion will occur."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"When the first node has the value X, the new node should become the new head. Instead of handling this separately in the traversal logic, treat it as a special initialization case before the traversal begins.",question:"How do you efficiently handle inserting before the head when X matches the head node's value?"},{answer:"In this case, the function should simply return the list unchanged. This ensures you\u2019re not making invalid modifications or accidentally breaking the list structure.",question:"What happens when X is not found in the list?"}],interview_followup_questions:[{answer:"This requires a two-pass traversal of the list. In the first pass, find the last occurrence of X. In the second pass, insert the new node before that occurrence.",question:"How would you handle a scenario where X is guaranteed to appear multiple times, and you want to insert only before the last occurrence of X?"},{answer:"Maintaining a hash map of value-to-node mappings can speed up the search process, reducing traversal time.",question:"What optimizations can you apply if you frequently insert before a specific value like X?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"linked-list_fundamentals(doublyll)",subcategory_name:"Fundamentals (Doubly LL)",subcategory_slug:"fundamentals-doubly-ll",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"linked-list_linked-list_fundamentals(doublyll)_introductiontodoublyll",problem_name:"Introduction to Doubly LL",problem_slug:"introduction-to-doubly-ll",problem_rank:1,misc:{tags:["Lyft","Pinterest","Cloudflare","Bloomberg","Medtronic","Nutanix","Dropbox","Electronic Arts","Roblox","AMD","Alibaba","Qualcomm","Texas Instruments","Ernst & Young","Broadcom","Bungie","Boston Consulting Group","Western Digital","Red Hat","eBay","Flipkart","Target","Unity Technologies","Salesforce","HashiCorp","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"linked-list_linked-list_fundamentals(doublyll)_deletionindoublyll",problem_name:"Deletion in Doubly LL",problem_slug:"deletion-in-doubly-ll",problem_rank:2,misc:{tags:["Salesforce","HashiCorp","eBay","Seagate Technology","Wayfair","GE Healthcare","Optum","Riot Games","Bloomberg","Swiggy","Activision Blizzard","Dropbox","Rakuten","Splunk","Roblox","Databricks","Stripe","MongoDB","Electronic Arts","Snowflake","Intel","Nutanix","Johnson & Johnson","HCL Technologies","Byju's","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"linked-list_linked-list_fundamentals(doublyll)_insertionindll",problem_name:"Insertion in DLL",problem_slug:"insertion-in-dll",problem_rank:3,misc:{tags:["Texas Instruments","Shopify","HCL Technologies","Wayfair","Salesforce","Freshworks","Nutanix","Rakuten","Bungie","Reddit","Pinterest","Twilio","Goldman Sachs","Zynga","IBM","Optum","Broadcom","Alibaba","Dropbox","DoorDash","Byju's","Roche","Instacart","Bain & Company","Docker","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_extras_basiclinkedlist_convertarraytodll",problem_name:"Convert Array to DLL",problem_slug:"convert-array-to-dll",problem_rank:4,misc:{tags:["Ernst & Young","Zynga","Epic Systems","Qualcomm","Medtronic","HCL Technologies","Flipkart","Deloitte","Oracle","Intel","Snowflake","Teladoc Health","Splunk","Cloudflare","GE Healthcare","Broadcom","Bungie","Bloomberg","Stripe","Twilio","Visa","Morgan Stanley","ARM","eBay","MongoDB","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Create a Node structure containing val, next, and prev pointers. Initialize the head with the first element of nums[]."},{hint:"Iterate through nums[], creating new nodes, linking them bidirectionally (prev and next). Return the head of the doubly linked list."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Maintain head and tail pointers for easy insertions.",question:"How do we handle inserting new elements into the DLL?"},{answer:"A DLL allows both forward and backward traversal, making insertions and deletions easier.",question:"Why use a doubly linked list instead of a singly linked list?"}],interview_followup_questions:[{answer:"Insert each element in sorted order using insertion sort logic (O(n\xB2)) or build and sort (O(n log n)).",question:"How would you modify this to construct a sorted DLL instead of inserting in array order?"},{answer:"Instead of setting tail.next = None, set it to head and update head.prev = tail.",question:"How would you modify the function to create a circular DLL?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_deleteheadofdll",problem_name:"Delete head of DLL",problem_slug:"delete-head-of-dll",problem_rank:5,misc:{tags:["Ernst & Young","Activision Blizzard","American Express","PayPal","Red Hat","McKinsey & Company","Boston Consulting Group","Swiggy","Epic Games","Shopify","MongoDB","Roblox","Flipkart","Splunk","Oracle","Zoho","Ubisoft","Visa","DoorDash","Reddit","Medtronic","Seagate Technology","Wayfair","Goldman Sachs","Lyft","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"If the list is empty (head == None), return None. If there is only one node, remove it by returning None."},{hint:"Update head to point to the next node (head.next). If the new head exists, set its prev = None to break the link. Return the updated head."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`In languages with garbage collection (Python, Java), the old head is automatically garbage collected.
In C/C++, explicitly deallocate (delete head).`,question:"Does this operation free memory automatically?"},{answer:"No, removing the tail requires updating the previous node\u2019s next to None`.",question:"Can we use the same logic for removing the tail node?"}],interview_followup_questions:[{answer:"Store the removed node in a temporary variable before modifying pointers.",question:"How would you modify this to return the deleted node instead of just updating the list?"},{answer:"Update the tail\u2019s next pointer to point to the new head.",question:"What if the list was circular instead of linear?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_deletetailofdll",problem_name:"Delete Tail of DLL",problem_slug:"delete-tail-of-dll",problem_rank:6,misc:{tags:["OYO Rooms","McKinsey & Company","Snowflake","Ubisoft","Morgan Stanley","HCL Technologies","Freshworks","ARM","Flipkart","Visa","Bain & Company","Deloitte","Siemens Healthineers","Rockstar Games","Reddit","Airbnb","Zomato","Dropbox","KPMG","Shopify","Seagate Technology","Bungie","Zoho","Splunk","Philips Healthcare","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"If the list is empty (head is None), return None immediately, as there is nothing to delete. If the list contains only one node (head.next is None), deleting the tail means returning an empty list (None)."},{hint:"Use a pointer to traverse the list starting from the head. Stop when the pointer reaches the second-to-last node, i.e., when the next pointer of the current node points to the tail (node where next is None)."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Traverse the list using a pointer until the current node\u2019s next pointer points to the tail (node where next is None).",question:"How do you identify the second-to-last node?"},{answer:"Maintain a reference to the tail and second-to-last node during insertions and deletions. This avoids traversal for tail deletion but requires additional bookkeeping.",question:"How would you efficiently delete the tail in a frequently accessed list?"}],interview_followup_questions:[{answer:"For a circular linked list, traverse the list to identify the tail (node whose next pointer points to the head). Update the second-to-last node\u2019s next pointer to point to the head, maintaining the circular structure.",question:"What if the list is circular?"},{answer:"Maintain a reference to the tail and second-to-last node during insertions and deletions. This avoids traversal for tail deletion but requires additional bookkeeping.",question:"How would you efficiently delete the tail in a frequently accessed list?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_deletekthelementofdll",problem_name:"Delete Kth Element of DLL",problem_slug:"delete-kth-element-of-dll",problem_rank:7,misc:{tags:["Docker","Square","Bain & Company","Activision Blizzard","Zoho","Airbnb","Optum","Rakuten","Goldman Sachs","Medtronic","NVIDIA","Western Digital","Epic Systems","Teladoc Health","Red Hat","Oracle","Walmart","Boston Consulting Group","OYO Rooms","Zomato","Wayfair","Roblox","PwC","Stripe","Target","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"If k=1: Update the head pointer to head.next to remove the head node. For k>1: Traverse the list to find the (k\u22121)-th node (node preceding the target node)."},{hint:"Use a pointer to traverse the list and keep a count of the current position. Stop when the pointer reaches the (k\u22121)-th node, i.e., just before the node to be deleted."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"During traversal, check if the k-th node exists. If the traversal ends before reaching k, return the list unchanged.",question:"What if k is greater than the length of the list?"},{answer:"Traverse to the second-to-last node and set its next pointer to None.",question:"How do you handle k-th node deletion when k is the last node?"}],interview_followup_questions:[{answer:"Maintain a count of the total number of nodes to verify k\u2019s validity before traversing. Alternatively, maintain a pointer to the k-th node during updates.",question:"How would you efficiently find and delete the k-th node in a frequently accessed list?"},{answer:"Traverse the list until the node with the specific value is found, and update the preceding node\u2019s next pointer to skip the target node.",question:"How would you adapt this approach for deleting a node with a specific value instead of the k-th node?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_removinggivennodeindll",problem_name:"Removing given node in DLL",problem_slug:"removing-given-node-in-dll",problem_rank:8,misc:{tags:["Databricks","Western Digital","Epic Systems","Byju's","Bloomberg","PwC","Unity Technologies","Mastercard","Medtronic","Airbnb","Electronic Arts","Epic Games","eBay","Riot Games","Bungie","Johnson & Johnson","Rakuten","Goldman Sachs","Teladoc Health","Swiggy","Twilio","Deloitte","Bain & Company","Roche","Philips Healthcare","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Update the previous node\u2019s next pointer to skip the given node. If the given node has a next node, update the next node\u2019s prev pointer to skip the given node."},{hint:"If the given node is the tail (next == None), simply update prev.next = None. Ensure all pointers are updated correctly to avoid memory leaks or dangling references."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Without the head, we cannot traverse backward or forward for extra checks; we must rely only on the given node\u2019s prev and next pointers.",question:"How does this differ from deleting a node when the head is available?"}],interview_followup_questions:[{answer:"Update the previous node\u2019s next and next node\u2019s prev, ensuring circularity is maintained.",question:"How would you modify this for a circular doubly linked list?"},{answer:"Deletion remains O(1), but ensuring sorting requires extra insert operations elsewhere.",question:"What if the given node was part of a sorted doubly linked list?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_insertnodebeforeheadindll",problem_name:"Insert node before head in DLL",problem_slug:"insert-node-before-head-in-dll",problem_rank:9,misc:{tags:["Goldman Sachs","Electronic Arts","Riot Games","eBay","Dropbox","KPMG","Reddit","Lyft","HCL Technologies","Zynga","Roche","Walmart","Red Hat","Cerner","Siemens Healthineers","Target","Snowflake","PwC","Ubisoft","Morgan Stanley","Rakuten","Activision Blizzard","PayPal","Bungie","Broadcom","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Create a new node with value X. Set the new node\u2019s next pointer to the current head. Update the head\u2019s prev pointer to point to the new node"},{hint:"Update head = new_node to reflect the new head. "}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Yes, by adjusting prev and next pointers accordingly.",question:"Can we modify this to insert before any node in the list?"},{answer:"To maintain backward linkage, ensuring bidirectional traversal remains intact.",question:"Why do we update prev of the current head?"}],interview_followup_questions:[{answer:"Update the new node\u2019s prev to the tail and tail\u2019s next to the new head.",question:" How would you modify this for a circular doubly linked list?"},{answer:"Use locking mechanisms to prevent simultaneous modification issues.",question:"How can we make this thread-safe in concurrent environments?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_insertnodebeforetailindll",problem_name:"Insert node before tail in DLL",problem_slug:"insert-node-before-tail-in-dll",problem_rank:10,misc:{tags:["DoorDash","Flipkart","Activision Blizzard","Mastercard","Broadcom","Texas Instruments","Bungie","GE Healthcare","Docker","Zynga","Qualcomm","Alibaba","Red Hat","Instacart","Intel","Roche","NVIDIA","Twilio","Robinhood","Morgan Stanley","AMD","Electronic Arts","Airbnb","Byju's","Oracle","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"If the list is empty (head = NULL), insert X as the only node. If the list has only one node, insert X before the existing node (making X the new head). If the list has at least two nodes, traverse to tail\u2019s previous node and insert X before the tail."},{hint:'Traverse to the second-last node. Insert X by adjusting prev and next pointers."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"No, a singly linked list does not support backward traversal efficiently, making it harder to insert before the tail without full traversal.",question:"Can this problem be solved using a singly linked list?"},{answer:"The problem explicitly asks to insert before the last node, so tail\u2019s previous node is used.",question:"Why do we need to insert before the tail, not after it?"}],interview_followup_questions:[{answer:"Simply append the new node after the last node and update tail.",question:"How would you modify the solution if you were allowed to insert after the tail instead?"},{answer:"Arbitrary insertions require finding the correct position, leading to O(n) traversal.",question:"How does this compare to inserting at arbitrary positions?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_insertnodebefore(kthnode)indll",problem_name:"Insert node before (kth node) in DLL",problem_slug:"insert-node-before-kth-node-in-dll",problem_rank:11,misc:{tags:["Splunk","Zoho","Intel","JPMorgan Chase","Philips Healthcare","Etsy","Square","Shopify","Visa","Mastercard","Instacart","Medtronic","HashiCorp","Electronic Arts","PayPal","Uber","Deloitte","NVIDIA","Robinhood","Roblox","Target","Boston Consulting Group","Johnson & Johnson","Rakuten","Siemens Healthineers","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"If the list is empty (head = NULL), insert X as the only node. If K = 1, insert X before the first node, making it the new head. If K is greater than the number of nodes, insert at the end."},{hint:"Use a pointer to move K-1 steps to locate the (K-1)th node. If K exceeds the length, insert at the end. Update prev and next pointers of adjacent nodes."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Insert X as the only node, making it the new head.",question:"What happens if the list is empty (head = NULL)?"},{answer:"Yes! If K exceeds the number of nodes, append X at the tail.",question:"Can we insert at the end if K > length of list?"}],interview_followup_questions:[{answer:"Finding Kth node remains O(K), but insertion is harder since there\u2019s no prev pointer.",question:"How would this approach change if the list were a singly linked list?"},{answer:"Convert K into a 1-based position from the end using count - |K|.",question:"What if K was given as a negative index (e.g., -1 for inserting before the last node)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basiclinkedlist_insertbeforegivennodeindll",problem_name:"Insert before given node in DLL",problem_slug:"insert-before-given-node-in-dll",problem_rank:12,misc:{tags:["Zomato","Deloitte","OYO Rooms","DoorDash","Pinterest","Epic Systems","Electronic Arts","Walmart","Goldman Sachs","Target","Bain & Company","Airbnb","Johnson & Johnson","Robinhood","Intel","HashiCorp","Dropbox","Instacart","Swiggy","Rakuten","Chewy","IBM","Boston Consulting Group","Unity Technologies","Ubisoft","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Create a new node with value X. Find the previous node (prev_node) of given_node using given_node->prev."},{hint:"Update the pointers: prev_node->next = new_node new_node->prev = prev_node new_node->next = given_node given_node->prev = new_node"}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Unlike singly linked lists (O(n) for backward traversal), DLLs allow direct access to prev, making insertion constant time.",question:"Why does this approach work in O(1)?"},{answer:"Since we are given a node inside the list, and the node before it is guaranteed to exist, we don\u2019t need the head.",question:"Why do we NOT need access to the head?"}],interview_followup_questions:[{answer:"O(n) complexity instead of O(1), since we must traverse from head to find prev_node.",question:"How would this change if the list was a singly linked list (SLL)?"},{answer:"Update given_node->next instead of prev.",question:"How can we modify this to insert X after given_node instead?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"linked-list_logicbuilding",subcategory_name:"Logic Building",subcategory_slug:"logic-building",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"linked-list_linked-list_logicbuilding_addtwonumbersinll",problem_name:"Add two numbers in LL",problem_slug:"add-two-numbers-in-ll",problem_rank:1,misc:{tags:["AMD","Siemens Healthineers","MongoDB","Qualcomm","Cloudflare","Square","Chewy","KPMG","Walmart","Bungie","Visa","Wayfair","Ernst & Young","Flipkart","GE Healthcare","Splunk","Freshworks","Morgan Stanley","Snowflake","Nutanix","Shopify","Seagate Technology","Alibaba","McKinsey & Company","Databricks","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem has a practical real-world application in the development of large integer arithmetic operations, such as those required in cryptography, data encryption, and secure communications. In these fields, numbers used are often so large that they cannot be held in a single computer word, leading to the use of linked lists to store each digit. The ability to add (and by extension, subtract, multiply and divide) such numbers is a foundational requirement. Cryptographic algorithms like RSA, which form the backbone of secure internet transactions, rely heavily on this concept.",hints:[{hint:"Initialize variables carry = 0 for tracking carry-over from previous sum. dummy_head to store the result list. current pointer for traversal."},{hint:"Compute sum = l1.val + l2.val + carry. Extract new_digit = sum % 10, and update carry = sum // 10. Create a new node with new_digit and attach it to the result list. Move l1 and l2 to their next nodes if they exist."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The digits are already in reverse order, so addition naturally starts from the least significant digit (1s place).",question:"Why can we process digits directly without reversing the lists?"},{answer:`Maintain a carry variable to track carry-over from the previous sum.
If carry > 0 after processing all nodes, add a new node with value carry.`,question:"How do we handle carry propagation?"}],interview_followup_questions:[{answer:`Reverse both lists first, then apply the same approach.
Alternatively, use recursion with backtracking.`,question:"How would this approach change if the digits were stored in forward order instead?"},{answer:"Yes, implement borrow handling instead of carry propagation.",question:"Can we modify this to support subtraction instead of addition?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_logicbuilding_segregateoddandevennodesinll",problem_name:"Segregate odd and even nodes in LL",problem_slug:"segregate-odd-and-even-nodes-in-ll",problem_rank:2,misc:{tags:["Swiggy","Western Digital","Lyft","HashiCorp","Byju's","Ernst & Young","Zynga","PayPal","Medtronic","Philips Healthcare","Optum","JPMorgan Chase","Oracle","Reddit","NVIDIA","OYO Rooms","Teladoc Health","Epic Games","Square","Cloudflare","DoorDash","Morgan Stanley","Roblox","ARM","Rockstar Games","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem statement exemplifies the concept of list reordering, which is essential in many real-world applications. For instance, music streaming apps like Spotify or Pandora use similar algorithms to organize queues or playlists. If you ever wanted to change the order of your playlist, where odd numbered songs are grouped at the start followed by the even numbered ones, while keeping the order of the songs in each group the same, a method like this would come in handy. Additionally, such reordering tasks are also common in sorting and optimizing search results in a multitude of software applications.",hints:[{hint:"A brute-force approach would require scanning the list, separating odd/even indices into two lists, and merging them back. However, this results in O(n) space, which is inefficient."},{hint:"Maintain Two Pointers, odd_head for odd-indexed nodes. even_head for even-indexed nodes. odd pointer moves by odd.next = even.next. even pointer moves by even.next = odd.next. Merge Both Groups, Once traversal ends, link the last odd node to even_head."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"This preserves the original order inside each group.",question:"Why do we need two separate lists for odd and even nodes?"},{answer:`Parallel Computing: Scheduling tasks at alternate intervals.
Data Processing: Separating odd/even indexed elements efficiently.`,question:"How does this relate to real-world applications?"}],interview_followup_questions:[{answer:"Simply swap the starting points, i.e., even_head first.",question:"How would this change if we grouped even indices first instead of odd?"},{answer:"Yes! Use k pointers and merge at the end.",question:"Can we modify this to work for k-grouping instead of just odd/even?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_logicbuilding_sortallof0's1'sand2's",problem_name:"Sort a LL of 0's 1's and 2's",problem_slug:"sort-a-ll-of-0's-1's-and-2's",problem_rank:3,misc:{tags:["Target","Bungie","Zoho","Snowflake","Alibaba","Oracle","Uber","Rockstar Games","Activision Blizzard","Swiggy","Splunk","Bain & Company","eBay","Siemens Healthineers","Salesforce","Seagate Technology","Reddit","Chewy","Pinterest","American Express","Visa","Ubisoft","Texas Instruments","Wayfair","Roblox","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"Use three dummy pointers (zero_head, one_head, two_head) to track separate linked lists for 0s, 1s, and 2s."},{hint:"Traverse the original list and distribute nodes into the corresponding lists. Merge the three lists by updating links: Connect the 0s list \u2192 1s list \u2192 2s list Ensure the tail of the last list points to NULL."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Modifying links directly while traversing can lead to broken links or require multiple scans.
Using three separate lists ensures stable sorting without losing track of nodes.`,question:"Why do we need three separate dummy lists instead of modifying the original list?"},{answer:"The algorithm processes the list normally, but no rearrangement is needed since pointers remain unchanged.",question:"What happens if the input list already has sorted 0s, 1s, and 2s?"}],interview_followup_questions:[{answer:`Use bucket sort logic but with hash maps to store frequency counts.
Instead of three pointers, use multiple dummy lists for each unique value.`,question:"How can this be extended to handle a linked list with arbitrary numbers instead of just 0, 1, and 2?"},{answer:`Yes, generalize it by:
Creating k+1 linked lists.
Distributing nodes into respective buckets.
Merging all buckets into a single list.`,question:"Can this be modified to sort linked lists containing values from 0 to k?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_logicbuilding_removenthnodefromthebackofthell",problem_name:"Remove Nth node from the back of the LL",problem_slug:"remove-nth-node-from-the-back-of-the-ll",problem_rank:4,misc:{tags:["Zynga","Byju's","Electronic Arts","Instacart","Rockstar Games","Walmart","IBM","Oracle","Docker","Ubisoft","PayPal","Airbnb","Activision Blizzard","Siemens Healthineers","Micron Technology","Qualcomm","Dropbox","KPMG","Morgan Stanley","Bloomberg","HCL Technologies","Teladoc Health","Stripe","Epic Systems","Reddit","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"A brute-force approach involves:  Finding the length of the linked list (O(n)). Removing the (length - n + 1)th node from the start (O(n))."},{hint:"Use two pointers: fast and slow. Move fast n steps ahead. Move slow and fast together until fast reaches the end. slow will now be just before the node to remove. Adjust pointers to delete the nth node from the end."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`To handle edge cases where the first node needs to be removed (n = length of list).
Without a dummy node, removing the first node requires a separate condition.`,question:"Why do we use a dummy node?"},{answer:"This ensures that when fast reaches the end, slow will be exactly before the node to remove.",question:"Why do we move fast pointer n steps ahead first?"}],interview_followup_questions:[{answer:"The algorithm remains the same, but pointer updates would also need to update prev pointers.",question:" How would this approach change if the linked list were doubly linked?"},{answer:"Yes, using batch processing where the fast pointer moves in parallel for multiple lists.",question:"Can this be extended to remove multiple nth nodes from different lists efficiently?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_logicbuilding_reverseall",problem_name:"Reverse a LL",problem_slug:"reverse-a-ll",problem_rank:5,misc:{tags:["Robinhood","Bungie","Philips Healthcare","Rockstar Games","PayPal","Mastercard","JPMorgan Chase","Bain & Company","Teladoc Health","Roche","Broadcom","IBM","Target","AMD","Cloudflare","Reddit","Stripe","McKinsey & Company","Walmart","Epic Systems","Zomato","DoorDash","OYO Rooms","Ubisoft","Airbnb","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"A brute-force approach would involve: Storing nodes in an array. Reconstructing the linked list from the array in reverse order. Drawback: Uses O(n) extra space, violating the in-place constraint."},{hint:"Use three pointers: prev, current, and next: Initialize prev = NULL, current = head. Iterate through the list, reversing links (current.next = prev). Move prev and current forward. When current becomes NULL, prev points to the new head."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Prev stores the reversed portion,
Current processes the current node,
Next saves the next node before changing the link.`,question:"Why do we need three pointers?"},{answer:`Iterative (O(n) time, O(1) space) \u2192 Best for large lists.
Recursive (O(n) time, O(n) space) \u2192 Uses call stack, making it less efficient for deep recursion.`,question:"How does this compare to using recursion?"}],interview_followup_questions:[{answer:`Yes! Modify the algorithm to:
Traverse to m.
Reverse only the sublist.
Reconnect it to the rest of the list.`,question:"Can we reverse only a portion of the linked list (e.g., positions m to n)?"},{answer:"Swap next and prev pointers for each node.",question:"How does this approach change for a doubly linked list?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"linked-list_faqs(medium)",subcategory_name:"FAQs (Medium)",subcategory_slug:"faqs--medium",subcategory_rank:4,subcategory_type:"study",problems:[{problem_id:"linked-list_linked-list_faqs(medium)_addonetoanumberrepresentedbyll",problem_name:"Add one to a number represented by LL",problem_slug:"add-one-to-a-number-represented-by-ll",problem_rank:0,misc:{tags:["Nutanix","Teladoc Health","PwC","GE Healthcare","JPMorgan Chase","Goldman Sachs","Shopify","OYO Rooms","DoorDash","Siemens Healthineers","Activision Blizzard","HashiCorp","Zynga","Dropbox","Rockstar Games","Intel","Airbnb","Splunk","Alibaba","ARM","Cloudflare","Freshworks","Micron Technology","Boston Consulting Group","Roblox","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem exercises the fundamental concept of linked list manipulation which finds real-world application in modern software systems. For instance, web browsers' history function is implemented via a doubly linked list, each node representing a visited webpage. When a user clicks on a link, a node is added to the list. When they click 'back' or 'forward', the browser traverses the list to the previous or next node, respectively. Thus, being able to manipulate linked lists, like the problem describes, is crucial in creating effective navigation functionality in web browsers.",hints:[{hint:"A brute-force approach involves Converting the linked list to an integer (O(n)). Adding 1, then reconstructing the linked list (O(n)). Drawback: Uses extra memory (O(n)) for number conversion."},{hint:"Reverse the linked list (O(n)) to make the least significant digit the head. Perform normal addition with carry (O(n)). Reverse the linked list back (O(n)) to restore order."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`The easiest place to add 1 is at the least significant digit, which is at the end of the list.
Reversing the list makes addition simpler (just like manual addition from right to left).`,question:"Why do we reverse the list first?"},{answer:`Yes, using recursion (O(n) space) to reach the last node first.
However, recursion consumes stack space, making it less efficient than an iterative solution.`,question:"Can this be solved without reversing the list?"}],interview_followup_questions:[{answer:"Yes! Push all values into a stack (O(n) space), then pop and add 1.",question:"Can this problem be solved using a stack instead of reversing?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(medium)_checkifllispalindromeornot",problem_name:"Check if LL is palindrome or not",problem_slug:"check-if-ll-is-palindrome-or-not",problem_rank:1,misc:{tags:["Intel","Seagate Technology","Bloomberg","Cloudflare","Johnson & Johnson","Teladoc Health","Micron Technology","Lyft","Activision Blizzard","Shopify","Freshworks","MongoDB","Alibaba","Oracle","DoorDash","Boston Consulting Group","PayPal","Robinhood","Morgan Stanley","Roche","Optum","Snowflake","Zynga","Etsy","PwC","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'Linked list operations like this are used in many software applications that require dynamic memory management. In particular, the concept of checking if a linked list is a palindrome has a fun association with text processing software. For example, in apps that check if a string of text is a palindrome (a word, phrase, or sequence that reads the same backwards as forwards, like "madam" or "12321"), a linked list can be utilized to store characters or digits in sequence and then used to validate the palindrome property. This type of string validation is practical in areas such as DNA sequencing where bioinformatics software often needs to check palindromic sequences. In more general terms, this problem signifies the usefulness and versatility of linked lists in managing and manipulating data.',hints:[{hint:"A brute-force approach would involve:  Storing all the digits in an array (O(n) space). Checking if the array is a palindrome (O(n) time). Drawback: Uses O(n) extra space, violating in-place constraints."},{hint:"To check for a palindrome in O(n) time and O(1) space, we use the slow and fast pointer technique:  Find the middle of the list using two pointers (slow and fast). Reverse the second half of the linked list. Compare the first half with the reversed second half."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`We only need to check the latter half against the first half.
This keeps the process in-place (O(1) space).`,question:"Why do we reverse only the second half instead of the full list?"},{answer:`In interview settings, modifying input structure might be disallowed.
If restoration isn\u2019t required, skip this step.`,question:"Why do we restore the list after checking?"}],interview_followup_questions:[{answer:"Find the midpoint using slow-fast pointers, then break the cycle temporarily.",question:"What if the list was circular?"},{answer:"Yes, but recursion uses O(n) stack space, making it less efficient.",question:"Can this be solved recursively?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(medium)_findtheintersectionpointofyll",problem_name:"Find the intersection point of Y LL",problem_slug:"find-the-intersection-point-of-y-ll",problem_rank:2,misc:{tags:["Pinterest","PayPal","ARM","Bain & Company","Western Digital","Texas Instruments","Bloomberg","Walmart","Unity Technologies","Morgan Stanley","OYO Rooms","Riot Games","Splunk","Bungie","MongoDB","Optum","Alibaba","Intel","HCL Technologies","Rakuten","Cloudflare","Dropbox","Airbnb","Wayfair","Roche","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This problem, commonly known as the "Linked List Intersection" problem, serves as a fundamental concept in various real-world scenarios in the software industry. For instance, Git, a widely used version control system, utilizes this concept to identify the "merge base" of two branches - the point where the branches diverged. Finding this merge base is necessary for Git to efficiently and accurately merge the changes from two branches. To find the merge base, Git internally represents the commits as a linked list, with each node pointing to its parent commit(s), and essentially solves the Linked List Intersection problem.',hints:[{hint:"Pointer A starts at headA, and Pointer B starts at headB. When Pointer A reaches the end of list A, move it to headB. When Pointer B reaches the end of list B, move it to headA."},{hint:"If the lists intersect, the pointers will meet at the intersection. If they don\u2019t, both will reach NULL at the same time."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`By switching at the end, both pointers traverse the same total distance.
This guarantees that they meet at the intersection node if one exists.`,question:"Why does switching pointers ensure they meet at the intersection?"},{answer:`No, since we assume lists do not contain cycles.
For cycles, Floyd\u2019s Cycle Detection (Tortoise and Hare Algorithm) is required.`,question:"Can this approach be used if the lists have cycles?"}],interview_followup_questions:[{answer:"We could append one list to the other, making intersection detection simpler.",question:"What if we could modify the lists?"},{answer:"The problem assumes one intersection, but multiple intersections require extra tracking.",question:"How can this be extended to detect multiple intersections?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(medium)_detectaloopinll",problem_name:"Detect a loop in LL",problem_slug:"detect-a-loop-in-ll",problem_rank:3,misc:{tags:["Cloudflare","Western Digital","Wayfair","Salesforce","Lyft","Ubisoft","Airbnb","Target","Johnson & Johnson","Ernst & Young","Medtronic","Morgan Stanley","HCL Technologies","Epic Systems","Broadcom","Twilio","Roblox","Intel","Walmart","Zoho","Rakuten","eBay","McKinsey & Company","Riot Games","PayPal","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"A brute-force approach would use a hash set (O(n) space) to track visited nodes and detect a loop."},{hint:"The Floyd\u2019s Tortoise and Hare Algorithm uses:  A slow pointer (slow) \u2192 moves one step at a time. A fast pointer (fast) \u2192 moves two steps at a time."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The fast pointer moves twice as fast, so: If slow moves x steps, fast moves 2x steps. This guarantees that fast will eventually lap slow inside the cycle.",question:"Why does the fast pointer eventually catch up if a cycle exists? "},{answer:"Yes! After detecting the cycle, reset slow to head and move both slow and fast one step at a time. The node where they meet again is the cycle\u2019s start node.",question:"Can we detect where the cycle begins (pos)? "}],interview_followup_questions:[{answer:"Use two-pointer reset technique: After detection, reset slow to head and move both pointers one step at a time. The first meeting point is the start of the cycle.",question:" How would you modify this to return the node where the cycle begins? "},{answer:"After finding the cycle start node, traverse the cycle to find the last node (tail). Set tail.next = NULL to break the cycle.",question:"What if we wanted to remove the cycle instead of just detecting it? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(medium)_findthestartingpointinll",problem_name:"Find the starting point in LL",problem_slug:"find-the-starting-point-in-ll",problem_rank:4,misc:{tags:["Nutanix","Red Hat","Reddit","Epic Systems","Instacart","Zoho","Ernst & Young","MongoDB","Square","NVIDIA","Robinhood","OYO Rooms","Rockstar Games","Zynga","Cloudflare","Salesforce","Airbnb","Roblox","Databricks","Boston Consulting Group","Cerner","Oracle","Visa","Bain & Company","Bloomberg","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One real-world application of this problem is in detecting memory leaks in computer software. Memory leaks occur when a computer program incorrectly manages memory allocations, leading to a decrease in available memory and causing the system to slow down or crash. By using a linked list and understanding where a 'loop' or cycle starts, programmers can trace back and identify where memory is not being freed properly, leading to efficient bug fixing and enhanced software performance.",hints:[{hint:"A brute-force approach uses a HashSet (O(n) space) to track visited nodes. However, a more efficient O(1) space solution exists using Floyd\u2019s Cycle Detection Algorithm."},{hint:"Use Two Pointers (slow and fast) to detect a cycle. If they meet inside the cycle, reset slow to head and move both pointers one step at a time. The meeting point is the cycle\u2019s start node."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"When slow and fast meet inside the cycle, the distance from head to cycle start (X) is equal to the distance from meeting point to X. Moving both pointers one step at a time guarantees they meet exactly at the cycle\u2019s start node.",question:"Why does resetting slow to head work? "},{answer:" It modifies pointers without extra memory (unlike the O(n) HashSet method).",question:"Why does this approach use O(1) space?"}],interview_followup_questions:[{answer:"HashSet (O(n) space) stores visited nodes but doesn\u2019t modify pointers. Floyd\u2019s Algorithm (O(1) space) is more memory-efficient",question:"How does this compare to the HashSet approach? "},{answer:"Find the cycle\u2019s start node. Traverse to the last node inside the cycle. Set last_node.next = NULL to remove the cycle.",question:"How would you modify the list to remove the cycle? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"find_middle_of_linked_list",problem_name:"Find Middle of Linked List",problem_slug:"find-middle-of-linked-list",problem_rank:5,misc:null,problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(medium)_lengthofloopinll",problem_name:"Length of loop in LL",problem_slug:"length-of-loop-in-ll",problem_rank:6,misc:{tags:["Etsy","Broadcom","DoorDash","Dropbox","Boston Consulting Group","Databricks","Epic Games","Qualcomm","Zomato","Wayfair","eBay","Cerner","Micron Technology","Rockstar Games","Activision Blizzard","Zynga","KPMG","Oracle","Riot Games","Bloomberg","AMD","Western Digital","ARM","GE Healthcare","Flipkart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem underpins many real-world applications particularly in system software and web development fields. It is commonly used in debugging or troubleshooting memory leaks and infinite loops. For example, in garbage collection frameworks used in languages like Java and .NET, understanding the cycle detection in linked lists is crucial to manage memory efficiently and ensure that objects involved in a cycle are not prematurely deallocated. Additionally, in web crawling or network routing algorithms, it's important to prevent infinite loops by understanding and identifying cycles within networks.",hints:[{hint:"A brute-force approach uses a HashSet (O(n) space) to track visited nodes. However, a more efficient O(1) space solution exists using Floyd\u2019s Cycle Detection Algorithm."},{hint:"Use Two Pointers (slow and fast) to detect a cycle. If they meet inside the cycle, initialize a counter and traverse the loop to count its length."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Once they meet inside the cycle, slow traverses the full cycle back to fast, counting the number of steps.",question:"Why does moving slow again count the loop length? "},{answer:"Since fast moves twice as fast, it catches up with slow inside the cycle.",question:"Why does slow always meet fast inside the loop? "}],interview_followup_questions:[{answer:" Yes, but recursion adds O(n) stack space, making it less efficient.",question:"Can we solve this problem using recursion?"},{answer:"A singly linked list cannot have multiple loops since each node has only one next pointer.",question:"What if the list had multiple loops? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(medium)_deletethemiddlenodeinll",problem_name:"Delete the middle node in LL",problem_slug:"delete-the-middle-node-in-ll",problem_rank:7,misc:{tags:["Johnson & Johnson","Electronic Arts","Instacart","JPMorgan Chase","IBM","Etsy","Bungie","Reddit","HCL Technologies","Square","Alibaba","Dropbox","Snowflake","Ubisoft","PayPal","ARM","Western Digital","Stripe","Rakuten","Rockstar Games","Teladoc Health","Cerner","Optum","Uber","Pinterest","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'The underlying concept of this problem can be found in applications such as music streaming apps like Spotify or Apple Music, where a linked list data structure can be used to organise songs in a playlist. Performing operations such as deleting a song, or in this case a "middle node," is a common task in managing these playlists.',hints:[{hint:"A brute-force approach would:  Find the length n of the list (O(n)). Traverse again to the (\u230An/2\u230B)th node and delete it (O(n)). Drawback: Requires two passes (O(n) time)."},{hint:"To delete the middle node in a single pass:  Use two pointers (slow and fast). Move slow one step at a time and fast two steps at a time. When fast reaches the end, slow will be at the middle node. Delete the middle node by skipping it."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Since fast moves twice as fast as slow, slow will reach the middle when fast reaches the end.",question:"Why does the two-pointer approach work? "},{answer:"prev tracks the node before slow, allowing us to delete slow efficiently.",question:" Why do we need the prev pointer? "}],interview_followup_questions:[{answer:"Yes! Use the same approach, but move slow k-1 steps.",question:"Can this be modified to delete the k-th node instead of the middle node? "},{answer:"The logic remains the same, but deletion is easier using prev.",question:"How does this approach change for a doubly linked list? "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"linked-list_faqs(hard)",subcategory_name:"FAQs (Hard)",subcategory_slug:"faqs--hard",subcategory_rank:5,subcategory_type:"study",problems:[{problem_id:"linked-list_linked-list_faqs(hard)_reversellingroupofgivensizek",problem_name:"Reverse LL in group of given size K",problem_slug:"reverse-ll-in-group-of-given-size-k",problem_rank:1,misc:{tags:["Ernst & Young","Rakuten","Morgan Stanley","McKinsey & Company","Epic Games","Riot Games","Chewy","Flipkart","Qualcomm","Visa","Robinhood","Deloitte","HCL Technologies","NVIDIA","Databricks","Cloudflare","Roblox","eBay","Airbnb","Splunk","Pinterest","Seagate Technology","Target","Bungie","Activision Blizzard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This particular programming problem simulates situations in data manipulation where batch processing is required. It's a common task in industries like finance or telecommunication where massive amount of data are handled and operations need to be done in chunks or groups to optimize overall performance. It's also crucial in building features such as 'Undo' in various software like text editors or graphic design tools, where actions are reversed in certain groups, making it very relevant real-world application, indeed.",hints:[{hint:"A brute-force approach would involve:  Extracting all nodes into an array (O(n) space). Reversing every k-sized subarray. Rebuilding the list (O(n) time)."},{hint:"Traverse the list to find k-sized groups. Reverse each k-group iteratively. Maintain pointers to link reversed groups correctly. If a remaining group has fewer than k nodes, keep it as is."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The last remaining nodes (less than k) are not reversed.",question:"What happens if n is not a multiple of k? "}],interview_followup_questions:[{answer:"Introduce a flip flag: Reverse when flip = true Skip when flip = false.",question:" What if we needed to reverse only alternate k-groups? "},{answer:"Recursive method (O(n) space) adds function calls. Iterative (O(1) space) is preferred for large inputs.",question:" How does this compare to recursive reversal? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(hard)_rotateall",problem_name:"Rotate a LL",problem_slug:"rotate-a-ll",problem_rank:2,misc:{tags:["Shopify","HCL Technologies","American Express","Medtronic","Pinterest","Databricks","Activision Blizzard","Micron Technology","Qualcomm","HashiCorp","DoorDash","Johnson & Johnson","Docker","Salesforce","GE Healthcare","Bloomberg","MongoDB","Target","Roche","Square","McKinsey & Company","JPMorgan Chase","Mastercard","Cloudflare","Boston Consulting Group","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One practical application of this programming problem in the real world can be found in the development of audio streaming applications. Developers often implement a form of linked list to manage the queue of songs. When a user decides to skip a certain number of songs, a function similar to rotating a linked list by 'k' places can be used. This underlying concept helps to efficiently manage the play order without needing to rearrange or create new lists.",hints:[{hint:"A brute-force approach would:  Perform k shifts one by one, moving the last node to the front (O(k * n) time). Use extra space (O(n)) by converting the list to an array, shifting elements, and reconstructing the list."},{hint:"Find the Length of the List (O(n))  Determine n (number of nodes) to optimize shifts (k = k % n). Locate the New Tail (O(n))  The new tail is at (n - k)th node. The new head is at (n - k + 1)th node. Modify Links (O(1))  Set new_tail.next = NULL to break the list. Connect the old tail to the old head."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If k > n, shifting n times results in the same list. Example: For n = 5, k = 7, shifting 7 times is the same as shifting 2 times (7 % 5 = 2).",question:"Why do we compute k % n instead of just shifting k times? "},{answer:"Because shifting k places pushes the last k nodes to the front. Example: [1,2,3,4,5], shifting k=2 results in [4,5,1,2,3].",question:"Why is the (n - k)th node the new tail? "}],interview_followup_questions:[{answer:"Instead of n - k, shift the list from the k-th node.",question:"What if we needed to shift left instead of right? "},{answer:"Convert k to positive modulo (k = (k + n) % n).",question:"What if k is negative (shifting left instead of right)? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(hard)_mergesortedlists",problem_name:"Merge two Sorted Lists",problem_slug:"merge-sorted-lists-",problem_rank:3,misc:{tags:["Johnson & Johnson","IBM","Salesforce","Walmart","NVIDIA","Cloudflare","Morgan Stanley","Robinhood","GE Healthcare","Alibaba","KPMG","Epic Systems","Databricks","Bain & Company","Zoho","Chewy","HCL Technologies","Swiggy","Intel","Activision Blizzard","Zynga","OYO Rooms","Philips Healthcare","Epic Games","Oracle","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The problem of merging two sorted linked lists, as stated above, is a heart of many applications that deal with sorted data. For example, in GitHub, when two developers work on the same code base (their own linked lists of code), and after they have made their changes, GitHub has to 'merge' the two versions into one sorted list (code base) while keeping the modifications from both developers intact. This problem simulates that scenario. Such algorithms also underpin 'merge sort', a commonly used sorting algorithm in computer programming. Similarly, database management systems often use such concepts when merging data coming from multiple sources.",hints:[{hint:"A brute-force approach would: Extract all nodes into an array (O(n + m) space). Sort the array (O((n + m) log(n + m)) time). Reconstruct the linked list (O(n + m) time)."},{hint:"Use two pointers (p1 for list1 and p2 for list2). Compare nodes and attach the smaller one to the result list. Advance the pointer of the list from which the node was taken. Once one list is exhausted, attach the remaining nodes from the other list."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"It simplifies handling edge cases (e.g., when the first node should come from list2 instead of list1).",question:" Why do we use a dummy head node? "},{answer:"Use Min-Heap (O(k log n)) for merging k lists.",question:"What if we had more than two lists to merge? "}],interview_followup_questions:[{answer:"Find the tail and properly link the merged list back to it.",question:"How would this approach change for circular linked lists? "},{answer:"Use the same approach but compare in reverse (> instead of <).",question:"What if we needed to merge lists in descending order? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(hard)_flatteningofll",problem_name:"Flattening of LL",problem_slug:"flattening-of-ll",problem_rank:4,misc:{tags:["GE Healthcare","Western Digital","Riot Games","Alibaba","Optum","Unity Technologies","Bloomberg","KPMG","PwC","Morgan Stanley","HCL Technologies","DoorDash","Siemens Healthineers","IBM","Airbnb","Robinhood","Walmart","Docker","Broadcom","Intel","Roche","Goldman Sachs","Rockstar Games","Zoho","Snowflake","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One of the real-world applications of this problem is seen in the representation and manipulation of complex hierarchical structures, such as the Document Object Model (DOM) in web development. The DOM is essentially a tree-like structure where each HTML element is a node with potential child and sibling nodes. The concept of flattening a nested structure is commonly used in DOM manipulation for a variety of reasons, including improving the performance of traversing the structure or simplifying the complexity when applying certain operations. The same principle can be applied to linked lists structures that are used for storing and organizing data in sophisticated applications.",hints:[{hint:"A brute-force approach would:  Extract all nodes into an array (O(n) space). Sort the array (O(N log N) time). Reconstruct the list using the child pointer."},{hint:"Since each child list is already sorted, we can efficiently merge them using:  Priority Queue / Min-Heap (O(N log k)) Iterative Merging (Similar to Merge k Sorted Lists in Linked Lists) (O(N log k)) Divide and Conquer (Merging Pairs of Lists Efficiently) (O(N log k))"}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Sorting all nodes (O(N log N)) would require extracting them into an array, violating in-place constraints. Min-Heap only maintains k elements at a time, making it more memory efficient (O(k) space).",question:" Why do we use a Min-Heap instead of sorting all nodes? "},{answer:"Each child list is already sorted, and we need to merge them efficiently.",question:"Why is this problem similar to merging k sorted lists? "}],interview_followup_questions:[{answer:"Yes! Use Divide & Conquer (Recursive Pairwise Merging): Merge two lists at a time until all lists are merged. This reduces extra space usage but keeps the same O(N log k) complexity.",question:"Can we implement this without a heap (O(N log k)) and still be efficient? "},{answer:"Detect cycles using Floyd\u2019s Cycle Detection (O(n)), then break them before merging.",question:"How would this approach change if we had cycles in the child lists? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(hard)_sortll",problem_name:"Sort LL",problem_slug:"sort-ll",problem_rank:5,misc:{tags:["MongoDB","Optum","Mastercard","PwC","Docker","Reddit","Epic Systems","Etsy","Siemens Healthineers","Broadcom","Flipkart","GE Healthcare","HashiCorp","OYO Rooms","Byju's","Bungie","American Express","Alibaba","eBay","Philips Healthcare","McKinsey & Company","Micron Technology","Seagate Technology","AMD","ARM","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: Sorting a list is one of the most common operations in software development. In real-world applications, the concept of sorting a linked list in a non-decreasing order is extensively used in contact lists apps. For instance, when you look up your contacts in any messenger app or social media platform, names are typically displayed in alphabetically sorted order, which is a non-decreasing order. Behind the scenes, this concept is implemented in their software\u2019s architecture for managing and displaying contacts!",hints:[{hint:"Before merging, we check each child linked list for cycles using Floyd\u2019s Cycle Detection Algorithm. Find the Start of the Cycle and Break the Cycle. "},{hint:"Use a Min-Heap (O(N log k)) or Divide & Conquer (O(N log k)) to merge the sorted lists. Return the flattened sorted list."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If a cycle exists, the merging process enters an infinite loop, preventing termination.",question:"Why do we need to check for cycles before merging? "},{answer:"No, because merging assumes that lists are finite. If cycles exist, merging would never terminate.",question:"Can we remove cycles after merging instead? "}],interview_followup_questions:[{answer:"The same Floyd\u2019s Cycle Detection Algorithm can be applied after merging to check for cycles.",question:"What if a cycle exists in the final merged list instead of the child lists? "},{answer:" Yes, by maintaining visited node references (O(n) space), but Floyd\u2019s Algorithm is preferred for O(1) space.",question:" Can we optimize cycle detection further?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(hard)_cloneallwithrandomandnextpointer",problem_name:"Clone a LL with random and next pointer",problem_slug:"clone-a-ll-with-random-and-next-pointer",problem_rank:6,misc:{tags:["Teladoc Health","Databricks","GE Healthcare","Zoho","Docker","Reddit","Robinhood","Stripe","ARM","Morgan Stanley","Bain & Company","Zomato","Unity Technologies","Etsy","eBay","Dropbox","IBM","Cerner","Epic Games","Airbnb","Nutanix","Shopify","PwC","Johnson & Johnson","Instacart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"A brute-force approach would involve: Creating a copy of each node (O(n) space). Using a HashMap (O(n) space) to store old node \u2192 new node mapping. Fixing the random pointers in a second pass (O(n))."},{hint:"To achieve O(n) time and O(1) space, use:  Interleaving Technique: Clone nodes in-place without extra space. Restoring the random pointers using the interleaved structure. Separating the new list from the old one"}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"It allows direct access to the cloned node for updating random pointers. Eliminates the need for a hashmap (O(n) space).",question:"Why do we interleave the cloned nodes? "}],interview_followup_questions:[{answer:"Yes! The random pointers are assigned correctly before separation.",question:"Can this approach handle circular linked lists? "},{answer:"Yes, instead of inserting clones, store metadata directly inside nodes.",question:"Can we modify the list to store metadata instead of interleaving? "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"linked-list_faqs(dll)",subcategory_name:"FAQS (DLL)",subcategory_slug:"faqs--dll",subcategory_rank:6,subcategory_type:"study",problems:[{problem_id:"linked-list_linked-list_faqs(dll)_deletealloccurrencesofakeyindll",problem_name:"Delete all occurrences of a key in DLL",problem_slug:"delete-all-occurrences-of-a-key-in-dll",problem_rank:1,misc:{tags:["Salesforce","ARM","Shopify","Seagate Technology","Uber","JPMorgan Chase","Reddit","Western Digital","Mastercard","DoorDash","Twilio","Wayfair","MongoDB","eBay","HCL Technologies","Zoho","Robinhood","Medtronic","Zomato","Swiggy","Texas Instruments","Databricks","McKinsey & Company","PwC","Cerner","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One real-world application of this problem can be seen in web browsers. Each tab in a web browser can be thought of as a node in a doubly linked list, with the previous and next tabs being the 'previous' and 'next' nodes. When a user closes a tab (equivalent to deleting a node), the browser re-links the adjacent tabs (similar to updating the 'previous' and 'next' pointers in the node deletion operation). This scenario underscores the importance of algorithms for maintaining and manipulating doubly linked lists in software applications.",hints:[{hint:"A brute-force approach would involve:  Creating a new list while copying only non-target nodes. Reconstructing the DLL (O(n) space)."},{hint:"Traverse the list (O(n)), deleting nodes in-place. Handle three cases efficiently: Head node contains target \u2192 Update head. Middle nodes contain target \u2192 Update prev.next and next.prev. Tail node contains target \u2192 Update prev.next = NULL."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Move head = head.next and set head.prev = NULL.",question:"How do we update head if the first node is deleted? "},{answer:"DLL deletion is easier, since prev pointers eliminate the need for traversal.",question:"How does this compare to deleting from a singly linked list? "}],interview_followup_questions:[{answer:"Break the loop after deleting the first match.",question:"How would you modify this to delete only the first occurrence of target? "},{answer:" Replace if current.val == target with if current.val > target.",question:"What if we needed to delete nodes greater than target instead?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"linked-list_linked-list_faqs(dll)_removeduplicatedfromsorteddll",problem_name:"Remove duplicated from sorted DLL",problem_slug:"remove-duplicated-from-sorted-dll",problem_rank:2,misc:{tags:["Deloitte","ARM","KPMG","Reddit","Splunk","Seagate Technology","Stripe","McKinsey & Company","Roche","Ubisoft","Rakuten","Salesforce","Rockstar Games","Texas Instruments","Bain & Company","Qualcomm","HashiCorp","Pinterest","Intel","Epic Games","Micron Technology","Morgan Stanley","Byju's","GE Healthcare","MongoDB","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"A fun fact related to this problem is that the underlying concept of removing duplicate entries from a data structure is used across a wide variety of software applications. For instance, in database systems, it is critical to avoid redundancy. Techniques similar to the one in this problem are used to keep databases clean and efficient. Additionally, in applications that rely on user inputs, removing duplicates is a common task. This can include systems such as online voting platforms where each user is only allowed to vote once or email systems which prevent sending duplicate emails to the same recipient. Understanding and efficiently coding for these scenarios is a fundamental skill in software development.",hints:[{hint:"A brute-force approach would involve:  Using a HashMap (O(n) space) to track occurrences. Reconstructing the DLL without duplicates."},{hint:"Since the list is already sorted, duplicates will always be adjacent.  Traverse the list (O(n)), removing all occurrences of duplicate values in one pass. Use a dummy node (O(1) space) to handle head modifications cleanly."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Sorted DLL (O(n)) \u2192 Duplicates are adjacent, allowing linear time removal. Unsorted DLL (O(n^2)) \u2192 Requires a hashmap (O(n) space) or nested traversal (O(n^2) time).",question:"How does this compare to removing duplicates from an unsorted DLL? "}],interview_followup_questions:[{answer:"Instead of removing all duplicates, retain only the first.",question:"What if we needed to keep one occurrence of each duplicate? "},{answer:"The logic remains the same, but we lose prev access, requiring additional traversal.",question:"How would this work in a singly linked list? "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"linked-list_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:7,subcategory_type:"contest",problems:[{problem_id:"remove_bad_elements_in_linked_list",problem_name:"Remove bad elements in Linked List",problem_slug:"remove-bad-elements-in-linked-list",problem_rank:0,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"segregate_nodes_into_3_parts_in_ll",problem_name:"Segregate Nodes into 3 parts in LL",problem_slug:"segregate-nodes-into-3-parts-in-ll",problem_rank:1,misc:{tags:[],facts:"NA",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"partition_linked_list",problem_name:"Special Linked List",problem_slug:"special-linked-list",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"bitmanipulation",category_name:"Bit Manipulation",category_slug:"bit-manipulation",category_rank:7,subcategories:[{subcategory_id:"bitmanipulation_theory",subcategory_name:"Theory",subcategory_slug:"theory",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"bitmanipulation_bitmanipulation_theory_introductiontobitsandtricks",problem_name:"Introduction to Bits and Tricks",problem_slug:"introduction-to-bits-and-tricks",problem_rank:1,misc:{tags:["Epic Games","Snowflake","Rockstar Games","Shopify","PwC","Zomato","Bain & Company","NVIDIA","eBay","Epic Systems","Deloitte","Dropbox","DoorDash","Western Digital","Philips Healthcare","Broadcom","Optum","Morgan Stanley","Roblox","Ubisoft","JPMorgan Chase","Red Hat","Flipkart","GE Healthcare","Byju's","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[],difficulty:"Medium",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1}]},{subcategory_id:"bitmanipulation_problems",subcategory_name:"Problems",subcategory_slug:"problems",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"bitmanipulation_bitmanipulation_problems_minimumbitflipstoconvertnumber",problem_name:"Minimum Bit Flips to Convert Number",problem_slug:"minimum-bit-flips-to-convert-number",problem_rank:1,misc:{tags:["Reddit","Ernst & Young","Flipkart","American Express","Byju's","Morgan Stanley","Walmart","Airbnb","Optum","Databricks","Swiggy","Roche","DoorDash","IBM","HCL Technologies","Stripe","NVIDIA","Johnson & Johnson","Zomato","ARM","McKinsey & Company","Twilio","Boston Consulting Group","MongoDB","Electronic Arts","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept underlying this problem is used extensively in error detection and correction during data transmission in networks. The technique, known as Hamming distance, measures the number of bit flips required to convert one binary string into another - in other words, it helps to understand how similar (or dissimilar) two pieces of data are. In real-world applications, such as in telecommunications or computer science, it assists in detecting and correcting errors that might occur due to noise or disruption. Principal applications can be found in information theory, and particularly in coding theory.",hints:[{hint:"To convert start to goal, XOR the two integers. The result of XOR will have 1s at all the bit positions where start and goal differ. "},{hint:'"Count the number of 1s in the XOR result. Each 1 corresponds to a bit that needs to be flipped to convert start into goal. This count gives the minimum number of bit flips required. "'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"XOR is used because it directly identifies the bits that differ between two numbers. A 1 in the XOR result means the corresponding bit in start and goal is different.",question:"What is the purpose of XOR in this problem?"},{answer:"No, only the count of differing bits matters. The problem doesn\u2019t require reordering bits, just flipping them where they differ.",question:"Does the position of bits affect the solution?"}],interview_followup_questions:[{answer:"XOR is a powerful tool for detecting differences between two binary numbers. It has applications in checksum calculations, encryption, and toggling bits efficiently.",question:"What is the significance of XOR in bit manipulation tasks?"},{answer:"You can loop through the binary representation of the XOR result and note the indices of 1s. Each 1 corresponds to a flipped bit position.",question:"How would you extend this to find the positions of the flipped bits?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"bitmanipulation_bitmanipulation_problems_singlenumber-i",problem_name:"Single Number - I",problem_slug:"single-number---i",problem_rank:2,misc:{tags:["Byju's","Optum","Roblox","Instacart","Wayfair","Zoho","Roche","Philips Healthcare","Teladoc Health","HCL Technologies","Visa","Texas Instruments","Activision Blizzard","IBM","Freshworks","GE Healthcare","OYO Rooms","Intel","Rakuten","Cerner","Twilio","Zynga","Cloudflare","Docker","JPMorgan Chase","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is a simplified version of the one faced by data scientists and software engineers while working with big data. It's common in data analysis to encounter datasets where most entities are duplicates and a single unique item must be found. Efficiently solving this problem is an important aspect of tasks like data deduplication, where you want to find and remove duplicate data in databases to improve data quality, or anomaly detection, where the aim is to find data points that are different from the majority to identify potential issues or insights. It is certainly a fundamental concept in the world of big data handling and manipulation.",hints:[{hint:"When you XOR all the numbers in the array, the duplicate numbers cancel out, leaving only the unique number."},{hint:"Traverse the array and XOR all the elements together. At the end of the traversal, the result will be the number that appears only once because the XOR of duplicates will be zero."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Yes, you can use a hash map to count the frequency of each number and return the one with a count of 1. However, this approach uses O(n) time but also requires O(n) space.",question:"Can I solve this without using XOR?"},{answer:"XOR cancels out duplicate numbers because a\u2295a=0. When all numbers in the array are XORed, only the unique number remains, as 0\u2295unique\xA0number=unique\xA0number.",question:"Why does XOR work for this problem?"}],interview_followup_questions:[{answer:"XOR alone wouldn\u2019t work. Instead, you could use bitwise counting to count the occurrences of each bit across all numbers and find the unique number that appears k times.",question:"How would you extend this problem if the unique number appears k times instead of 1?"},{answer:"XOR all elements to get a\u2295b (the XOR of the two unique numbers). Then, isolate a differing bit and use it to partition the numbers into two groups, each containing one unique number.",question:"How would you modify the solution if there were exactly two unique numbers?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"bitmanipulation_bitmanipulation_problems_singlenumber-ii",problem_name:"Single Number - II",problem_slug:"single-number---ii",problem_rank:3,misc:{tags:["Airbnb","Stripe","Electronic Arts","Optum","Docker","Western Digital","Medtronic","Epic Games","Zomato","Dropbox","Cerner","eBay","Deloitte","Nutanix","Micron Technology","Square","Bungie","Byju's","ARM","Wayfair","Instacart","Databricks","Roblox","JPMorgan Chase","KPMG","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem finds real-world applications in data analytics and cybersecurity. Companies often maintain log files for user activities for analysis. Most users will repeat certain activities multiple times, but some unusual activities (like a potential security breach) might only appear once. An algorithm that can efficiently identify these one-time events can alarm security systems about potential threats, triggering necessary preventive actions.",hints:[{hint:"For each bit position (0 to 31), traverse the array and count how many numbers have that bit set to 1. Use the modulo operation (count % 3) to identify whether the unique number has that bit set."},{hint:"After computing the bit values for all positions, combine them to form the unique number. Ensure you handle negative numbers correctly by checking the most significant bit."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"XOR works for cases where every number appears twice except one. However, when numbers appear thrice, XOR fails because it doesn\u2019t account for the triplet elimination logic. Instead, bitwise counting ensures the triplet property is respected.",question:"Why can't XOR alone solve this problem?"},{answer:"For any bit position, the contribution of numbers appearing thrice sums to a multiple of 3. The unique number's contribution remains after applying modulo 3, isolating its bit value.",question:"How does modulo 3 eliminate numbers that appear thrice?"}],interview_followup_questions:[{answer:"Modify the approach to count bit frequencies and use modulo k instead of 3 to identify the unique number's bits.",question:"How would you extend this to handle numbers appearing k-times except one?"},{answer:"The current approach wouldn\u2019t work. For m unique numbers, you\u2019d need to modify the solution to find all such numbers, possibly using a hash set or other data structures.",question:"What if multiple numbers appear only once instead of one?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"bitmanipulation_bitmanipulation_problems_singlenumber-iii",problem_name:"Single Number - III",problem_slug:"single-number---iii",problem_rank:4,misc:{tags:["Seagate Technology","Zoho","Qualcomm","Byju's","Micron Technology","Roche","Walmart","HCL Technologies","Databricks","Bloomberg","Shopify","Airbnb","MongoDB","JPMorgan Chase","Twilio","Freshworks","Square","OYO Rooms","Boston Consulting Group","Dropbox","Morgan Stanley","KPMG","Visa","Lyft","NVIDIA","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem, where you need to find single or unique entities in a large dataset, is related to data analytics and digital forensics. In data analytics, unique entities are of interest because they can indicate anomalies or specific trends. For example, in network traffic analysis, if all IP addresses are supposed to appear twice (incoming and outgoing traffic), but two appear only once, this could signify potential security issues. In digital forensics, finding unique entities can help identify suspicious activities. Particularly, this type of problem can be solved using XOR operation in bit manipulation, a valuable technique in many areas of software, including cryptography and error detection/correction codes.",hints:[{hint:"The XOR result, x\u2295y, will have at least one bit set to 1. This bit represents a position where x and y differ. Isolate this bit by using diff=xor_result&\u2212xor_result, which gives the rightmost set bit."},{hint:"Partition the array into two groups based on whether the numbers have the differentiating bit set (1) or unset (0). One group will contain x, and the other will contain y. XOR the elements in each group to isolate x and y."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"XOR cancels out all duplicate numbers, leaving only the XOR of the two unique numbers. This property allows you to isolate x and y efficiently.",question:"Why does XOR help in finding the two unique numbers?"},{answer:"The rightmost set bit in x\u2295y indicates a position where x and y differ. Partitioning the array based on this bit ensures that x and y fall into different groups.",question:"How does the rightmost set bit help in partitioning the array?"}],interview_followup_questions:[{answer:"XOR alone wouldn\u2019t suffice. You could use a hash map to count frequencies or more advanced algorithms like bitwise counting to isolate k unique numbers.",question:"How would you modify the solution if there were k unique numbers instead of 2?"},{answer:"A brute-force approach (e.g., checking the frequency of each number) takes O(n^2) time. The XOR-based solution is much more efficient at O(n), especially for large datasets.",question:"How does the performance compare to a brute-force approach?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"bitmanipulation_bitmanipulation_problems_dividetwonumberswithoutmultiplicationanddivision",problem_name:"Divide two numbers without multiplication and division",problem_slug:"divide-two-numbers-without-multiplication-and-division",problem_rank:5,misc:{tags:["Seagate Technology","Qualcomm","Optum","Activision Blizzard","Dropbox","Medtronic","Swiggy","Philips Healthcare","GE Healthcare","Instacart","Databricks","Epic Games","Shopify","PwC","Bloomberg","Nutanix","McKinsey & Company","Etsy","Wayfair","HashiCorp","Zynga","Salesforce","Deloitte","Bain & Company","JPMorgan Chase","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept of this problem can be encountered when you are working with systems that handle very large numbers, or when you are working with systems where the traditional division operation is either extremely costly in terms of performance or unavailable for certain data types. For example, Big Data processing libraries such as Apache Hadoop and Apache Spark handle terabytes of data where conventional division may lead to precision errors or performance bottlenecks. In such cases, using alternatives like bit manipulation \u2013 which is the deep-rooted concept in this problem \u2013 can help optimize performance. Similarly, cryptographic algorithms and low-level hardware programming often require such unconventional methods to carry out basic operations.",hints:[{hint:"Instead of repeatedly subtracting the divisor, double its value using bitwise left shifts (divisor << k). Determine the largest multiple of the divisor that can be subtracted from the dividend without making it negative. Subtract this value and repeat until the remainder is less than the divisor."},{hint:"Determine the sign of the result by checking if the dividend and divisor have the same sign. Use sign = 1 if they do, otherwise sign = -1. Convert both numbers to their absolute values for computation."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"After computing the quotient using bitwise operations, compute the remainder as remainder=dividend\u2212(quotient\xD7divisor).",question:"How would you extend this for modular division?"},{answer:"This solution works only for integers. For floating-point division, a completely different approach involving approximation or precision handling (e.g., Newton-Raphson method) would be required.",question:"How would you handle floating-point division?"}],interview_followup_questions:[{answer:"Yes, you can use repeated subtraction. However, it\u2019s inefficient for large values of the dividend and divisor. Bitwise shifting significantly improves performance.",question:"Can this be done without bitwise operations?"},{answer:"Division by zero is undefined. The function should raise an exception or return an error for this invalid input.",question:"What happens if the divisor is 0?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"bitmanipulation_bitmanipulation_problems_powerset-dup",problem_name:"Power Set Bit Manipulation",problem_slug:"power-set-bit-manipulation",problem_rank:6,misc:{tags:["Riot Games","Airbnb","Oracle","Docker","Intel","Qualcomm","Medtronic","Instacart","eBay","Morgan Stanley","Epic Games","HashiCorp","Lyft","PwC","NVIDIA","Flipkart","Rakuten","Roblox","Zoho","Teladoc Health","Dropbox","Splunk","Walmart","Salesforce","DoorDash","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The concept of generating all possible subsets of a set (also known as power set) is commonly used in various realms of software development, particularly in machine learning. For example, in feature selection for a machine learning model, it's crucial to explore different combinations of features (subsets) to see which ones contribute the most to the predictive model's accuracy. This is essentially generating the power set of features. Similarly, it is used in big data analytics, search engines, and data mining for various computation-related tasks involving sets of data.",hints:[{hint:'"Use a recursive function that explores two choices at each step: (a) Include the current element in the subset. (b) Exclude the current element."'},{hint:'"Represent each subset as a bitmask of length n, where each bit indicates whether an element is included (1) or excluded (0). Iterate through all numbers from 0 to 2^n\u22121. For each number, use its binary representation to construct the corresponding subset."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Each element in the array has two choices: it can either be included in or excluded from a subset. For n elements, this results in 2^n combinations.",question:"Why does the power set contain 2^n subsets?"},{answer:"Subsets can be sorted by size or lexicographically after generation by applying a sorting function, though the problem doesn't explicitly require this.",question:"Can subsets be generated in sorted order?"}],interview_followup_questions:[{answer:"Sort the input array first. During recursion or bitmasking, skip duplicate elements by ensuring the same subset isn't constructed multiple times.",question:"How would you extend this problem if duplicates were allowed in the input array?"},{answer:"Modify the recursive function or bitmask approach to track the size of the current subset. Only include subsets of size k in the result.",question:"How would you generate subsets of a specific size k?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"bitmanipulation_bitmanipulation_problems_xorofnumbersinagivenrange",problem_name:"XOR of numbers in a given range",problem_slug:"xor-of-numbers-in-a-given-range",problem_rank:7,misc:{tags:["Medtronic","GE Healthcare","McKinsey & Company","IBM","Oracle","Flipkart","HashiCorp","DoorDash","Philips Healthcare","Square","KPMG","Intel","Bain & Company","Electronic Arts","Broadcom","Optum","Twilio","Byju's","MongoDB","Cloudflare","Nutanix","Salesforce","Instacart","Lyft","Stripe","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem underlines the XOR bitwise operation widely used in cryptography and communication protocols. A real-world application of XOR is the network checksum algorithms in TCP/IP to check the integrity of data. XOR is also used in error detection and correction codes used in data storage and transmission. This is particularly useful as XOR operation produces a unique output for a unique input, enabling quick detection and correction of errors.",hints:[{hint:"The XOR of numbers from L to R can be computed using the cumulative XOR from 0 to R and 0 to L\u22121. This is because XOR(L\xA0to\xA0R)=XOR(0\xA0to\xA0R)\u2295XOR(0\xA0to\xA0L\u22121)."},{hint:"Compute XOR(L\xA0to\xA0R) as f(R)\u2295f(L-1), where f(N) is the XOR of numbers from 0 to N based on the modulo 4 pattern."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The XOR pattern for numbers from 0 to N repeats every 4 numbers because of the binary properties of XOR and the carry propagation in binary addition.",question:"How does the modulo 4 pattern arise?"},{answer:"XOR has the property that a\u2295a=0 and a\u22950=a. This allows numbers outside the range L to R to cancel out when computing XOR(0\xA0to\xA0R)\u2295XOR(0\xA0to\xA0L\u22121).",question:"Why does XOR work for ranges?"}],interview_followup_questions:[{answer:"For multiple ranges, precompute the cumulative XOR for all numbers up to the maximum R across all ranges. Then, use the same logic (f(R)\u2295f(L-1)) for each range in O(1) time.",question:"How would you extend this to compute XOR for multiple ranges?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"bitmanipulation_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:3,subcategory_type:"contest",problems:[{problem_id:"count_set_cost",problem_name:"Count Set Cost",problem_slug:"count-set-cost",problem_rank:0,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"twin_numbers",problem_name:"Twin Numbers",problem_slug:"twin-numbers",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"odd_subsets",problem_name:"Odd Subsets",problem_slug:"odd-subsets",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"greedyalgorithms",category_name:"Greedy Algorithms",category_slug:"greedy-algorithms",category_rank:8,subcategories:[{subcategory_id:"greedyalgorithms_easy/medium",subcategory_name:"Easy",subcategory_slug:"easy",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"greedyalgorithms_greedyalgorithms_easy/medium_assigncookies",problem_name:"Assign Cookies",problem_slug:"assign-cookies",problem_rank:1,misc:{tags:["McKinsey & Company","Rakuten","Roche","Seagate Technology","Zoho","Flipkart","Robinhood","Deloitte","JPMorgan Chase","Oracle","Siemens Healthineers","Riot Games","PwC","AMD","Wayfair","Broadcom","Unity Technologies","Zynga","Visa","ARM","Freshworks","Cloudflare","Texas Instruments","Shopify","Ernst & Young","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This concept is commonly applied in resource allocation in software development where tasks (students) require certain resources (cookies) to function properly. For instance, in Operating Systems, process scheduling algorithms use similar logic to allocate CPU cycles (cookies) to different processes (students) based on their requirements. Task scheduling in Big Data frameworks like Hadoop or Spark also use similar concepts to distribute computational resources such as memory and CPU. Also, in cloud computing, virtual machines or containers (like in Docker) can be considered as students, and the resources (CPU, memory, etc.) are the cookies. The scheduler needs to distribute these resources efficiently among the containers or VMs to ensure optimal usage of resources.",hints:[{hint:"Use one pointer to traverse the Student array and another to traverse the Cookie array. If the current cookie satisfies the current student (i.e., Cookie[j] >= Student[i]), assign the cookie to the student and move both pointers forward."},{hint:"The goal is to assign the smallest cookie possible to each student that can satisfy their requirement. This greedy approach minimizes wasted resources and ensures that more students can be assigned cookies."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Sorting ensures that the smallest available cookie is assigned to the student with the smallest requirement. This maximizes the remaining larger cookies for students with higher requirements.",question:"Why is sorting necessary?"},{answer:"The extra cookies will remain unused since the goal is to maximize the number of students who receive cookies, not the usage of cookies.",question:"What if there are more cookies than students?"}],interview_followup_questions:[{answer:"This problem focuses on maximizing satisfied students, not minimizing unused cookies. To minimize unused cookies, additional logic may be required to assign larger cookies efficiently, but this might reduce the number of satisfied students.",question:"What if you need to minimize the number of unused cookies?"},{answer:"Modify the logic to track shared cookies. For example, divide the cookie size among eligible students and adjust the student requirements accordingly.",question:"What if some students can share a cookie?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"greedyalgorithms_greedyalgorithms_easy/medium_lemonadechange",problem_name:"Lemonade Change",problem_slug:"lemonade-change",problem_rank:2,misc:{tags:["Shopify","Freshworks","HashiCorp","Red Hat","Unity Technologies","Airbnb","Optum","Medtronic","Databricks","AMD","Rakuten","Twilio","Dropbox","HCL Technologies","PayPal","PwC","McKinsey & Company","OYO Rooms","Roblox","Activision Blizzard","Alibaba","Intel","Stripe","American Express","Wayfair","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem can be viewed as a real-time inventory management problem, which is a core part of many business softwares and frameworks. In use cases like retail or restaurant management software, constantly tracking the availability of change or specific denominations of currency is critical to smooth transactions. Understanding how to effectively solve this problem can make automatic payment and billing systems more accurate, improving overall customer experience.",hints:[{hint:"Use variables to keep track of the count of $5 and $10 bills. Since $20 bills cannot be used as change directly, their count is irrelevant for making change."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"If there are no $5 bills and a customer pays with a $10 or $20 bill, return false immediately since change cannot be provided.",question:"What if there are no $5 bills in the array?"},{answer:"The algorithm handles each transaction independently. If enough $10 and $5 bills are available for each $20 transaction, it proceeds. Otherwise, it terminates when change can't be given.",question:"What if there are multiple $20 bills in a row?"}],interview_followup_questions:[{answer:"Extend the tracking system to handle these denominations and implement rules to prioritize their usage for making change.",question:"What happens if customers are allowed to pay with other denominations (e.g., $2, $50)?"},{answer:"Add the initial counts of $5 and $10 bills to the respective variables at the beginning of the simulation.",question:"How would you modify the solution if the booth starts with some initial change?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"greedyalgorithms_greedyalgorithms_easy/medium_jumpgame-i",problem_name:"Jump Game - I",problem_slug:"jump-game---i",problem_rank:3,misc:{tags:["Shopify","Mastercard","Electronic Arts","Byju's","DoorDash","Cloudflare","HashiCorp","Goldman Sachs","Zynga","Etsy","IBM","Optum","PwC","Epic Systems","Splunk","MongoDB","Pinterest","Boston Consulting Group","Broadcom","Zomato","Riot Games","HCL Technologies","Seagate Technology","Salesforce","Stripe","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem's underlying concept is applied in routing and networking protocols. For example, the Internet Protocol (IP) uses routing algorithms based on the shortest path, which is similar conceptually to the array jump problem. These protocols need to calculate the shortest or most efficient route for data packets to reach their destination, making sure data can indeed \u2018jump\u2019 from one node to another until it reaches its final destination, or return 'false' if it cannot. The problem's notion is also central in video game development. For instance, in pathfinding logic for non-playable characters, algorithms evaluate if a character can move from one point to another by 'jumping' through specified navigation points, much like jumping through indices of an array.",hints:[{hint:"Maintain a variable farthest to keep track of the farthest index you can reach as you iterate through the array. For each position i, calculate the maximum reach using farthest=max(farthest,i+nums[i]). If farthest ever becomes greater than or equal to the last index, return true."},{hint:"If at any index i, the farthest reachable position is less than i, it means you cannot proceed further, and reaching the last index is impossible. Exit early and return false."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Large jump lengths don\u2019t impact the algorithm because it only cares about the maximum reachable index at each step, not the specific jump sizes.",question:"What happens if the array contains very large jump lengths?"},{answer:"The problem assumes the array contains only non-negative integers. Negative or non-integer values would require additional validation and adjustments to the logic.",question:"What if the array contains negative or non-integer values?"}],interview_followup_questions:[{answer:"Extend the greedy approach by tracking the end of the current jump range and counting the number of jumps. Increment the jump count whenever the current index exceeds the range of the current jump.",question:"What if you need to find the minimum number of jumps to reach the last index?"},{answer:"Modify the greedy solution to store the path by keeping track of the index from which each jump was made. Backtrack from the last index to reconstruct the path.",question:"What if you want to return the indices of the path taken?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"greedyalgorithms_schedulingandintervalproblems",subcategory_name:"Scheduling and Interval Problems",subcategory_slug:"scheduling-and-interval-problems",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_shortestjobfirst",problem_name:"Shortest Job First",problem_slug:"shortest-job-first",problem_rank:1,misc:{tags:["MongoDB","Riot Games","Ernst & Young","Teladoc Health","Unity Technologies","NVIDIA","Twilio","Instacart","Electronic Arts","HashiCorp","Walmart","Texas Instruments","Wayfair","Visa","Roche","Zomato","DoorDash","PwC","Swiggy","Flipkart","Intel","PayPal","Salesforce","AMD","Ubisoft","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun fact: The Shortest Job First (SJF) or Shortest Job Next (SJN) scheduling policy used in this problem is often utilized by operating systems to manage the execution of processes in real-world applications. This strategy improves process throughput and utilization of CPU, making it suitable for time-sharing systems where efficiency is critical. So next time you're working on your PC or using a mobile app, you can imagine a miniature 'queue' of processes, waiting to be handled based on their required computing time!",hints:[{hint:"First, sort the burst times in ascending order. For each process, the waiting time is the sum of the burst times of all previous processes."},{hint:'"Sum all the waiting times and divide by the total number of processes (n). Use the floor function to return the closest whole number less than or equal to the result. "'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Sorting ensures shorter processes finish earlier, reducing the waiting time for longer processes that follow. This is the essence of the SJF policy.",question:"Why does sorting the burst times minimize the waiting time?"},{answer:"This question focuses on non-preemptive SJF, where all processes are assumed to arrive at time 0. For preemptive SJF (also known as Shortest Remaining Time First), arrival times are considered.",question:"Does SJF consider arrival times of processes?"}],interview_followup_questions:[{answer:"Sort processes by arrival time first. For each time unit, select the process with the shortest burst time among those that have arrived but haven\u2019t been executed.",question:"How would you extend this to include arrival times?"},{answer:"SJF may lead to starvation for processes with long burst times if shorter jobs keep arriving. It also assumes knowledge of burst times in advance, which may not always be possible.",question:"What are the limitations of SJF?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_jobsequencingproblem",problem_name:"Job sequencing Problem",problem_slug:"job-sequencing-problem",problem_rank:2,misc:{tags:["Micron Technology","Roblox","Bloomberg","Instacart","Morgan Stanley","Square","Alibaba","Airbnb","AMD","Roche","PayPal","Siemens Healthineers","Western Digital","Robinhood","Seagate Technology","McKinsey & Company","Johnson & Johnson","eBay","GE Healthcare","Deloitte","Goldman Sachs","Zomato","Freshworks","Riot Games","Unity Technologies","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem is commonly encountered in project management and scheduling software applications. For instance, software that manages tasks and deadlines in industries such as manufacturing, supply chain, or software development often needs to optimise schedules based on profit and deadlines. This involves choosing an order to execute jobs in a way that maximises profit while respecting deadlines \u2014 a real-world application of the job scheduling problem.",hints:[{hint:"Maintain a timeline (e.g., a list of size equal to the maximum deadline) to keep track of which time slots are occupied. For each job, attempt to schedule it at the latest available time slot before its deadline. If no such slot exists, skip the job."},{hint:"Keep a count of the number of successfully scheduled jobs. Add the profit of each scheduled job to the total profit. At the end, return the number of jobs and the maximum profit."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Sorting by profit ensures that jobs with the highest reward are scheduled first, maximizing the total profit. A greedy approach works here because each job takes exactly 1 unit of time.",question:"Why sort jobs by profit?"},{answer:"Jobs with deadlines exceeding the maximum number of jobs can still be scheduled, as long as a free slot exists before their deadline. Deadlines beyond the timeline size don\u2019t affect scheduling logic.",question:"What if a job's deadline is greater than the number of jobs?"}],interview_followup_questions:[{answer:"Overlapping deadlines are automatically handled by the greedy approach. Jobs are scheduled into the latest available slot before their respective deadlines.",question:"How would you handle overlapping deadlines?"},{answer:"For jobs with varying durations, modify the timeline to account for the job's duration. Ensure that consecutive slots are available before scheduling a job.",question:"How would you handle jobs that take more than 1 unit of time?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_nmeetingsinoneroom",problem_name:"N meetings in one room",problem_slug:"n-meetings-in-one-room",problem_rank:3,misc:{tags:["IBM","Seagate Technology","Airbnb","Philips Healthcare","HCL Technologies","ARM","Flipkart","Epic Systems","Bain & Company","Mastercard","Swiggy","Optum","Roblox","Unity Technologies","JPMorgan Chase","Rakuten","KPMG","Siemens Healthineers","Epic Games","Oracle","Lyft","Zomato","Bungie","Zynga","McKinsey & Company","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem, in its essence, is an instance of interval scheduling, which is a classic topic in optimization and used widely across real-world applications. Calendar apps like Google Calendar and Outlook use this principle to optimize meeting schedules. The algorithms behind ride-sharing apps like Uber and Lyft or food delivery services like Grubhub and DoorDash, which need to accommodate multiple delivery or pick-up requests within specific time windows, also leverage this concept. In the realm of cloud computing, similar algorithms are used for optimizing usage of computing resources based on their start and end usage times.",hints:[{hint:"Sort the meetings by their end time in ascending order. If two meetings have the same end time, sort by their start time."},{hint:"Start with the earliest possible meeting. For each subsequent meeting, check if its start time is greater than or equal to the end time of the previously selected meeting."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Sorting by end time ensures that meetings that finish earlier are prioritized. This allows more meetings to be accommodated since the room is freed up sooner.",question:"Why sort by end time?"},{answer:"If all meetings overlap, only one meeting (the one with the earliest end time) can be scheduled.",question:"What if all meetings overlap?"}],interview_followup_questions:[{answer:"If multiple rooms are available, the problem becomes a meeting room allocation problem, which can be solved using a min-heap to track the end times of ongoing meetings.",question:"What if there are multiple meeting rooms?"},{answer:`This is a specific case of interval scheduling maximization, where the goal is to select the maximum number of non-overlapping intervals from a set of intervals.
`,question:"What is the difference between this and the interval scheduling maximization problem?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_non-overlappingintervals",problem_name:"Non-overlapping Intervals",problem_slug:"non-overlapping-intervals",problem_rank:4,misc:{tags:["Rockstar Games","NVIDIA","Seagate Technology","Docker","Goldman Sachs","Freshworks","Salesforce","American Express","Red Hat","Bungie","Morgan Stanley","Nutanix","Swiggy","Texas Instruments","Teladoc Health","Walmart","Zynga","Ubisoft","Mastercard","Bloomberg","Stripe","Reddit","Zomato","Deloitte","McKinsey & Company","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem scenario and its underlying concept is widely used in the area of resource scheduling in the software industry. For instance, in cloud computing, there can be multiple requests for a resource within overlapping intervals. Solving a problem like this could determine the minimum number of requests to be canceled, moved or rescheduled to ensure that resource allocation does not overlap, thereby optimizing resource utilization. Another popular use case is in the organization of tasks or events in calendar apps where the goal is minimizing event overlap to free up time slots.",hints:[{hint:"Sort the intervals based on their end values in ascending order. If two intervals have the same end, sort by their start. After sorting, initialize a variable to keep track of the end time of the last selected interval."},{hint:"Traverse the intervals. If the start time of the current interval is greater than or equal to the end time of the last selected interval, keep the current interval and update the end time. If the intervals overlap (i.e., the start time is less than the current end time), increment the count of intervals to be removed."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Sorting by end time ensures that you select the interval that leaves the most space for subsequent intervals, maximizing the number of non-overlapping intervals that can be included.",question:"Why sort by end time instead of start time?"},{answer:"If two intervals share the same end time, their order doesn\u2019t matter because overlapping will still be avoided by comparing the start times.",question:"What if two intervals have the same end time?"}],interview_followup_questions:[{answer:"For dynamic scenarios, such as adding or removing intervals, consider using a balanced binary search tree or interval tree to efficiently manage overlapping intervals.",question:"How would you handle dynamic updates to the intervals?"},{answer:"Modify the algorithm to calculate and minimize the sum of overlapping durations rather than the count of intervals removed.",question:'What if you wanted to minimize the total "overlap time" instead of removing intervals?'}]},problem_type:"DSA",hasIDE:!0},{problem_id:"greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_insertinterval",problem_name:"Insert Interval",problem_slug:"insert-interval",problem_rank:5,misc:{tags:["Shopify","Alibaba","Roblox","American Express","Riot Games","Airbnb","McKinsey & Company","Bungie","AMD","Philips Healthcare","Activision Blizzard","Snowflake","Mastercard","Target","eBay","Lyft","Oracle","Intel","Bloomberg","Cloudflare","Bain & Company","Swiggy","NVIDIA","Deloitte","Splunk","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of programming problem is used in various time scheduling applications, as seen in Google Calendar or Outlook, to prevent overlapping events and maintain them in sorted order. For instance, when a user wants to insert a new calendar event, the system will check if the time overlaps with other events, then if doesn't, the system inserts the event while preserving chronological order. So, such algorithms are essential to ensure effective time management in calendar-based applications.",hints:[{hint:"Since the input intervals are already sorted and non-overlapping, iterate through the intervals one by one. Compare the newInterval with each interval."},{hint:"Update the start of newInterval to the minimum of its current start and the start of the overlapping interval. Update the end of newInterval to the maximum of its current end and the end of the overlapping interval. Skip the intervals that are merged into newInterval."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"If newInterval is completely disjoint from all intervals, insert it at the correct position based on its start value while maintaining sorted order.",question:"What if newInterval does not overlap with any interval?"},{answer:"If newInterval ends before the first interval starts or starts after the last interval ends, add it directly to the beginning or the end of the result.",question:"What if newInterval is entirely outside the bounds of Intervals?"}],interview_followup_questions:[{answer:"Instead of merging overlapping intervals, collect all intervals that overlap with newInterval into a separate result list and return them.",question:"How would you modify the solution to return overlapping intervals instead of inserting the new interval?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_minimumnumberofplatformsrequiredforarailway",problem_name:"Minimum number of platforms required for a railway",problem_slug:"minimum-number-of-platforms-required-for-a-railway",problem_rank:6,misc:{tags:["Oracle","Medtronic","GE Healthcare","HCL Technologies","Zynga","Reddit","Electronic Arts","Rakuten","Byju's","Airbnb","Broadcom","Ernst & Young","Square","Qualcomm","Flipkart","Rockstar Games","Twilio","Seagate Technology","Micron Technology","Stripe","Alibaba","Johnson & Johnson","Dropbox","American Express","Salesforce","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem uses the algorithm concept of scheduling and resource allocation, which is broadly used in operating system design and database management system to handle multiple processes concurrently. A practical application can be seen in air traffic control systems, where allocating runway and airspace to numerous incoming and outgoing flights in an efficient manner becomes crucial. Similarly, it is used in reservation systems of hotels or even in meeting room booking systems in multi-national companies to maximize utilization and prevent overlapping bookings.",hints:[{hint:"Create two separate arrays: one for arrival times and one for departure times. Sort both arrays independently."},{hint:"Use two pointers. One pointer for arrival times and another for departure times. Traverse the arrays. If a train arrives before the previous train departs, increment the platform count."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"If multiple trains arrive at the same time, the platform count increases for each train. Similarly, if multiple trains depart at the same time, the platform count decreases for each departure.",question:"What happens if multiple trains arrive or depart at the same time?"},{answer:"Sorting ensures that trains are processed in chronological order, allowing you to simulate the actual sequence of events and efficiently manage platforms.",question:"Why sort both arrival and departure arrays?"}],interview_followup_questions:[{answer:"Extend the logic by incorporating the date into the arrival and departure times. Treat the combined date and time as a single timestamp for sorting and processing.",question:"What if trains arrive and depart across multiple days?"},{answer:"Standardize the time format before processing. For example, convert all times to 24-hour format or total minutes since midnight.",question:"How would you handle cases where arrival and departure times are given in different formats?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"greedyalgorithms_hard",subcategory_name:"Hard",subcategory_slug:"hard",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"greedyalgorithms_greedyalgorithms_hard_validparanthesischecker",problem_name:"Valid Paranthesis Checker",problem_slug:"valid-paranthesis-checker",problem_rank:1,misc:{tags:["Square","Electronic Arts","Boston Consulting Group","Zomato","Oracle","PayPal","Johnson & Johnson","Philips Healthcare","MongoDB","HCL Technologies","OYO Rooms","HashiCorp","Optum","GE Healthcare","Dropbox","Bloomberg","Micron Technology","Target","KPMG","Epic Games","Robinhood","Activision Blizzard","NVIDIA","Etsy","Morgan Stanley","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"Use two counters, low and high. low represents the minimum number of unmatched left parentheses. high represents the maximum possible unmatched left parentheses."},{hint:"Ensure that low never drops below 0 during traversal, as that would mean unmatched ) exists. At the end of traversal, check if low == 0, meaning all parentheses can be matched."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`low assumes the * acts as a right parenthesis ) or empty string "", minimizing unmatched left parentheses.
high assumes the * acts as a left parenthesis (, maximizing unmatched left parentheses. Together, they ensure all possible interpretations of * are covered.`,question:"How does low and high handle the flexibility of *?"},{answer:"If the string contains only *, it is always valid since all * can be treated as empty strings.",question:"What if the string contains no ( or )?"}],interview_followup_questions:[{answer:"Modify the logic to handle new constraints. For example, if * could represent multiple parentheses, you might need a more complex simulation or stack-based approach.",question:"What if * had additional roles or constraints?"},{answer:"A stack-based approach keeps track of potential matches directly but is less space-efficient (O(n)). The two-counter method is more efficient (O(1) space) and simpler for this problem.",question:"How does this approach compare to using a stack?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"greedyalgorithms_greedyalgorithms_hard_candy",problem_name:"Candy",problem_slug:"candy",problem_rank:2,misc:{tags:["Docker","McKinsey & Company","DoorDash","Target","Zoho","Twilio","Stripe","Morgan Stanley","Bloomberg","GE Healthcare","Ubisoft","Uber","Walmart","Philips Healthcare","ARM","Salesforce","Zomato","Chewy","Bain & Company","Pinterest","Medtronic","Etsy","NVIDIA","Bungie","Cloudflare","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem models situations involving resource allocation, fairness, and data comparison in real-world applications, such as employee incentives, traffic shaping in network engineering, and grading systems in education platforms. For example, in a rating-based rewards system in HR software, a similar algorithm could be used to decide how much bonus to give to each employee based on their performance ratings, ensuring everyone gets a bonus and those with higher ratings get more.",hints:[{hint:"Start by giving each child one candy to satisfy the first condition (at least one candy per child). Adjust the candy counts during the two passes to ensure the second condition is met."},{hint:"After both passes, the candy count for each child will reflect the minimum candies needed to satisfy the conditions. Sum these values to get the total number of candies required."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If two kids have the same rating, they don\u2019t need more candies than each other. Both can have the same number of candies, and no extra adjustments are needed.",question:"What happens if multiple kids have the same rating?"},{answer:"If all kids have the same rating, give each child exactly one candy. The total number of candies needed will be equal to the number of children.",question:"What if all kids have the same rating?"}],interview_followup_questions:[{answer:"The ratings do not directly affect the time or space complexity, as the algorithm only compares relative values and doesn\u2019t perform any operations based on the magnitude of the ratings.",question:"What if the ratings are very large?"},{answer:"Combine the current solution with a dynamic programming or optimization approach to satisfy additional constraints like budgets or candy limits.",question:"How would you handle cases where multiple constraints are applied (e.g., candies must also be within a budget)?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"greedyalgorithms_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:4,subcategory_type:"contest",problems:[{problem_id:"maximum_xor_length",problem_name:"Maximum XOR Length",problem_slug:"maximum-xor-length",problem_rank:0,misc:{tags:[],facts:"xyz",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"un_palindromic_strings",problem_name:"Un Palindromic Strings",problem_slug:"un-palindromic-strings",problem_rank:1,misc:{tags:[],facts:"xyz",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"maximum_sum",problem_name:"Maximum sum",problem_slug:"maximum-sum",problem_rank:2,misc:{tags:[],facts:"xyz",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"slidingwindow/2pointer",category_name:"Sliding Window / 2 Pointer",category_slug:"sliding-window-and-2-pointer",category_rank:9,subcategories:[{subcategory_id:"slidingwindow/2pointer_patternandtemplate",subcategory_name:"Pattern and Template",subcategory_slug:"pattern-and-template",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_patternandtemplate_theory",problem_name:"Theory",problem_slug:"theory",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1}]},{subcategory_id:"slidingwindow/2pointer_constantwindow",subcategory_name:"Constant Window",subcategory_slug:"constant-window",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_constantwindow_maximumpointsyoucanobtainfromcards",problem_name:"Maximum Points You Can Obtain from Cards",problem_slug:"maximum-points-you-can-obtain-from-cards-",problem_rank:1,misc:{tags:["Salesforce","Byju's","Dropbox","JPMorgan Chase","Rakuten","HashiCorp","NVIDIA","Target","Walmart","OYO Rooms","Databricks","Alibaba","Swiggy","MongoDB","Cloudflare","Deloitte","Visa","Docker","Boston Consulting Group","Lyft","Morgan Stanley","Zoho","Micron Technology","Mastercard","Instacart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem concept is utilized in many areas such as Game Development. In games like Hearthstone or Clash Royale, optimal strategies can be modeled using similar logic, where players have to choose cards with the most scores from a given set given constraints. The algorithm used to solve this problem can be used to build the AI for such competitive card games. So, next time you play a card game, remember that you may be battling against a software program that uses this concept to decide its moves!",hints:[{hint:'"Compute the prefix sum for the first k cards from the beginning of the array. Compute the suffix sum for the last k cards from the end of the array. Combine these sums for all possible combinations (e.g., take i cards from the beginning and k\u2212i cards from the end)."'},{hint:"Start with k cards from the beginning as the initial score. Gradually replace one card from the beginning with one card from the end, updating the score dynamically to find the maximum."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The sliding window ensures that each combination of i cards from the front and k\u2212i cards from the back is considered without recomputing sums from scratch, reducing the time complexity.",question:"Why is the sliding window approach optimal?"}],interview_followup_questions:[{answer:"For non-consecutive cards, the problem becomes a combinatorial selection problem, requiring dynamic programming or backtracking to explore all possible subsets of size k.",question:"How would you modify this to allow choosing non-consecutive cards?"},{answer:"Modify the algorithm to account for alternating turns by simulating the selection process for both players, optimizing for one while considering the opponent\u2019s moves.",question:"How would you handle multiple players selecting cards alternately?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"slidingwindow/2pointer_longestandsmallestwindowproblems",subcategory_name:"Longest and Smallest Window Problems",subcategory_slug:"longest-and-smallest-window-problems",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_longestsubstringwithoutrepeatingcharacters",problem_name:"Longest Substring Without Repeating Characters",problem_slug:"longest-substring-without-repeating-characters",problem_rank:1,misc:{tags:["Dropbox","Shopify","Snowflake","Johnson & Johnson","Wayfair","Micron Technology","Ubisoft","Bungie","Rakuten","Swiggy","NVIDIA","Roblox","Unity Technologies","Stripe","Chewy","Target","Rockstar Games","Bloomberg","McKinsey & Company","Zoho","Twilio","HCL Technologies","PayPal","ARM","Qualcomm","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem statement is a fundamental concept of string parsing used in many applications, such as web browsers and text editors. Specifically, it is used in web security. For example, in JWT (JSON Web Tokens) used for securely transmitting information between parties as a JSON object, there is a need to detect duplication or repetition in the token string. This technique is also used for creating unique user session IDs and securing password hashes by detecting repeating character sequences. On a lighter side, in gaming, this algorithm can help design games with code-breaking themes, where players need to identify non-repeating sequences.",hints:[{hint:"Use a hash map (or set) to store the characters currently in the window. For each character, If it's not in the hash map, add it to the window and update the maximum length. If it's already in the hash map, move the left pointer forward until the duplicate is removed."},{hint:"After processing each character, compute the length of the current window as right\u2212left+1. Keep track of the maximum length encountered during the traversal."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Spaces and special characters are treated like any other character. They can be part of the substring as long as they are not repeated.",question:"What happens if the string contains spaces or special characters?"},{answer:"The sliding window ensures that the algorithm processes each character exactly once, avoiding redundant computations and maintaining a time complexity of O(n).",question:"Why use the sliding window approach?"}],interview_followup_questions:[{answer:"Convert the string to lowercase (or uppercase) before processing to ensure consistency when checking for duplicates.",question:"How would you handle a case-insensitive string?"},{answer:`Track the starting and ending indices of the longest substring during the traversal. Use these indices to extract the substring after completing the algorithm.
`,question:"What if you needed to return the substring itself instead of its length?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_maxconsecutiveonesiii",problem_name:" Max Consecutive Ones III",problem_slug:"max-consecutive-ones-iii",problem_rank:2,misc:{tags:["Roche","American Express","HCL Technologies","JPMorgan Chase","Target","Zoho","Etsy","Walmart","eBay","Zomato","Red Hat","Unity Technologies","NVIDIA","Splunk","Morgan Stanley","Lyft","ARM","Byju's","Reddit","Goldman Sachs","Epic Games","Instacart","KPMG","IBM","Chewy","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`Fun Fact: This programming problem is a pragmatic application of the "sliding window" concept used in fields like video streaming and networking protocols. By controlling the number of bits that can be flipped in a buffer (representing data or packets), developers can optimize data loss or error handling. Algorithms like these help smooth your Netflix binges, ensuring your video doesn't stutter even if some data packets arrive out of order or get lost!`,hints:[{hint:'"Use a sliding window to maintain a range of elements where at most k 0s are flipped into 1s. Keep a counter for the number of 0s in the current window. When the counter exceeds k, move the left pointer forward while decrementing the count of 0s if the leftmost element is 0."'},{hint:'"At each step, calculate the length of the current valid window as right\u2212left+1. Update the maximum length whenever a larger valid window is found. "'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If the array contains no 0s, the entire array is already the longest subarray of consecutive 1s. The output will be n, where n is the length of the array.",question:"What happens if nums contains no 0s?"},{answer:"Yes, in this case, all 0s can be flipped, and the result will be the length of the entire array, as all elements can become 1.",question:"Can k be greater than the number of 0s in the array?"}],interview_followup_questions:[{answer:"Track the start and end indices of the current window whenever a new maximum length is found. Return these indices along with the length.",question:"How would you modify the solution to return the indices of the longest subarray?"},{answer:"Extend the logic to handle both flipping operations by maintaining separate counters for flipped 1s and 0s. Adjust the sliding window to ensure both constraints are satisfied.",question:"How would the problem change if flipping 1s into 0s were also allowed?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_fruitintobaskets",problem_name:" Fruit Into Baskets",problem_slug:"fruit-into-baskets",problem_rank:3,misc:{tags:["Morgan Stanley","Swiggy","AMD","PayPal","Intel","Bungie","OYO Rooms","Broadcom","Lyft","Seagate Technology","Docker","PwC","Epic Systems","Optum","Alibaba","Zynga","Philips Healthcare","Roche","Instacart","Etsy","MongoDB","GE Healthcare","Oracle","HashiCorp","Deloitte","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`This problem is a real-world application of the sliding window algorithm in software development. The sliding window concept is widely used in various programming scenarios like real-time data streaming where the algorithm helps in managing the flow of information. It's also critical in developing systems that handle network traffic management, or even simpler applications such as text editing software for tasks like "find and replace" where the problem domain is huge, but the task can be minimized to a "window" of text.`,hints:[{hint:"Use a sliding window approach. Expand the window to include fruits from the current tree while ensuring the window contains fruits from no more than two different types. If the window contains more than two types, shrink it from the left until it satisfies the two-basket rule."},{hint:"Use a hash map to keep track of the count of each fruit type in the current window. The hash map ensures you can quickly add or remove fruit types as the window expands or shrinks."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If the array contains fewer than three types, the entire array is valid, and the result is the length of the array.",question:"What if there are fewer than three types of fruit?"},{answer:"The hash map tracks the count of each fruit type in the current window. When a fruit type is removed (due to shrinking the window), its count is decremented, and it is removed from the hash map if the count reaches zero.",question:"How is the hash map used to manage the sliding window?"}],interview_followup_questions:[{answer:`Generalize the sliding window approach to handle k baskets by ensuring the hash map contains at most k fruit types at any time. The rest of the logic remains the same.
`,question:"How would you modify the solution if the number of baskets increased?"},{answer:"Along with tracking the maximum size, store the indices of the start and end of the window whenever the maximum is updated. Return these indices.",question:"What if you wanted to return the range of trees contributing to the maximum fruits?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_longestsubstringwithatmostkdistinctcharacters",problem_name:"Longest Substring With At Most K Distinct Characters",problem_slug:"longest-substring-with-at-most-k-distinct-characters",problem_rank:4,misc:{tags:["Cloudflare","Bungie","Nutanix","Roche","Ernst & Young","AMD","Boston Consulting Group","Riot Games","Morgan Stanley","Etsy","Red Hat","Visa","Uber","IBM","Oracle","Johnson & Johnson","Micron Technology","JPMorgan Chase","GE Healthcare","Salesforce","Chewy","MongoDB","Alibaba","Goldman Sachs","Reddit","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The core concept of this problem is used in text and data analysis software. For example, in social media applications, analyzing the length of the longest substring with at most k distinct characters could help detect, track, or summarize major trends/topic, spam posts or even potential security breaches. Similarly, in bioinformatics, this idea could be applicable in DNA sequencing, where the longest substring of a DNA fragment with distinct kinds of nucleotides is important.",hints:[{hint:"Use a sliding window approach to find the longest substring with at most k distinct characters."},{hint:'"Use a hash map to store the frequency of each character in the current window. Keep track of the maximum length encountered during the traversal. "'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If the string contains fewer than k distinct characters, the entire string is the longest substring. The result is the length of the string.",question:"What if the string contains fewer than k distinct characters?"},{answer:"The sliding window ensures that each character is processed at most twice (once when added and once when removed), resulting in an efficient O(n) solution.",question:"Why use a sliding window approach?"}],interview_followup_questions:[{answer:"Dynamically adjust the value of k as you process the string by recalculating the valid window boundaries whenever k changes.",question:"How would you modify the solution to handle dynamic k values during traversal?"},{answer:"Spaces and special characters are treated like any other character and can be part of the substring if their inclusion satisfies the k-distinct condition.",question:"What if the input string contains spaces or special characters?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_longestrepeatingcharacterreplacement",problem_name:"Longest Repeating Character Replacement",problem_slug:"longest-repeating-character-replacement",problem_rank:5,misc:{tags:["Western Digital","Pinterest","Target","Epic Systems","Freshworks","Texas Instruments","Square","Byju's","Databricks","PayPal","Cloudflare","Boston Consulting Group","Zoho","Splunk","Shopify","Riot Games","Oracle","PwC","Micron Technology","Roche","NVIDIA","Flipkart","Philips Healthcare","Uber","HashiCorp","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is highly relevant in search engine algorithms, particularly those dealing with text analysis and processing. The ability to manipulate and understand strings to achieve certain conditions is central to many features, such as autocomplete functions, spell checkers, and text-based recommendation algorithms. For example, Google's Search engine may use similar principles to understand and autocorrect your typos to give you accurate search results.",hints:[{hint:"Use a sliding window to find the longest substring where at most k characters are replaced to make all characters in the substring the same. "},{hint:"Calculate the number of replacements needed to make all characters in the window the same as window_size\u2212max_freq."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The replacement count for a window is the total number of characters in the window minus the frequency of the most common character. This represents the number of characters that need to be changed.",question:"How is the replacement count calculated?"},{answer:"If all characters are identical, the entire string is valid without any replacements. The output is the length of the string.",question:"What happens if all characters in the string are the same?"}],interview_followup_questions:[{answer:"Adjust the frequency map to account for 52 characters (26 lowercase + 26 uppercase), or normalize the case before processing.",question:"How would you handle lowercase letters or a mix of uppercase and lowercase?"},{answer:"Track the start and end indices of the window whenever a new maximum length is found. Use these indices to extract the substring after completing the algorithm.",question:"What if you wanted to return the actual substring instead of its length?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_minimumwindowsubstring",problem_name:"Minimum Window Substring",problem_slug:"minimum-window-substring-",problem_rank:6,misc:{tags:["Shopify","Lyft","Texas Instruments","IBM","Unity Technologies","JPMorgan Chase","Salesforce","Cloudflare","Swiggy","ARM","MongoDB","Boston Consulting Group","Morgan Stanley","American Express","KPMG","Bungie","Epic Systems","Philips Healthcare","Instacart","PayPal","Reddit","Bain & Company","Medtronic","Splunk","Rakuten","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem, often referred to as the Minimum Window Substring problem, is frequently used in text processing applications to find the shortest relevant context for a set of keywords. For instance, in search engines, this concept can be adapted to extract the smallest snippet of text that contains all the search terms inputted by a user. Similarly, in Natural Language Processing (NLP), variations of this problem are used for tasks like entity recognition and sentiment analysis where relevant information needs to be extracted from larger blocks of text.",hints:[{hint:"Use a sliding window with two pointers (left and right) to find the smallest substring in s that contains all characters in t."},{hint:"Create a frequency map for characters in t. Use another map to track the characters in the current window of s."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If any character in t is not present in s, it\u2019s impossible to form a valid substring. The algorithm will return an empty string.",question:"What happens if t contains characters not in s?"},{answer:"The algorithm is designed to return the smallest valid window. If multiple windows have the same size, the first one encountered during traversal is returned.",question:"What if multiple valid windows exist?"}],interview_followup_questions:[{answer:"Track the indices of the smallest valid window during the traversal. Return these indices instead of slicing the substring.",question:"What if you wanted to return the start and end indices instead of the substring?"},{answer:"If t is case-sensitive, the algorithm works as expected. If case insensitivity is required, normalize both s and t (e.g., convert to lowercase) before processing.",question:"What happens if s contains mixed case letters?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"slidingwindow/2pointer_countingsubarrayspattern",subcategory_name:"Counting Subarrays / Substrings Problems",subcategory_slug:"counting-subarrays-and-substrings-problems",subcategory_rank:4,subcategory_type:"study",problems:[{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_countingsubarrayspattern_numberofsubstringscontainingallthreecharacters",problem_name:"Number of Substrings Containing All Three Characters",problem_slug:"number-of-substrings-containing-all-three-characters",problem_rank:1,misc:{tags:["Micron Technology","ARM","Optum","Ernst & Young","Western Digital","Flipkart","Ubisoft","Salesforce","Roche","Dropbox","Epic Games","Goldman Sachs","Epic Systems","Zomato","Philips Healthcare","McKinsey & Company","Splunk","Intel","Cloudflare","Snowflake","Roblox","NVIDIA","Instacart","eBay","Activision Blizzard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem is closely related to the concept of string manipulation and substring search operations, which are fundamental to many real-world applications. For instance, web browsers use similar algorithms to perform quick text search functionality. Furthermore, text editors, word processors, and Integrated Development Environments (IDE's) often have 'Find' or 'Search' features that essentially solve this problem, scanning through the text to find sequences that match the user's input. Counting occurrences can also be relevant in text analysis or processing tasks in natural language understanding, where we might need to quantify the instances of a certain word or character sequence in a document.",hints:[{hint:"Use a sliding window to determine all substrings that contain at least one occurrence of the characters 'a', 'b', and 'c'. "},{hint:"Maintain a frequency map (or array of size 3, one for each of 'a', 'b', and 'c') to track the count of each character in the current window."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Once a window satisfies the condition, shrinking it ensures you explore the smallest valid substrings while maintaining all necessary characters. This reduces redundant checks.",question:"Why does shrinking the window work?"},{answer:"The algorithm efficiently calculates valid substrings without enumerating all possible substrings. It dynamically counts substrings for each valid window, avoiding unnecessary computations.",question:'What happens if characters appear in large consecutive blocks (e.g., "aaaabbbbcccc")?'}],interview_followup_questions:[{answer:"For more characters, increase the size of the frequency map and apply the same sliding window logic. The algorithm's efficiency remains linear, as the fixed size of the map ensures constant-time updates.",question:"How would you extend this to handle more characters?"},{answer:`Modify the frequency map check to ensure each character has exactly one count in the current window before counting substrings.
`,question:"What if the problem asks for exactly one occurrence of each character in the substring?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_countingsubarrayspattern_binarysubarrayswithsum",problem_name:"Binary Subarrays With Sum",problem_slug:"binary-subarrays-with-sum",problem_rank:2,misc:{tags:["Stripe","Nutanix","Lyft","Chewy","Red Hat","Roblox","OYO Rooms","Flipkart","Siemens Healthineers","Cerner","Splunk","Morgan Stanley","Shopify","Robinhood","ARM","Bain & Company","Zoho","AMD","Deloitte","McKinsey & Company","HCL Technologies","Databricks","Target","JPMorgan Chase","Epic Games","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This programming problem utilizes the concept of subarray sum computations, which are widely used in real-world applications such as image processing, where contiguous blocks of pixels need to be processed or manipulated. The concept is also used in data analysis applications where sequential data chunks need to be analyzed for a specified sum, like in financial software for calculating running totals in account statements. As an example, it is used in the implementation of features like "balance within last X transactions".',hints:[{hint:"Use a prefix sum to keep track of the cumulative sum up to each index. Store the count of each prefix sum in a hash map to efficiently determine how many subarrays with a sum equal to the goal exist."},{hint:"For a subarray sum to equal the goal, the relationship current_sum\u2212goal=prefix_sum must hold. Use the hash map to check how many times prefix_sum has occurred so far. Add that count to the result."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The hash map allows O(1) time complexity for lookups and updates, enabling an efficient O(n) solution for this problem.",question:"Why use a hash map for prefix sums?"},{answer:"Subarrays consisting entirely of zeros can satisfy the condition. Use the prefix sum logic to count the number of such subarrays efficiently.",question:"What if all elements are zero and the goal is zero?"}],interview_followup_questions:[{answer:"Modify the algorithm to use cumulative counts and ranges to count subarrays where the sum is less than the goal, potentially requiring a nested loop or Fenwick tree.",question:"What if the problem asked for the count of subarrays where the sum is less than the goal?"},{answer:"Extend the hash map to track counts for multiple goals simultaneously or process each goal separately, depending on constraints.",question:"How would you handle the case of multiple goals (e.g., a list of goals)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"slidingwindow/2pointer_slidingwindow/2pointer_countingsubarrayspattern_countnumberofnicesubarrays",problem_name:"Count number of Nice subarrays",problem_slug:"count-number-of-nice-subarrays",problem_rank:3,misc:{tags:["Activision Blizzard","Riot Games","Boston Consulting Group","Oracle","McKinsey & Company","Epic Games","Deloitte","IBM","Wayfair","GE Healthcare","Teladoc Health","Johnson & Johnson","Broadcom","AMD","Square","Salesforce","ARM","Micron Technology","Ubisoft","Unity Technologies","Target","DoorDash","Reddit","Chewy","HCL Technologies","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This kind of problem is commonly seen in data analysis or data science domains where there is a need to analyze subarrays or sub-data-frames for given conditions. A real-world application might be the analysis of user behavior patterns in tech companies, such as Netflix or YouTube, where they need to identify consecutive streams (i.e., subarrays) with some specific characteristics (in the problem, it's 'k odd numbers'). The retrieved results from this analysis can help to personalize content for users, improving user engagement with the platform.",hints:[{hint:'Identify the positions of odd numbers in the array. Each "nice" subarray must contain exactly k odd numbers. Use a prefix sum or sliding window approach to count subarrays with exactly k odd numbers.'},{hint:"Maintain two pointers (left and right) to define the current subarray. Expand the window by moving the right pointer until the subarray contains k odd numbers. Once the subarray contains k odd numbers, count all valid subarrays starting from the left pointer."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The sliding window approach dynamically adjusts the subarray boundaries to count all valid subarrays efficiently without recalculating overlapping subarrays.",question:"How does the sliding window approach handle overlapping subarrays?"},{answer:"The prefix sum allows you to count subarrays with a specific number of odd numbers efficiently by checking for specific differences in cumulative sums.",question:"Why use prefix sums for this problem?"}],interview_followup_questions:[{answer:"Extend the prefix sum or sliding window logic to handle each k value separately or track counts dynamically using an advanced data structure like a Fenwick tree.",question:"How would you modify the solution to handle multiple values of k?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"slidingwindow/2pointer_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:5,subcategory_type:"contest",problems:[{problem_id:"max_odd_numbers_in_k_window",problem_name:"Max Odd Numbers in K Window",problem_slug:"max-odd-numbers-in-k-window",problem_rank:0,misc:{tags:[],facts:"",hints:[],difficulty:"Medium",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"maximum_length_good_subarray",problem_name:"Maximum Good Subarray Length",problem_slug:"maximum-length-good-subarray",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Medium",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"number_of_subarray_with_or_less_than_k",problem_name:"Number of Subarrays with Or less than K",problem_slug:"number-of-subarray-with-or-less-than-k",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Hard",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"stack/queues",category_name:"Stack / Queues",category_slug:"stack-and-queues",category_rank:10,subcategories:[{subcategory_id:"stack/queues_implementation",subcategory_name:"Implementation",subcategory_slug:"implementation",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"stack/queues_stack/queues_implementation_implementationusingdifferentds",problem_name:"Implementation using different DS",problem_slug:"implementation-using-different-ds",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"extras_extras_basicstacks_implementstackusingarrays",problem_name:"Implement Stack using Arrays",problem_slug:"implement-stack-using-arrays",problem_rank:2,misc:{tags:["Epic Games","AMD","Target","MongoDB","Activision Blizzard","PayPal","Goldman Sachs","Airbnb","Roblox","Teladoc Health","Siemens Healthineers","Byju's","Salesforce","Alibaba","American Express","ARM","Freshworks","Red Hat","Broadcom","Rockstar Games","Intel","Docker","Twilio","Seagate Technology","Unity Technologies","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"The concept of Last-In-First-Out (LIFO) stacks is widely used in real-world scenarios such as managing function calls in programming languages. Each time a function is called, the system 'pushes' contexts onto a call stack. When the function is done, the system 'pops' the context off of the stack and restore the state before the call. This call stack is fundamental to enabling function calls and recursion in virtually all modern programming languages. Similarly, the 'undo' feature in many software applications (like text editors or graphic design tools) is often implemented using a stack.",hints:[{hint:"Calling pop() or top() on an empty stack should raise an appropriate exception."},{hint:"Ensure isEmpty() accurately reflects whether the stack has elements."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"An IndexError will be raised. To handle this, explicitly check if the stack is empty before popping.",question:"What happens if I call pop() on an empty stack? "},{answer:"top() returns the last element without removing it. pop() removes and returns the last element.",question:"What is the difference between top() and pop()? "}],interview_followup_questions:[{answer:"Maintain a secondary minStack that tracks the minimum element at each push operation. When popping, also pop from minStack if the popped element was the minimum.",question:"How would you implement a stack that supports retrieving the minimum element in constant time? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstacks_implementqueueusingarrays",problem_name:"Implement Queue using Arrays",problem_slug:"implement-queue-using-arrays",problem_rank:3,misc:{tags:["Boston Consulting Group","Nutanix","Morgan Stanley","Wayfair","Pinterest","PayPal","Visa","Medtronic","HashiCorp","Johnson & Johnson","Snowflake","Cloudflare","Ernst & Young","Siemens Healthineers","Texas Instruments","NVIDIA","Riot Games","Epic Systems","American Express","Chewy","Robinhood","Flipkart","Bloomberg","Rockstar Games","Dropbox","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Think of it as a line at a checkout counter where the first person in line gets served first."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"A list provides simple enqueue and dequeue operations, but pop(0) is inefficient. A linked list avoids shifting elements, making dequeue operations O(1).",question:"Why use a list instead of another data structure like a linked list? "},{answer:"Yes, but a circular queue implementation would be needed to handle wrap-around conditions.",question:"Can I use an array with a fixed size instead of a dynamic list? "}],interview_followup_questions:[{answer:"Maintain front and rear pointers to track the first and last elements. Use a Node class to store values and references to the next node.",question:"How would you implement a queue using a linked list? "},{answer:"Use a fixed-size array with two pointers (front and rear).",question:"How would you implement a circular queue to optimize memory usage? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstacks_implementstackusingqueue",problem_name:"Implement Stack using Queue",problem_slug:"implement-stack-using-queue",problem_rank:4,misc:{tags:["Bungie","Goldman Sachs","Alibaba","Instacart","Robinhood","Zoho","Siemens Healthineers","Mastercard","Activision Blizzard","Pinterest","HCL Technologies","Freshworks","Bloomberg","Roche","ARM","Reddit","MongoDB","Flipkart","Qualcomm","Square","Western Digital","Electronic Arts","Johnson & Johnson","Lyft","Cloudflare","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"To implement a stack using a single queue, we need to reverse the order of elements within the queue after each push() operation."},{hint:"After inserting a new element, rotate the queue so that the newest element moves to the front."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"A single queue is more space-efficient, but it requires additional rotations during push(). Two queues can also be used, but they require extra storage.",question:"Why use a single queue instead of two queues? "},{answer:"Since queues follow FIFO order, new elements normally go to the end. Rotating the queue moves the newest element to the front, simulating a stack\u2019s LIFO behavior.",question:"Why rotate the queue after every push()? "}],interview_followup_questions:[{answer:"One approach is to enqueue elements into one queue and use the second queue to rearrange them when popping.",question:"How would you implement a stack using two queues? "},{answer:"Use two queues to optimize push() to O(1) while making pop() O(n).",question:"How can you optimize the approach to make push() more efficient? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstacks_implementqueueusingstack",problem_name:"Implement Queue using Stack",problem_slug:"implement-queue-using-stack",problem_rank:5,misc:{tags:["GE Healthcare","Deloitte","eBay","Zoho","Red Hat","Mastercard","DoorDash","Roblox","PayPal","Oracle","KPMG","Dropbox","Alibaba","HCL Technologies","Airbnb","Texas Instruments","Zomato","Chewy","IBM","Twilio","Bain & Company","Siemens Healthineers","Bungie","Roche","Splunk","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"To implement a queue using a single stack, we need to reverse the order when dequeuing elements."},{hint:'"Calling pop() or peek() on an empty queue should raise an appropriate exception. Ensure isEmpty() accurately reflects whether the queue has elements."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Since a stack removes elements in LIFO order, recursion helps reach the first inserted element (bottom of the stack), retrieve it, and restore the order.",question:"Why use recursion to implement pop() and peek()? "},{answer:"Yes, using two stacks would allow pop() to be O(1) amortized, but this implementation requires only one stack.",question:"Can we make pop() more efficient? "}],interview_followup_questions:[{answer:"Use one stack for enqueue (push()) and another for dequeue (pop() and peek()). When pop() is called, transfer elements from the push stack to the pop stack only if the pop stack is empty.",question:"How would you optimize this solution using two stacks? "},{answer:"Maintain a counter that updates when push() or pop() is called.",question:"How would you modify this to return the size of the queue? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstacks_implementstackusinglinkedlist",problem_name:"Implement stack using Linkedlist",problem_slug:"implement-stack-using-linkedlist",problem_rank:6,misc:{tags:["Cerner","Johnson & Johnson","American Express","Rockstar Games","Swiggy","Airbnb","Ernst & Young","Pinterest","Splunk","Bungie","Intel","Micron Technology","KPMG","Roblox","Bloomberg","Seagate Technology","Byju's","Flipkart","PwC","Wayfair","PayPal","Riot Games","Texas Instruments","Siemens Healthineers","Nutanix","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:'"A brute-force approach would use: An array-based stack (O(1) time, O(n) space), but resizing operations make it inefficient."'},{hint:'"Use a singly linked list where: Each node stores a value and a pointer to the next node. The top of the stack is represented by the head of the list."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"A linked list does not require resizing like an array, making it more memory efficient when dealing with unknown sizes. Insertions and deletions at the head take O(1) time, while an array-based stack may require shifting elements when using a fixed-size array.",question:"Why use a linked list instead of an array? "},{answer:"A new node is created and inserted at the head of the linked list in O(1) time.",question:"How does push() work in constant time? "}],interview_followup_questions:[{answer:"A doubly linked list would allow push() and pop() in O(1) but consumes extra memory for storing the prev pointer.",question:"What if we want a doubly linked list instead? "},{answer:"Maintain a secondary stack that keeps track of the minimum value at each push operation.",question:"How would you modify this implementation for a min-stack (stack that retrieves the minimum element in O(1))? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"extras_extras_basicstacks_implementqueueusinglinkedlist",problem_name:"Implement queue using Linkedlist",problem_slug:"implement-queue-using-linkedlist",problem_rank:7,misc:{tags:["Chewy","Dropbox","Rakuten","Medtronic","Cloudflare","Roblox","Seagate Technology","Boston Consulting Group","Cerner","Nutanix","Wayfair","Mastercard","Target","GE Healthcare","Broadcom","PayPal","Teladoc Health","Intel","Ubisoft","Airbnb","Bungie","ARM","Johnson & Johnson","HCL Technologies","Electronic Arts","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:"",hints:[{hint:"Maintain two pointers: Front Pointer: Points to the first node, allowing quick removal. Rear Pointer: Points to the last node, allowing quick insertion. "},{hint:"After the last element is dequeued, reset the rear pointer to None to avoid dangling references. When inserting the first element, both front and rear should point to it."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The function raises an IndexError, ensuring that the caller handles empty queue conditions",question:"What happens if pop() is called on an empty queue? ."},{answer:"Yes, since linked lists dynamically allocate memory, the queue can handle a large number of elements without resizing.",question:"Can this implementation handle large numbers of elements? "}],interview_followup_questions:[{answer:"Maintain a counter that updates when push() or pop() is called.",question:"How would you modify this to return the size of the queue? "},{answer:"Instead of setting rear.next = None, point it back to front, creating a circular structure.",question:"How would you implement a circular queue using a linked list? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_implementation_balancedparanthesis",problem_name:"Balanced Paranthesis",problem_slug:"balanced-paranthesis",problem_rank:8,misc:{tags:["Goldman Sachs","Walmart","Twilio","Rockstar Games","Red Hat","Cerner","Oracle","PwC","GE Healthcare","Johnson & Johnson","Docker","Zomato","Electronic Arts","Western Digital","HCL Technologies","Siemens Healthineers","Ubisoft","ARM","Micron Technology","Uber","Deloitte","Broadcom","Snowflake","Stripe","Robinhood","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe","TCS","Cognizant","Accenture","Infosys","Capgemini","Wipro"],facts:`This problem is essential in software development, particularly in languages like Python, JavaScript, or C++ where brackets are used extensively to delimit blocks of code, arrays and objects. An imbalance in brackets can cause a program to fail, often leading to "syntax error" messages. This real-world application is not exclusive to coding; it's also vital in validation of data formats like JSON and XML, ensuring that they are well-structured and correctly nested.`,hints:[{hint:"Use a stack to store opening brackets (, {, [."},{hint:"When encountering a closing bracket ), }, ]. Check if the top of the stack is its corresponding opening bracket. If matched, pop the opening bracket. Otherwise, return false."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Yes, valid strings can have nested and interleaved brackets, like {[()()]}. The stack ensures the correct closing order by matching the last opened bracket first.",question:"Can there be interleaved brackets? "},{answer:"If only brackets are allowed, ignore any additional characters in preprocessing. If mixed characters are allowed, the logic should be applied only to bracket characters.",question:"What if the string contains non-bracket characters? "}],interview_followup_questions:[{answer:'Extend the bracket pair mapping { "(": ")", "{": "}", "[": "]", "<": ">" } to include the new bracket type.',question:"How would you modify this for different types of brackets (e.g., < and >)? "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"stack/queues_monotonicstack",subcategory_name:"Monotonic Stack",subcategory_slug:"monotonic-stack",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"stack/queues_stack/queues_monotonicstack_nextgreaterelement",problem_name:"Next Greater Element",problem_slug:"next-greater-element",problem_rank:1,misc:{tags:["Electronic Arts","Wayfair","Etsy","Morgan Stanley","Micron Technology","Chewy","KPMG","Rakuten","Teladoc Health","Riot Games","Texas Instruments","OYO Rooms","Robinhood","Airbnb","Twilio","JPMorgan Chase","Seagate Technology","Freshworks","Rockstar Games","Snowflake","Reddit","Red Hat","Databricks","NVIDIA","AMD","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem is directly applicable in the field of data analysis or processing, where efficient computation and extraction of future values based on current values are required. Utilizing such algorithms can assist in identifying trends or making predictions in time series data. For instance, in financial technology applications, this problem can be used to detect the next high point of a given stock's price.",hints:[{hint:"A decreasing stack (monotonic decreasing order) helps efficiently track elements whose next greater element is yet to be found. Traverse the array from right to left"},{hint:"Maintain a stack of elements, ensuring the top element is always greater than the current element."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The next greater element is always on the right, so processing elements in reverse order ensures we efficiently store and retrieve values.",question:"Why traverse from right to left?"},{answer:"A maximum suffix array only tracks the largest element to the right, while a stack efficiently finds the nearest greater element.",question:"Why do we use a stack instead of keeping a maximum suffix array? "}],interview_followup_questions:[{answer:"Instead of maintaining a decreasing stack, use an increasing stack, so the top element is always the smallest encountered.",question:"How can we modify this approach to find the Next Smaller Element (NSE)? "},{answer:"Traverse the array twice while using the stack, simulating a circular array by considering elements from the start after the first pass.",question:"How would you extend this problem to a circular array (where elements wrap around)? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_monotonicstack_nextgreaterelement-2",problem_name:"Next Greater Element - 2",problem_slug:"next-greater-element---2",problem_rank:2,misc:{tags:["Micron Technology","Freshworks","Cerner","Splunk","Byju's","Walmart","Ubisoft","Oracle","MongoDB","Reddit","NVIDIA","Pinterest","Ernst & Young","DoorDash","HCL Technologies","Epic Systems","Stripe","OYO Rooms","KPMG","Cloudflare","Rakuten","Western Digital","Epic Games","Bungie","Flipkart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem reflects the concept of circular buffers which is prevalent in software development, specifically in systems programming. Circular buffers are frequently used in data communications to handle volatile data or in cases where data arrival and consumption does not occur at the same rate. They are also used in multimedia applications for stream buffering. As a specific example, Linux uses circular buffers in the kernel for storing log data. The idea of finding the 'next greater element' in a circular buffer might be useful in designing load balancing algorithms and optimizing data flows.",hints:[{hint:"Since the array is circular, we simulate two passes over the array by iterating twice (2n iterations). For every element."},{hint:"For every element in the first pass, push it onto the stack, and during the second pass, process elements as if the array is extended. If an element finds a greater element in the first or second pass, update its NGE; otherwise, assign -1."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Instead of using modulus arithmetic, simply traverse the array twice to simulate the circular nature. This avoids unnecessary complexity while keeping the solution efficient.",question:"Why do we iterate twice instead of modifying indices? "},{answer:"The stack stores only relevant elements whose NGE is yet to be found. When a greater element appears, we resolve all smaller elements in one go, avoiding redundant checks.",question:"How does the stack help avoid unnecessary comparisons? "}],interview_followup_questions:[{answer:"The problem reduces to the standard Next Greater Element problem using a single-pass stack approach.",question:"How would this solution change if the array was not circular? "},{answer:"Yes, by checking all elements ahead (including wrapping around) for each element, but that results in an inefficient O(n^2) complexity.",question:"Can this be solved using a brute-force approach? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_monotonicstack_asteroidcollision",problem_name:"Asteroid Collision",problem_slug:"asteroid-collision",problem_rank:3,misc:{tags:["Dropbox","Epic Systems","Splunk","IBM","Reddit","Visa","Broadcom","AMD","Flipkart","Pinterest","ARM","Zomato","Zynga","GE Healthcare","Electronic Arts","Robinhood","Stripe","Walmart","Etsy","Target","Red Hat","Intel","Teladoc Health","Johnson & Johnson","Airbnb","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'One real-world application of the "asteroid collision" problem is in video game development. This resembles concepts utilized in physics engines, which simulate and predict the interactions between objects in a game world, such as asteroids colliding and exploding in a space-themed game. If two in-game entities collide, their size (or health points), direction, and velocity are factors that decide the outcome - similar to the asteroid collision problem. Handling these interactions correctly is crucial in developing games with realistic and enjoyable gameplay mechanics.',hints:[{hint:"Iterate through the list, pushing positive asteroids onto a stack since they are moving right."},{hint:"When encountering a negative asteroid, check against the stack. If the top of the stack is a positive asteroid, simulate a collision. If the negative asteroid survives, continue checking until it is either destroyed or pushed onto the stack. The stack maintains the final state of the surviving asteroids."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The smaller asteroid is removed from the stack, and the larger asteroid continues moving.",question:"What happens when a larger asteroid collides with a smaller one? "},{answer:"Yes, a large negative asteroid can destroy multiple right-moving asteroids before stopping.",question:"Can a single asteroid survive after multiple collisions? "}],interview_followup_questions:[{answer:"If asteroids bounced off instead of exploding, a queue might be more suitable for handling movement.",question:"How would the problem change if asteroids could bounce instead of exploding? "},{answer:"A priority queue or event-driven simulation would be needed to track asteroid movement and interactions in both directions.",question:"How would you modify the solution for 2D space (instead of a single row)? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_monotonicstack_sumofsubarrayminimums",problem_name:"Sum of Subarray Minimums",problem_slug:"sum-of-subarray-minimums",problem_rank:4,misc:{tags:["Cerner","Micron Technology","Alibaba","Etsy","Stripe","Splunk","Epic Systems","Mastercard","Rakuten","Byju's","Reddit","Nutanix","Texas Instruments","Walmart","Johnson & Johnson","PwC","Twilio","Epic Games","Roblox","Boston Consulting Group","Unity Technologies","Ernst & Young","Siemens Healthineers","eBay","Swiggy","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem highlights and tests understanding in array manipulation and dynamic programming, which are essential concepts used in a variety of fields in the software industry. For instance, efficient array manipulation like calculating sums of subarrays can be found at the core of data processing libraries used in data analysis and machine learning, such as NumPy and Pandas in Python. Similarly, understanding of subarray computations is also useful in developing efficient algorithms in computer graphics for operations such as image cropping and rotation. This problem's requirement to return the answer modulus a large number is a common technique used when dealing with very large numbers to prevent arithmetic overflow, which is an essential consideration in fields ranging from cryptography to scientific computing.",hints:[{hint:"Instead of generating all subarrays, count how many times each element is the minimum in different subarrays. Use a monotonic increasing stack to determine for each element."},{hint:"Traverse left to right using a monotonic increasing stack to compute L[i]. Traverse right to left using a monotonic increasing stack to compute R[i]."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"It finds how many previous elements are greater than the current one, meaning arr[i] is the minimum for those subarrays.",question:"How does the left boundary (L[i]) calculation work? "},{answer:"Yes, but since we take modulo (10\u2079 + 7) at the end, the calculations remain valid.",question:"Can negative numbers appear in the array? "}],interview_followup_questions:[{answer:"Instead of a monotonic increasing stack, use a monotonic decreasing stack.",question:"How would the approach change for the sum of the maximum elements in each subarray? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_monotonicstack_sumofsubarrayranges",problem_name:"Sum of Subarray Ranges",problem_slug:"sum-of-subarray-ranges",problem_rank:5,misc:{tags:["Splunk","Twilio","Alibaba","Optum","Texas Instruments","NVIDIA","GE Healthcare","Freshworks","Deloitte","Johnson & Johnson","Zomato","Roche","Nutanix","JPMorgan Chase","OYO Rooms","ARM","PayPal","HashiCorp","Instacart","Airbnb","Intel","Unity Technologies","Teladoc Health","Epic Systems","Walmart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fact: The concept underlying this problem is extensively used in financial and data analysis software. In the finance industry, similar algorithms can be applied to analyze the volatility of stock prices over various sub periods. Likewise, in data analysis platforms, they can calculate metrics such as range of values over sliding windows. Calculating the range is a crucial part of identifying the spread of data which can provide insight into the level of variability or volatility within a dataset.",hints:[{hint:"Use two monotonic stacks. One to track next greater elements (for maximum contribution). Another to track next smaller elements (for minimum contribution)."},{hint:"Compute Left bound and Right Bound. The result is the difference between sum of maximum - minimum contributions."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The stack keeps track of previously encountered elements and allows quick retrieval of how many subarrays an element influences.",question:"How does the stack help compute min/max contributions? "},{answer:"To efficiently count how many subarrays include an element as the max or min.",question:"Why do we process both left and right boundaries? "}],interview_followup_questions:[{answer:"Yes, a similar monotonic stack technique can be used to count contributions efficiently.",question:"Can this be extended to finding the sum of absolute differences of subarrays? "},{answer:"Brute force takes O(n\xB2), while the stack-based approach reduces it to O(n).",question:"How does this approach compare to brute-force solutions? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_monotonicstack_removekdigits",problem_name:"Remove K Digits",problem_slug:"remove-k-digits",problem_rank:6,misc:{tags:["Bloomberg","Salesforce","Docker","Pinterest","KPMG","Freshworks","Rakuten","Roche","AMD","Micron Technology","Visa","HCL Technologies","ARM","HashiCorp","Walmart","Byju's","Red Hat","Electronic Arts","Cloudflare","Ernst & Young","Alibaba","Airbnb","Epic Systems","Unity Technologies","Goldman Sachs","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This problem is very akin to the concept of data compression used in many software applications and it also has relevance in financial tech apps. For instance, some apps need to display a large numerical data to users in an abridged format due to screen size limitations. They may abbreviate the number by removing less significant digits, essentially solving a problem similar to the one described. Similarly, in algorithmic trading, removing less significant digits (or "points") from large financial data is a routine task.',hints:[{hint:"Use a monotonic increasing stack to maintain the digits that will form the final number."},{hint:"While iterating through nums. If the current digit is smaller than the top of the stack, remove the top of the stack (if k > 0). Push the current digit onto the stack."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Convert the stack into a string and use .lstrip('0') to remove them. If the result is an empty string, return "0".`,question:"What happens if there are leading zeros in the final result? "}],interview_followup_questions:[{answer:"A stack ensures efficient removal of large digits while maintaining order. A naive greedy approach might repeatedly scan the array, leading to O(nk) time complexity.",question:"How does this compare to a greedy approach without a stack? "},{answer:"Without order constraints, sorting could be applied, but that would change the problem scope.",question:"How would this approach change if we were allowed to rearrange the digits? "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"stack/queues_faqs",subcategory_name:"FAQs",subcategory_slug:"faqs",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"stack/queues_stack/queues_faqs_implementminstack",problem_name:"Implement Min Stack",problem_slug:"implement-min-stack",problem_rank:1,misc:{tags:["Lyft","HashiCorp","Visa","Uber","JPMorgan Chase","Robinhood","Zoho","Qualcomm","Target","OYO Rooms","Stripe","Johnson & Johnson","eBay","Siemens Healthineers","Cloudflare","Unity Technologies","MongoDB","Morgan Stanley","Activision Blizzard","Snowflake","American Express","Flipkart","Shopify","Roche","Docker","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`Designing a stack that supports operations like push, pop, top, and retrieving the minimum element in constant time is very relevant in real-world software development. One classic example is in the design of the "Undo" functionality in many software programs like text editors, image editing tools, or even web browsers. Each action is 'pushed' onto the stack, then 'popped' off when the user triggers the 'Undo' command. The 'top' operation can help show a preview of the action that will be undone next. The 'getMin' operation, though might not be directly applicable in this case, could still be used in related contexts, say, retrieving the minimal state or least resource-intensive action from a stack of operations. This problem is essentially about efficiently managing and accessing data, a central aspect of software development.`,hints:[{hint:"A brute-force approach would store elements in a normal stack and find the minimum by scanning all elements on each getMin() call, resulting in O(n) worst-case time complexity."},{hint:"Use a primary stack (stack) to store elements. Use a secondary stack (min_stack) to track the minimum value at each push. When pushing a new element, compare it with the current minimum. Push the smaller value onto min_stack. When popping, remove from both stacks."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If we only track a single min variable, we lose previous minimums after popping.",question:"Why do we need a min_stack instead of tracking min normally? "},{answer:"min_stack correctly keeps track of previous min values, even if duplicates exist.",question:"What happens when multiple elements have the same minimum value? "}],interview_followup_questions:[{answer:"Use a self-balancing BST (e.g., AVL tree) or a MinHeap.",question:"What if we had to track the k-th minimum instead of just the min? "},{answer:"MinHeap supports min tracking but is O(log n) for insert/remove, while this stack achieves O(1).",question:"How does this compare to a priority queue for tracking the min? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_faqs_slidingwindowmaximum",problem_name:"Sliding Window Maximum",problem_slug:"sliding-window-maximum",problem_rank:2,misc:{tags:["Cerner","Qualcomm","Activision Blizzard","Ubisoft","Bain & Company","Twilio","Reddit","ARM","Epic Systems","Freshworks","NVIDIA","Docker","Cloudflare","McKinsey & Company","Wayfair","Optum","Salesforce","Visa","Unity Technologies","Philips Healthcare","Instacart","Intel","Teladoc Health","American Express","Swiggy","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`A real-world application of this programming problem can be found in financial sectors and data analytics. The concept of a "sliding window" is equivalent to moving averages or other rolling statistics used in stock market, commodity, and economic analysis, where the most recent 'k' data points are used to make forecasts. For instance, a 50-day or 200-day moving average (which are very common in stock market analysis) would be a "sliding window" of 50 or 200 data points, hence the maximum (highest) value within that window can be beneficial in predicting or setting stock sales thresholds.`,hints:[{hint:"Deque-based solution is Maintain a monotonic decreasing deque (stores indices). The front of the deque always holds the max. Remove elements not within the current window. Remove smaller elements before inserting a new element."},{hint:"Max Heap-based solution Maintain a Max Heap (priority queue) of size k. Extract max at each step, ensuring only valid elements remain."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The deque is monotonic decreasing, ensuring that each element is pushed only once and popped at most once, leading to an amortized O(n) complexity. Unlike brute force, we don\u2019t repeatedly scan the window.",question:"Why does the deque approach work in O(n) time? "},{answer:"Indices help track validity of elements. Since the window moves right, older indices outside the window must be removed, which is easier with indices.",question:"Why do we store indices instead of values in the deque? "}],interview_followup_questions:[{answer:"Instead of maintaining a monotonic decreasing deque, maintain a monotonic increasing deque, ensuring the front always holds the minimum.",question:"How would you modify the solution to find the minimum sliding window instead of the maximum? "},{answer:"If the step size is m, process only every mth element, ensuring validity of deque indices while skipping unnecessary updates.",question:"What if the sliding window moves by more than one step instead of 1? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_faqs_trappingrainwater",problem_name:"Trapping Rainwater",problem_slug:"trapping-rainwater",problem_rank:3,misc:{tags:["HCL Technologies","Activision Blizzard","Flipkart","AMD","JPMorgan Chase","Twilio","OYO Rooms","Cloudflare","Salesforce","Qualcomm","HashiCorp","Snowflake","Epic Games","Target","Bloomberg","Shopify","Nutanix","NVIDIA","Roche","DoorDash","Seagate Technology","Rakuten","Riot Games","ARM","Goldman Sachs","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem, also known as the 'Trapping Rain Water' problem, is a prominent example of issues faced in space optimization. This kind of computational approach can be seen in real world applications like cache memory optimization in software applications, or file storage in hard disks where efficient use of space is required. Data scientists may also use the concept in analytics software, determining how best to utilize limited memory resources. Another practical use is in the gaming industry where such algorithms help in creating realistic water surface phenomena.",hints:[{hint:"Compute left_max[i] \u2192 Maximum height from the left up to index i. Compute right_max[i] \u2192 Maximum height from the right up to index i. Water trapped at index i is: max(0, min({left_max}[i], {right_max}[i]) - {height}[i])"},{hint:"Use two pointers (left and right), tracking left_max and right_max. Always process the shorter side first, as it is the limiting factor for trapping water."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Water can only accumulate up to the shortest boundary. If one side is lower, water will overflow, so the shorter height limits trapping.",question:"Why do we take the min(left_max, right_max) for water calculation? "},{answer:"If strictly increasing, no water is trapped ([1,2,3,4] \u2192 0 water). If strictly decreasing, also no water is trapped ([4,3,2,1] \u2192 0 water). Water is only trapped in a valley shape.",question:"What happens when height is strictly increasing or decreasing? "}],interview_followup_questions:[{answer:"Instead of just summing trapped water, store (index, water_amount) where water > 0.",question:"How would you modify the solution to return the indices where water is trapped? "},{answer:"Convert them to absolute depths before applying the same logic.",question:"What if some height[i] values were negative (representing below sea level)? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_faqs_largestrectangleinahistogram",problem_name:"Largest rectangle in a histogram",problem_slug:"largest-rectangle-in-a-histogram",problem_rank:4,misc:{tags:["AMD","OYO Rooms","Cloudflare","Texas Instruments","Freshworks","Rockstar Games","Philips Healthcare","Epic Systems","Swiggy","Byju's","NVIDIA","Mastercard","Zomato","Intel","Shopify","Western Digital","HashiCorp","McKinsey & Company","Teladoc Health","Rakuten","IBM","Optum","Ernst & Young","Salesforce","PwC","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem and its underlying concept are integral to numerous real-world applications including image processing, where you might need to find the largest rectangle in a histogram to optimize cropping strategies. Additionally, such problems are used in statistical data analysis, allowing developers to identify the most significant data ranges in large datasets. Furthermore, it is also an underlying concept for allocation of screen space in some User Interface (UI) design algorithms for maintaining proper layout and to provide better visual aesthetics.",hints:[{hint:"Using Monotonic Stack, Use a monotonic increasing stack to efficiently find the next smaller element on the left and right for each bar. Compute width using nearest smaller elements and calculate the max area."},{hint:"Using Divide and Conquer Find the smallest bar, use it as a partition, and recursively compute the max rectangle in left and right segments."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The width of the rectangle for a bar extends from the nearest smaller bar on the left to the nearest smaller bar on the right. Any bar taller than the current bar does not limit its width.",question:"Why do we need the next smaller elements for computing width? "},{answer:"The largest rectangle is the entire histogram (width = n, height = first bar).",question:"What if all bars have the same height? "}],interview_followup_questions:[{answer:"Convert each row into a histogram and apply this algorithm row-wise.",question:"How would you extend this to a 2D matrix (maximal rectangle in a binary matrix)? "},{answer:"Yes, maintain two max areas and track valid segments dynamically.",question:"Can we find the second-largest rectangle efficiently? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_faqs_maximumrectangles",problem_name:"Maximum Rectangles",problem_slug:"maximum-rectangles",problem_rank:5,misc:{tags:["PwC","Splunk","KPMG","OYO Rooms","Byju's","Dropbox","Airbnb","Databricks","Epic Games","Activision Blizzard","NVIDIA","Bain & Company","GE Healthcare","Etsy","Reddit","Ernst & Young","Riot Games","Chewy","Roche","IBM","Electronic Arts","Robinhood","Uber","Texas Instruments","Walmart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem is at the core of image processing tasks in fields such as computer vision and graphics. For instance, in object detection (like detecting faces in a social media photo tagging system), such algorithms can be used to locate the largest rectangular region containing the object of interest. Also, in digital print and scanning applications, the largest rectangle of 1's can be used to identify and remove noise or to center the focus on the desired object, improving image quality.",hints:[{hint:"Convert each row into a histogram For each row i, compute a heights array, where: heights[j]=heights[j]+1if\xA0matrix[i][j]=1,\xA0else\xA00 This transforms each row into a histogram where heights represent consecutive 1s."},{hint:"Apply the Largest Rectangle in Histogram algorithm.  Use monotonic stack to compute maximum rectangular area row-wise. Track the maximum area across all rows."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"A continuous vertical sequence of 1s can be seen as a bar in a histogram, allowing us to use histogram techniques.",question:"Why do we transform rows into histograms? "},{answer:"Each row contributes to the cumulative heights, which define possible rectangles.",question:" Why do we need to compute heights row-wise? "}],interview_followup_questions:[{answer:"Maintain a rolling heights array and compute the max rectangle as new rows arrive.",question:"How would this be implemented in a streaming environment where rows arrive in real-time? "},{answer:"Yes, by modifying in-place using two auxiliary arrays instead of recomputing heights.",question:"Can we optimize space complexity further? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_faqs_stockspanproblem",problem_name:"Stock span problem",problem_slug:"stock-span-problem",problem_rank:6,misc:{tags:["Riot Games","Square","Reddit","Target","Databricks","Instacart","Walmart","Epic Systems","Electronic Arts","Red Hat","Rakuten","Salesforce","Zynga","Goldman Sachs","Western Digital","Roche","Rockstar Games","Deloitte","Chewy","eBay","Texas Instruments","Dropbox","Lyft","Boston Consulting Group","Medtronic","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem, also known as the Stock Span Problem, is a fundamental concept often used in financial technologies, such as in trading algorithms. It computes how far back the price of a stock has been less than the current price, which can aid decision-making in stock trading. Thus, it's an essential part of the technology that powers applications and platforms for stock markets worldwide. On a conceptual level, it's closely related to the idea of a sliding window in which we monitor a specific parameter over a certain time - a technique broadly used in data streaming processing and time series analysis within the software industry.",hints:[{hint:"A brute-force approach would iterate over all previous days for each i and check how many consecutive days satisfy the condition, leading to O(n\xB2) complexity, which is inefficient for large n."},{hint:"Use a Monotonic Decreasing Stack to efficiently find the previous smaller element. Maintain a stack of indices where prices are in decreasing order. For each day i, pop elements from the stack until a smaller price is found, and calculate the span as: S i =i\u2212previous\xA0smaller\xA0index Push the current index onto the stack."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Storing indices allows us to directly compute the span as the difference between indices.",question:"Why do we store indices instead of prices in the stack? "}],interview_followup_questions:[{answer:"Both use monotonic stacks but in opposite order (NGE finds the next larger element, while this finds the previous smaller element).",question:"How does this problem relate to Next Greater Element (NGE) problems? "},{answer:"Both use monotonic stacks but in opposite order (NGE finds the next larger element, while this finds the previous smaller element).",question:"How does this problem relate to Next Greater Element (NGE) problems? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_faqs_celebrityproblem",problem_name:"Celebrity Problem",problem_slug:"celebrity-problem",problem_rank:7,misc:{tags:["Medtronic","Nutanix","Deloitte","Stripe","Johnson & Johnson","Airbnb","HashiCorp","Visa","Zoho","Cerner","Ubisoft","Swiggy","Red Hat","Square","Activision Blizzard","IBM","Chewy","Twilio","Dropbox","ARM","DoorDash","JPMorgan Chase","KPMG","Databricks","MongoDB","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'The underlying concept of this "Celebrity Problem" is often used in the field of social network analysis and graph theory, particularly in recommendation systems used by popular social media platforms. For instance, they use a similar logic to identify influential users or "celebrities" in the network whose posts are widely circulated or who have a large audience. This aids in effectively target advertising, spread messages, or propagate information effectively.',hints:[{hint:"Start with two pointers, left = 0 and right = N-1. Compare M[left][right]: If M[left][right] = 1 \u2192 left knows right, so left cannot be a celebrity \u2192 move left forward. Else \u2192 right cannot be a celebrity \u2192 move right backward. At the end of this step, we have one candidate."},{hint:"Check if the candidate satisfies both conditions: Row Check: M[candidate][j] should be 0 for all j \u2260 candidate. (Candidate knows no one). Column Check: M[i][candidate] should be 1 for all i \u2260 candidate. (Everyone knows the candidate)."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Row Check: Ensures the candidate does not know anyone. Column Check: Ensures everyone knows the candidate. Both conditions must be met for a valid celebrity.",question:"Why do we check both rows and columns separately in validation? "}],interview_followup_questions:[{answer:"Yes! Represent it as a directed graph, where an edge i \u2192 j means i knows j. A celebrity is a node with N-1 incoming edges and 0 outgoing edges.",question:"Can this problem be solved using a graph representation? "},{answer:"Modify the approach to rank individuals based on the count of 1s in their column.",question:"What if we want to find the top K most famous people instead of just one celebrity? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_faqs_lrucache",problem_name:"LRU Cache",problem_slug:"lru-cache",problem_rank:8,misc:{tags:["Activision Blizzard","Bungie","PwC","Oracle","Stripe","Twilio","Broadcom","HCL Technologies","Zoho","Riot Games","Red Hat","Airbnb","Deloitte","Texas Instruments","Freshworks","Chewy","Rakuten","HashiCorp","Epic Games","Wayfair","Seagate Technology","Unity Technologies","PayPal","Lyft","IBM","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The concept of a Least Recently Used (LRU) cache is widely used in operating systems, databases, and software applications. For instance, in a web browser, it's used to cache web pages. It holds the most recently accessed pages for a quick revisit, discarding the least recently viewed pages when the cache limit is exceeded. The LRU cache data structure, as highlighted in this problem, allows the system to maintain and manage such resources efficiently in O(1) time, improving the overall performance of the software application or system.",hints:[{hint:"A brute-force approach would involve a list or an array, but searching for a key or maintaining usage order requires O(n) complexity."},{hint:"HashMap (key -> Node) for O(1) lookups. Doubly Linked List to track the most recently used (MRU) and least recently used (LRU) elements. head (MRU) \u2192 most recently accessed item. tail (LRU) \u2192 least recently used item (to be removed when the cache exceeds capacity)."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Efficient Deletion: In a singly linked list, removing an item from the middle or tail takes O(n) since there\u2019s no previous pointer. Efficient Insertion: A doubly linked list allows O(1) insertion and removal from both head and tail.",question:"Why do we need a doubly linked list instead of a normal linked list? "},{answer:"This ensures that recently accessed items remain in the cache, and oldest (LRU) items get removed when capacity exceeds.",question:" Why do we move the accessed node to the front (MRU position)? "}],interview_followup_questions:[{answer:"Instead of removing the tail (LRU), remove the head (MRU) when the cache exceeds capacity.",question:"How would this implementation change if we needed a Most Recently Used (MRU) cache? "},{answer:"A heap-based approach takes O(log n) for updates, whereas the HashMap + Linked List approach is O(1).",question:" How does this compare to a priority queue (heap) for LRU eviction? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_faqs_lfucache",problem_name:"LFU Cache",problem_slug:"lfu-cache",problem_rank:9,misc:{tags:["Dropbox","Roblox","Twilio","Western Digital","Deloitte","Instacart","Shopify","Bain & Company","HashiCorp","Docker","Seagate Technology","Siemens Healthineers","American Express","Riot Games","Flipkart","Target","Databricks","Zoho","Uber","PayPal","IBM","Airbnb","Philips Healthcare","Splunk","Robinhood","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The concept of a Least Frequently Used (LFU) cache, as represented in this problem, is routinely used in database systems, web browser caching, and operating systems for page replacement. The idea is to keep the most frequently accessed items in memory for faster retrieval. For instance, web browsers like Chrome or Firefox use LFU to cache web pages. When the cache is full, the least frequently viewed web pages are evicted to make room for new ones. This makes returning to frequently visited sites much faster.",hints:[{hint:"A brute-force approach would iterate over all keys to find the least frequently used key, leading to O(n) time complexity, which is inefficient."},{hint:"Key-Value HashMap (cache) \u2192 Stores {key: (value, frequency)}. Frequency-List HashMap (freq_map) \u2192 Stores {frequency: OrderedDict(keys)}. Maintains order of access (LRU behavior) within the same frequency. A variable min_freq \u2192 Tracks the smallest frequency in freq_map (to identify LFU keys in O(1))."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"freq_map helps us group elements by frequency. This allows us to quickly remove the LFU key (smallest frequency) in O(1) time, instead of scanning all keys (O(n)) in brute-force solutions.",question:"Why do we need freq_map instead of just tracking frequency inside cache? "},{answer:"LRU evicts least recently used keys, while LFU evicts the least frequently used. LFU is better for long-term popularity tracking (e.g., caching web pages with persistent access patterns).",question:" How does this compare to LRU Cache? "}],interview_followup_questions:[{answer:"A min-heap can track (frequency, time, key), but deleting from the middle is O(log n) instead of O(1).",question:"Can we implement LFU using a priority queue instead of freq_map? "},{answer:"Yes, by adding a function to resize capacity, where we evict items until the new capacity is met.",question:" Can we modify LFU to handle dynamically changing capacities? "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"stack/queues_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:4,subcategory_type:"contest",problems:[{problem_id:"stack/queues_stack/queues_contest_countcollisons",problem_name:"Count Collisons",problem_slug:"count-collisons",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_contest_lexicographicallysmalleststring",problem_name:"Lexicographically Smallest String",problem_slug:"lexicographically-smallest-string",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"stack/queues_stack/queues_contest_maximumvalueofasubarray",problem_name:"Maximum Value Of A Subarray",problem_slug:"maximum-value-of-a-subarray",problem_rank:3,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"binarytrees",category_name:"Binary Trees",category_slug:"binary-trees",category_rank:11,subcategories:[{subcategory_id:"binarytrees_theory/traversals",subcategory_name:"Theory/Traversals",subcategory_slug:"theory-and-traversals",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"binarytrees_binarytrees_theory/traversals_introduction",problem_name:"Introduction",problem_slug:"introduction-",problem_rank:0,misc:{tags:["Bloomberg","HCL Technologies","Micron Technology","Roche","AMD","Teladoc Health","Red Hat","Siemens Healthineers","PwC","Reddit","Swiggy","Airbnb","Instacart","Stripe","Optum","Byju's","Zynga","Johnson & Johnson","Dropbox","DoorDash","Roblox","Cloudflare","Intel","Activision Blizzard","eBay"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"binarytrees_binarytrees_theory/traversals_inordertraversal",problem_name:"Inorder Traversal",problem_slug:"inorder-traversal",problem_rank:1,misc:{tags:["Broadcom","ARM","Seagate Technology","Rockstar Games","Freshworks","Johnson & Johnson","PayPal","HashiCorp","Medtronic","Goldman Sachs","Epic Games","Flipkart","Wayfair","Snowflake","Intel","AMD","Morgan Stanley","Uber","Airbnb","Target","Swiggy","MongoDB","Boston Consulting Group","Reddit","Bloomberg","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The Inorder traversal of a binary tree is commonly used in software development to process and manage hierarchical data structures, such as the Document Object Model (DOM) in web development. The DOM represents a web page so programs can change the document structure, style, and content. By using Inorder traversal, developers can efficiently access and manipulate elements on the webpage in the exact order they appear in the HTML markup, allowing for specific and efficient modifications to web content.",hints:[{hint:"Since inorder traversal first visits the left subtree, we use a stack to store nodes while traversing left."},{hint:"Push nodes onto the stack while moving left, process them, then move to their right child."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Inorder is strictly defined for binary trees, but for an n-ary tree, a variation would be to process children in order around the root.",question:"Can this traversal be modified for an n-ary tree? "}],interview_followup_questions:[{answer:"Since an inorder traversal of a BST results in a sorted order, the tree can be reconstructed using its sorted array representation.",question:"How would you use inorder traversal to reconstruct a BST? "},{answer:"Modify the order by adjusting recursion or stack logic to change precedence of left, root, or right processing.",question:"How would you traverse the tree in a depth-first manner but modify the order? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_theory/traversals_preordertraversal",problem_name:"Preorder Traversal",problem_slug:"preorder-traversal",problem_rank:2,misc:{tags:["Deloitte","Ernst & Young","Micron Technology","JPMorgan Chase","Bloomberg","Western Digital","Ubisoft","Roblox","HCL Technologies","Square","ARM","Medtronic","Uber","Target","Boston Consulting Group","Swiggy","Shopify","Chewy","Wayfair","Broadcom","Mastercard","Nutanix","Rockstar Games","Salesforce","Epic Systems","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: Preorder traversal of a binary tree is a classic algorithm often used in practical software development. For instance, in areas involving hierarchical datasets, such as the DOM (Document Object Model) in web development. In this context, each HTML/XML tag can be seen as a node in a tree with a hierarchical structure. Preorder traversal is then used to traverse the entire DOM in an orderly manner, allowing developers to effectively manipulate, add, or remove elements.",hints:[{hint:"A stack can be used to simulate recursion by manually maintaining the order of traversal. Since the traversal visits the root first, push the root onto the stack, process it, then push its right child before left (so the left is processed first)."},{hint:"If the tree is empty (root is None), return an empty list. If the tree is unbalanced, the traversal should still correctly process all nodes."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Preorder is commonly used for creating copies of trees, serializing structures, and constructing expressions in syntax trees.",question:"Why is preorder traversal useful? "},{answer:"The stack ensures that the left subtree is processed first by pushing the right child before the left child.",question:"How does an iterative approach maintain the traversal order? "}],interview_followup_questions:[{answer:"Instead of just left and right, iterate over all children in the correct order using a stack or recursion.",question:"How would you modify this traversal for an n-ary tree? "},{answer:"Preorder itself is a DFS traversal, but can be modified for inorder and postorder as well.",question:"How would you traverse the tree in a depth-first search (DFS) manner? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_theory/traversals_postordertraversal",problem_name:"Postorder Traversal",problem_slug:"postorder-traversal",problem_rank:3,misc:{tags:["Twilio","Johnson & Johnson","McKinsey & Company","Zoho","Micron Technology","PwC","Shopify","Zynga","Riot Games","Bain & Company","Flipkart","Square","Reddit","Walmart","Intel","Lyft","Etsy","Cloudflare","DoorDash","Freshworks","Goldman Sachs","Philips Healthcare","KPMG","MongoDB","PayPal","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Binary tree traversal, including Postorder traversal, is a fundamental concept extensively used in practical software development. For example, it's used in certain database operations (like DBMS), graphic algorithms (in game development), and hierarchical file systems (like in operating systems and file explorer applications) to visit data in a structured and orderly manner. Postorder traversal can specifically be useful in certain mathematical calculations like expression tree evaluations, where the operation resides in the parent node and the operands are in the child nodes. The postorder traversal ensures that the operands are evaluated before the operation is applied.",hints:[{hint:"A stack can be used to simulate recursion manually. Since postorder requires processing root last, push elements in a modified preorder order. Root \u2192 Right \u2192 Left (instead of Root \u2192 Left \u2192 Right)."},{hint:"Use one stack and a prev pointer to track whether traversal is moving up from left or right."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Postorder traversal is useful for deleting trees, evaluating mathematical expressions, and constructing dependency graphs (e.g., compilation order).",question:"Why is postorder traversal useful? "},{answer:"Left-skewed tree: The order follows a bottom-up sequence from left to root. Right-skewed tree: The order follows a right-to-left sequence, with the root last.",question:"How does postorder traversal behave for a skewed tree? "}],interview_followup_questions:[{answer:"Postorder follows depth-first search (DFS), so for level-order traversal, a queue-based approach (BFS) is required instead.",question:"How would you modify the traversal to return nodes level by level? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_theory/traversals_levelordertraversal",problem_name:"Level Order Traversal",problem_slug:"level-order-traversal",problem_rank:4,misc:{tags:["Walmart","Morgan Stanley","Freshworks","Texas Instruments","Bloomberg","Deloitte","Square","Chewy","Zoho","Electronic Arts","KPMG","Bungie","Unity Technologies","Etsy","Optum","Wayfair","Nutanix","Pinterest","Western Digital","MongoDB","Roche","Roblox","Teladoc Health","Mastercard","Salesforce","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun fact: The problem of level order traversal is used extensively in real-world applications. For example, in networking, when you want to send a message to all systems in a network, you can model the network as a binary tree and use level order traversal to reach each system effectively. Additionally, in file systems, this method can help to retrieve files in a hierarchical structure. The implementation of garbage collection in Java also uses this concept of level order traversal, which is crucial in memory management in the software industry.",hints:[{hint:"A queue (FIFO) is the best way to handle level order traversal since we process nodes level by level."},{hint:"Push the root node into the queue. While the queue is not empty, process all nodes at the current level, then enqueue their left and right children for the next level."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"BFS ensures that all nodes at a given depth are processed before deeper nodes, making it ideal for level-wise processing. DFS (e.g., Preorder) follows root \u2192 left \u2192 right, which does not preserve level-wise ordering.",question:"Why use BFS instead of DFS for level order traversal? "},{answer:"Track the number of nodes in the current level before starting a new level, ensuring each level is processed separately.",question:"How do we separate elements by levels? "}],interview_followup_questions:[{answer:"Instead of storing all values in a single list, use a nested list, where each sublist contains values from one level.",question:"How would you modify this traversal to return a list of lists, where each sublist contains nodes at a particular level?  "},{answer:"Use a deque (double-ended queue) and alternate between left-to-right and right-to-left processing at each level.",question:"How can you modify the traversal to print a zigzag (spiral) order? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_theory/traversals_pre,post,inorderinonetraversal",problem_name:"Pre, Post, Inorder in one traversal",problem_slug:"pre,-post,-inorder-in-one-traversal",problem_rank:5,misc:{tags:["Optum","Philips Healthcare","Activision Blizzard","Micron Technology","Riot Games","Cerner","Broadcom","Square","Nutanix","Siemens Healthineers","Docker","KPMG","HashiCorp","Red Hat","Robinhood","McKinsey & Company","Zoho","Qualcomm","Freshworks","Byju's","Texas Instruments","Unity Technologies","Epic Systems","Dropbox","Visa","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"In-order, pre-order and post-order are tree traversal methods that have real-life applications in the software industry. For instance, in database systems, these traversal algorithms are often used to parse expression trees. This is particularly important in optimizing queries or categorizing data. Similarly, compilers make use of these algorithms for syntax checking, creating symbol tables, or generating machine code. Fun fact, file system scans in operating systems are also modeled as a pre-order traversal of a tree!",hints:[{hint:"For Preorder traversal, a stack is used to process nodes before pushing their children. Inorder traversal requires a stack to track nodes while traversing left, processing the root, and then moving right. Postorder traversal is trickier because the root must be visited last, which can be handled using two stacks or by modifying Preorder traversal."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Postorder traversal is used in applications such as deleting a tree, evaluating expressions, and dependency resolution. It processes children before their parent, making it useful for tasks requiring bottom-up computation.",question:"How does Postorder traversal differ in its usage compared to Inorder and Preorder? "},{answer:"While Inorder, Preorder, and Postorder are defined for binary trees, variations exist for n-ary trees. Preorder and Postorder generalize well, but Inorder requires redefining traversal order.",question:"Can traversal be applied to non-binary trees (n-ary trees)? "}],interview_followup_questions:[{answer:"Using Morris Traversal, Inorder and Preorder traversals can be performed in O(1) space by modifying tree pointers temporarily. Postorder traversal is more complex and requires additional modifications or iterative tricks.",question:"How would you perform all three traversals using constant space? "},{answer:"Maintaining a depth counter while traversing (either recursively or iteratively) allows returning node values along with their depths. A queue-based level-order traversal can also help in structured depth tracking.",question:"What modifications are needed if we also want to track node depths? "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarytrees_mediumproblems",subcategory_name:"Medium Problems",subcategory_slug:"medium-problems",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"binarytrees_binarytrees_mediumproblems_maximumdepthinbt",problem_name:"Maximum Depth in BT",problem_slug:"maximum-depth-in-bt",problem_rank:1,misc:{tags:["Zoho","Mastercard","Wayfair","Freshworks","Electronic Arts","Qualcomm","Target","Bungie","Bain & Company","Zynga","Nutanix","Broadcom","GE Healthcare","Teladoc Health","Cerner","Etsy","HCL Technologies","Red Hat","NVIDIA","Flipkart","DoorDash","OYO Rooms","McKinsey & Company","ARM","Stripe","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'Fun Fact: The "maximum depth of binary tree" problem commonly occurs in real-world scenarios such as managing organisational hierarchies, implementing game trees in artificial intelligence, and structuring file systems in operating systems. For instance, it helps in determining the length of the longest inheritance chain in an object-oriented system or the maximum call stack depth in a recursive function. Understanding and implementing it efficiently is essential in ensuring speedy traversals, retrievals, and manipulation of such tree-based data structures.',hints:[{hint:"Since the depth of a node is determined by its deepest child, we can use a divide-and-conquer approach: the depth of a node is 1 + max(depth of left subtree, depth of right subtree). This naturally fits a recursive Depth-First Search (DFS) strategy."},{hint:"An iterative approach can be used with Breadth-First Search (BFS). By using a queue, we traverse each level of the tree, counting the number of levels until we reach the last node. BFS is particularly useful for large trees since it avoids deep recursion stack issues."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The depth of a tree is determined by the longest path, not the total number of nodes. If we sum both depths, we would be counting paths from both sides simultaneously, which is incorrect.",question:"Why do we take the maximum of the left and right subtree depths instead of summing them? "},{answer:"BFS processes nodes level by level, so counting the levels naturally gives the maximum depth. The last processed level is the deepest level of the tree.",question:" How does BFS help in calculating maximum depth iteratively? "}],interview_followup_questions:[{answer:"Instead of taking max(left, right), we take min(left, right). However, care must be taken: if a node has only one child, we must not consider the missing child\u2019s depth as 0. Instead, the depth should be computed from the existing child.",question:"How would you modify this approach to find the minimum depth of a binary tree? "},{answer:` What if the input is given as an array (heap representation)?
For a binary heap stored in an array, the depth can be computed as floor(log2(n)) + 1, where n is the number of elements.`,question:" What if the input is given as an array (heap representation)? x"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_mediumproblems_checkiftwotreesareidenticalornot",problem_name:"Check if two trees are identical or not",problem_slug:"check-if-two-trees-are-identical-or-not",problem_rank:2,misc:{tags:["Teladoc Health","Deloitte","Wayfair","Siemens Healthineers","Broadcom","Optum","PayPal","Chewy","Rakuten","McKinsey & Company","Activision Blizzard","Rockstar Games","Snowflake","Western Digital","AMD","Swiggy","Epic Games","Etsy","Target","Electronic Arts","DoorDash","NVIDIA","Boston Consulting Group","Robinhood","Riot Games","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The given problem is fundamentally used in various applications such as code compilers and database systems where we need to compare two Abstract Syntax Trees (ASTs). It's also used in code similarity checkers and plagiarism detection software where they need to analyze if two codes perform the same operations. In Data Science and ML applications, this concept is helpful in measuring the similarities between decision trees.",hints:[{hint:"An iterative DFS approach can be implemented using a stack to simulate recursion. Each time we pop a node pair (p, q), we compare their values and push their left and right children back onto the stack for further comparison."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Preorder traversal alone does not uniquely define a tree. Different trees can have the same preorder output but different structures. Instead, we must check each corresponding node recursively or iteratively.",question:"Why can\u2019t we just compare Preorder traversals of both trees? "},{answer:"Even if the upper levels match, any difference in the lower levels will make them different trees. A depth mismatch in left or right subtrees will cause a false result.",question:"What if the trees have different heights but share some structure at the top? "}],interview_followup_questions:[{answer:"Instead of checking if both trees are identical, we need to check if one tree is contained within another. This requires a function to compare trees at each node and recursively check if q is a subtree of p.",question:"How would you modify this problem to check if one tree is a subtree of another? "},{answer:"A tree can be serialized into a string using Preorder traversal with null markers. Comparing two such serialized trees allows checking for identity without explicitly traversing the structure.",question:"How does this problem relate to tree serialization? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_mediumproblems_checkforbalancedbinarytrees",problem_name:"Check for balanced binary tree",problem_slug:"check-for-balanced-binary-tree",problem_rank:3,misc:{tags:["Lyft","Epic Games","Roblox","Freshworks","Cerner","Zynga","DoorDash","Flipkart","Riot Games","eBay","Optum","Morgan Stanley","Electronic Arts","IBM","Dropbox","Airbnb","Siemens Healthineers","Square","HCL Technologies","PayPal","Twilio","Zoho","Teladoc Health","Stripe","Docker","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The concept of checking if a binary tree is height-balanced is crucial in the development of databases and file systems, where balanced-tree data structures like AVL trees and Red-Black trees are used. An AVL tree, for instance, is a self-balancing binary search tree, and the heights of the two child subtrees of any node differ by at most one. This ensures that lookups, insertions, and deletions are all fast, optimizing overall system performance.",hints:[{hint:"We return the height of a subtree only if it is balanced. If at any point the height difference exceeds 1, we return an invalid flag (e.g., -1), allowing us to terminate early."},{hint:"An iterative solution using level-order traversal (BFS) is possible, but it requires extra storage for tracking subtree heights, making it less efficient than the recursive approach."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The naive method calculates the height of each subtree separately, leading to redundant computations. This results in O(n\xB2) complexity, which is too slow for large trees. The optimized bottom-up approach computes height while checking balance, reducing time complexity to O(n).",question:"Why is the naive recursive approach inefficient? "},{answer:"No, a height-balanced tree ensures that height differences are small, but it doesn\u2019t guarantee the minimum height. The most balanced form would be a complete binary tree, but other balanced trees can have varying structures.",question:"Does a height-balanced tree always have minimum height? "}],interview_followup_questions:[{answer:"A complete binary tree has all levels fully filled except possibly the last, which must be filled left to right. This can be checked using level-order traversal (BFS) and verifying that no node appears after a null node.",question:"How would you check if a tree is a complete binary tree? "},{answer:"In a balanced BST (e.g., AVL or Red-Black Tree), search operations take O(log n) time, ensuring optimal efficiency. If a BST becomes unbalanced (skewed), search operations degrade to O(n), making balancing critical for performance.",question:"How does tree balancing impact search efficiency in Binary Search Trees (BSTs)? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_mediumproblems_diameterofbinarytree",problem_name:"Diameter of Binary Tree",problem_slug:"diameter-of-binary-tree",problem_rank:4,misc:{tags:["Intel","Alibaba","Swiggy","Freshworks","Electronic Arts","Optum","Reddit","PayPal","Stripe","Visa","Qualcomm","Siemens Healthineers","Robinhood","Byju's","Deloitte","NVIDIA","Wayfair","Airbnb","Rakuten","Mastercard","Snowflake","OYO Rooms","Splunk","Bloomberg","GE Healthcare","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'The concept underlying the Diameter of Binary Tree problem is used in practical software development, notably in the field of Network Routing Algorithms. These algorithms use the principles of tree traversal and diameter calculation to determine the most efficient path for data to travel between nodes in a network. Understanding the longest path or "diameter" helps engineers and developers optimize these paths and enhance the overall efficiency of the network.',hints:[{hint:"A naive approach computes the height separately for each node and calculates the possible diameter at each step, leading to an O(n\xB2) time complexity (height computation is O(n) at each of the O(n) nodes)."},{hint:"An optimized approach computes height while finding the diameter, reducing the time complexity to O(n). This is done by modifying the recursive function to return both the height of the subtree and current max diameter at each step."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"An unbalanced tree does not affect the formula but increases the recursion depth. The longest path might entirely exist in the larger subtree, requiring additional checks to ensure it is correctly counted.",question:"How does an unbalanced tree affect the diameter calculation? "},{answer:"The height is the longest path from the root to a leaf (O(n) computation). The diameter considers paths between any two nodes, so a naive approach requires checking every node as a potential root, leading to O(n\xB2).",question:"How does this differ from finding the height of a tree? "}],interview_followup_questions:[{answer:"Instead of just computing the length, store the nodes contributing to the maximum path during the traversal. Maintain an auxiliary list that tracks the longest left and right subtree paths at each node.",question:"How would you modify this approach to return the actual path of the diameter? "},{answer:"A recursive DFS solution requires O(h) space, where h is the tree height. This can be O(n) in skewed trees. An iterative approach can reduce stack overhead, but achieving O(1) space is not feasible without modifying the tree structure.",question:"Can we determine the diameter in constant space? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_mediumproblems_maximumpathsum",problem_name:"Maximum path sum",problem_slug:"maximum-path-sum-",problem_rank:5,misc:{tags:["Alibaba","Bain & Company","Databricks","Goldman Sachs","Activision Blizzard","Morgan Stanley","Medtronic","Dropbox","ARM","Seagate Technology","Walmart","Cloudflare","Zoho","Boston Consulting Group","PwC","Reddit","Cerner","HCL Technologies","Western Digital","Siemens Healthineers","Snowflake","Splunk","Byju's","Rakuten","Roblox","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`Fun Fact: The concept used in this problem is fundamental in the development of networking or routing protocols in the field of computer networks. Specifically, in routing tables, each path could be seen as a route and each node as a network point. The path sum could represent the total cost or delay of the route. By determining the path with the "largest" or "smallest" sum, network devices can decide the best path for data transmission. Similarly, file systems in Operating Systems use the same concept where they need to find the best path (with maximum or minimum resource usage) to store or retrieve data. It's an underlying concept also used in database indexing and many algorithms in artificial intelligence and machine learning.`,hints:[{hint:"Compute the maximum path sum ending at the current node as the max of:max(left\xA0subtree\xA0sum,right\xA0subtree\xA0sum)+current\xA0node\xA0value. (This ensures we include only one child when extending the path upwards)."},{hint:"Compute the maximum sum passing through the node by considering both children and the node\u2019s value:left\xA0sum+right\xA0sum+node\xA0value. Maintain a global maximum that tracks the highest encountered path sum."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"If we return the computed sum from the recursive function, it will only return sums extending upward, missing cases where the maximum path is entirely inside a subtree. A global max tracker ensures we capture all cases.",question:"Why do we maintain a global variable for the maximum sum? "},{answer:"Level-order traversal processes nodes level by level, whereas we need subtree-based calculations. A bottom-up approach ensures correct computation at each node before considering parent nodes.",question:"Why can\u2019t we solve this using level-order traversal? "}],interview_followup_questions:[{answer:"In a balanced tree, paths distribute evenly, often leading to higher path sums compared to skewed trees, where most paths stay on one side. AVL trees ensure logarithmic height, preventing extreme cases where paths become too deep.",question:"How does tree balancing affect the maximum path sum? "},{answer:"If the tree structure were represented as a graph, a memoized DFS could optimize repeated calculations. However, since trees have a fixed structure, memoization is unnecessary in this case.",question:"How does this problem relate to dynamic programming? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_mediumproblems_checkforsymmetricalbts",problem_name:"Check for symmetrical BTs",problem_slug:"check-for-symmetrical-bts",problem_rank:6,misc:{tags:["Snowflake","Uber","Optum","Epic Systems","Byju's","Boston Consulting Group","Micron Technology","NVIDIA","Western Digital","Robinhood","MongoDB","IBM","PwC","PayPal","Teladoc Health","Oracle","Flipkart","Ubisoft","Electronic Arts","Dropbox","eBay","AMD","DoorDash","Epic Games","Alibaba","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun fact: The concept of checking for symmetry in a binary tree, or verifying if a structure is a mirror image of itself, is applied in compilers or syntax checkers of Integrated Development Environments (IDEs). These tools often need to parse and analyze code syntax trees and confirm their correctness. Ensuring their symmetry can be a part of validating that code has been written in a balanced and structured way, thus optimizing the compiler's performance and improving code execution.",hints:[{hint:"A recursive approach naturally fits this problem. Check if both the left and right children exist. Ensure that their values are equal and recursively compare"},{hint:"An iterative approach can be implemented using a queue (BFS) or stack (DFS) by processing nodes in pairs. Instead of recursion, push nodes into a queue in mirror order and check symmetry level by level."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"A symmetric tree resembles a palindrome in tree form, where left and right halves mirror each other. Similar logic applies when checking symmetric strings or arrays.",question:"How does this relate to palindrome structures? "},{answer:"In an identical tree check, we compare corresponding nodes directly (left with left, right with right). In a mirror check, we compare left with right and right with left.",question:"Why is a mirror check different from an identical tree check? "}],interview_followup_questions:[{answer:"Use a bottom-up DFS approach, returning the largest symmetric subtree size while checking for symmetry at each node.",question:"What changes would be needed to find the largest symmetric subtree? "},{answer:"Morris traversal works for inorder traversal, but symmetry checking requires level-based traversal, which Morris traversal doesn\u2019t efficiently support.",question:"Can this problem be solved using Morris traversal (O(1) space)? "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarytrees_faqs",subcategory_name:"FAQs",subcategory_slug:"faqs",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"binarytrees_binarytrees_faqs_zigzagorspiraltraversal",problem_name:"Zig Zag or Spiral Traversal",problem_slug:"zig-zag-or-spiral-traversal",problem_rank:1,misc:{tags:["Bain & Company","Zomato","Shopify","Siemens Healthineers","Lyft","KPMG","Wayfair","Snowflake","Goldman Sachs","Unity Technologies","Electronic Arts","Optum","Splunk","Chewy","IBM","Red Hat","Swiggy","Oracle","Riot Games","Mastercard","Rakuten","Square","HCL Technologies","Medtronic","Zoho","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem, known as Zigzag Level Order Traversal or Breadth First Search level order traversal in binary trees, is extensively used in artificial intelligence and machine learning. It is primarily leveraged in decision tree algorithms, used for building classification models. Furthermore, it is a crucial part of navigation systems, where decisions are made at each node until the destination node is reached. Understanding this pattern can greatly improve the search or recommendation algorithms in various sectors including e-commerce, social media and more.",hints:[{hint:"The Breadth-First Search (BFS) approach using a queue is optimal for level-order traversal."},{hint:"An alternative DFS (preorder traversal) approach is possible but requires: Passing the current level index to determine the order dynamically. Storing values in a list of lists where odd levels are reversed before returning."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"DFS explores depth-first, which does not naturally follow level-order traversal. While DFS can track depth and store nodes per level, we need extra logic to reverse odd levels, making it less intuitive than BFS.",question:" Why is DFS not the preferred approach for this problem? "},{answer:"Yes, we can store all levels left to right, then reverse every alternate level before returning the result. However, this adds O(n) extra time complexity for reversing lists. A deque allows us to handle this efficiently during traversal.",question:"Can we just reverse every alternate level after traversal? "}],interview_followup_questions:[{answer:"Spiral order traversal is similar but does not alternate direction at each level. Instead, nodes are processed in a strictly alternating spiral order (left to right \u2192 right to left \u2192 left to right).",question:"How would you modify the approach to return a spiral level-order traversal instead? "},{answer:"An iterative DFS would use a stack instead of a queue, keeping track of levels explicitly. However, maintaining zigzag order dynamically in DFS requires extra logic, making BFS more natural.",question:"How would an iterative DFS implementation compare to BFS? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_boundarytraversal",problem_name:"Boundary Traversal",problem_slug:"boundary-traversal",problem_rank:2,misc:{tags:["GE Healthcare","Visa","Red Hat","Unity Technologies","Bloomberg","Nutanix","Byju's","OYO Rooms","Siemens Healthineers","Lyft","Zomato","Western Digital","JPMorgan Chase","Texas Instruments","Bungie","Mastercard","Morgan Stanley","Reddit","PayPal","Dropbox","Target","Micron Technology","IBM","Goldman Sachs","Airbnb","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"In the field of computer graphics and game development, tree traversal algorithms, similar to the concept in the boundary traversal of a binary tree, are used for space partitioning. Techniques like Binary Space Partitioning (BSP) trees help in determining what objects need to be rendered and are critical for optimizing performance. In simple terms, it can be said that your favorite video game performs well because similar tree traversal techniques help decide what elements to show on your screen at any point in time!",hints:[{hint:"Start from the left child of the root. Move down the left subtree, collecting the first node encountered at each level. Stop when a leaf node is reached (do not include leaves in this step). "},{hint:"Start from the right child of the root. Move down the right subtree, collecting the first node encountered at each level. Do not include leaves. Store the values in reverse order before adding them to the final result."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Leaf nodes are already collected in a separate traversal step. If included in the left/right boundary steps, they would be duplicated.",question:"Why exclude leaf nodes while collecting left and right boundaries?  "},{answer:"Level-order traversal processes nodes row by row, while boundary traversal follows a specific anti-clockwise order, focusing on edge nodes.",question:"How does this differ from level-order traversal?  "}],interview_followup_questions:[{answer:"Instead of left boundary \u2192 leaves \u2192 right boundary (reverse order), the order would be root \u2192 right boundary \u2192 leaves \u2192 left boundary (reverse order).",question:"How would you modify this if the traversal needed to be clockwise instead of anti-clockwise?  "},{answer:"DFS explores all nodes before backtracking, whereas boundary traversal restricts traversal to only boundary nodes.",question:"How does boundary traversal differ from a depth-first traversal (DFS)?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_verticalordertraversal",problem_name:"Vertical Order Traversal",problem_slug:"vertical-order-traversal",problem_rank:3,misc:{tags:["HashiCorp","Zynga","Alibaba","Medtronic","Walmart","Deloitte","NVIDIA","Dropbox","Uber","Rockstar Games","Epic Systems","KPMG","IBM","Docker","Optum","McKinsey & Company","Cloudflare","AMD","Wayfair","Boston Consulting Group","Red Hat","Qualcomm","Bain & Company","Splunk","Texas Instruments","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The process of computing a binary tree's vertical order traversal is used in practical software development in data visualization and UI design. For example, organizational chart layouts and displaying hierarchical data, where nodes represent entities and edges represent relationships between entities, utilize this concept. Being able to depict this data in a visually digestible form, using a vertical traversal pattern, allows users to make more informed decisions based on these relationships. Efficient implementation of this problem is essential for ensuring the process is run effectively and quickly, enhancing the user experience.",hints:[{hint:"Use a dictionary (column_map) where the key is the column index and the value is a list of (row, value) tuples. Traverse the tree using BFS (queue-based approach) or DFS (recursion). At each node (row, col), store (row, value) in the column_map[col]."},{hint:"After traversal, extract values from column_map and sort them: Primary Sorting: By increasing column index (col). Secondary Sorting: Within each column, sort first by row and then by value (if the row is the same)."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Sorting ensures that when multiple nodes are in the same column, they appear top-to-bottom, and in case of a tie, they appear in ascending order of value.",question:"Why do we sort by both row index and node value?  "},{answer:"BFS naturally processes nodes level by level, making it easier to track row index without recursion overhead. DFS can be used, but it requires explicit tracking of row and column indices during recursion.",question:"Why does BFS work better than DFS in this case?  "}],interview_followup_questions:[{answer:"In diagonal traversal, nodes at (row, col) map to diagonal = row - col. Instead of grouping by column, we would group by diagonal index.",question:"What if diagonal traversal was required instead of vertical order?  "},{answer:"Level order traversal processes nodes row-wise, whereas vertical order traversal processes nodes column-wise.",question:"How does this compare to level order traversal?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_topviewofbt",problem_name:"Top View of BT",problem_slug:"top-view-of-bt",problem_rank:4,misc:{tags:["AMD","NVIDIA","Splunk","Zomato","Medtronic","Twilio","Instacart","Unity Technologies","Zoho","Pinterest","Flipkart","Epic Games","IBM","Cloudflare","eBay","Seagate Technology","Zynga","Bloomberg","Freshworks","Riot Games","Optum","JPMorgan Chase","Red Hat","Reddit","OYO Rooms","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The underlying concept of this problem, which is traversing through a binary tree, is extensively used in databases as well as file systems. For instance, the B-tree structure, a type of binary tree, allows for efficient insertion, deletion and search operations. This is especially beneficial for databases and file systems where data is large and needs to be stored on the hard drive. In cases like these, reducing the number of disk access during operations is crucial for the overall performance. So, understanding how to traverse binary trees isn't just restricted to coding puzzles, but has very tangible real-world applications in software development!",hints:[{hint:"Use a queue of tuples (node, horizontal_distance), starting with (root, 0). Process each node level by level, ensuring that we encounter nodes in top-to-bottom order."},{hint:"Use a hashmap (top_nodes) where: Key: Horizontal Distance (HD). Value: First node encountered at that HD. If an HD is encountered for the first time, store the node\u2019s value."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"BFS processes nodes level by level, ensuring that we always encounter the topmost node first. DFS can work, but it requires explicit depth tracking to avoid incorrect overwrites.",question:"Why do we use BFS instead of DFS?  "},{answer:"Since BFS processes nodes level by level, the first node encountered for an HD is stored and never replaced.",question:"What happens if multiple nodes share the same HD?  "}],interview_followup_questions:[{answer:"In bottom view, we replace existing entries instead of keeping the first one. This ensures that the last node at each HD is stored instead of the first.",question:"How would this approach change if we needed a bottom view instead of a top view?  "},{answer:"The approach already runs in O(N log N) due to sorting by HD. Using an ordered map (TreeMap in Java or sortedcontainers in Python) avoids explicit sorting, making it O(N log N) but slightly faster.",question:"Can this approach be optimized further?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_bottomviewofbt",problem_name:"Bottom view of BT",problem_slug:"bottom-view-of-bt",problem_rank:5,misc:{tags:["Reddit","Alibaba","JPMorgan Chase","Rockstar Games","Pinterest","Byju's","PayPal","DoorDash","Western Digital","Mastercard","Deloitte","Flipkart","Stripe","Siemens Healthineers","OYO Rooms","Zynga","Teladoc Health","Chewy","Roblox","Ubisoft","Cerner","Swiggy","Zoho","Robinhood","Philips Healthcare","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun fact: This problem is not just a theoretical one but has practical usage in software development too, especially in graphical user interface (GUI) applications and game development. In these areas, constructing and traversing trees, as well as deciding which node (or element) to showcase when two nodes overlap, are common scenarios. For instance, a game might use this concept to decide which character or object to highlight when two characters are at the same position on the Y-axis but at different depths (Z-axis).-which is akin to viewing from the bottom. The concepts used to solve this problem are also integral to data visualization, database systems, and machine learning algorithms for decision trees.",hints:[{hint:"Use a queue of tuples (node, horizontal_distance), starting with (root, 0). Process each node level by level, ensuring that the last node encountered at each HD is stored."},{hint:"Use a hashmap (bottom_nodes) where: Key: Horizontal Distance (HD). Value: The last node encountered at that HD. As BFS progresses, overwrite the existing value in bottom_nodes[HD] since we need the last encountered node."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Each node's HD is unique for its vertical column. Since BFS processes nodes level by level, the last node encountered at each HD is stored as the bottom view.",question:"How does the horizontal distance (HD) help in identifying the bottom view?  "},{answer:"Yes, but BFS is more intuitive since it guarantees level-by-level processing without needing explicit depth tracking.",question:"Can this be done using a recursive approach?  "}],interview_followup_questions:[{answer:"Vertical order traversal groups all nodes column-wise. Bottom view only considers the last encountered node for each column.",question:"How does this problem compare to the vertical order traversal of a tree?  "},{answer:"The approach already runs in O(N log N) due to sorting by HD. Using an ordered map (TreeMap in Java or sortedcontainers in Python) avoids explicit sorting, making it O(N log N) but slightly faster.",question:"Can this approach be optimized further?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_right/leftviewofbt",problem_name:"Right/Left View of BT",problem_slug:"right-left-view-of-bt",problem_rank:6,misc:{tags:["AMD","Micron Technology","Unity Technologies","Databricks","NVIDIA","Seagate Technology","Bloomberg","Deloitte","Alibaba","Goldman Sachs","Square","Bain & Company","IBM","Docker","Ernst & Young","Morgan Stanley","Snowflake","Pinterest","Johnson & Johnson","Stripe","Western Digital","Roche","OYO Rooms","DoorDash","Lyft","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem is practically applied in database technologies that involve tree-based indexing like B-Trees or B+ Trees, commonly used in many SQL and NoSQL databases. For instance, MongoDB utilizes a variant of B-tree data structure for its indexes. Visibility from a certain perspective (here, it's from the right) can be used to optimize searches, traversals, or even distribution of nodes in parallel computing scenarios. Hence, understanding these kinds of problems is key to designing efficient data management or networking systems.",hints:[{hint:"Use a queue to process nodes level by level, keeping track of their depth. At each level, store only the last node encountered in that level (i.e., the rightmost node). Process the right child first, then the left child, ensuring that the rightmost node is encountered first."},{hint:"Maintain a list (right_view[]) where right_view[level] stores the rightmost node at that level. The right_view list contains nodes arranged from top to bottom, forming the right-side view of the tree."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:" By processing the right child first, we ensure that the first node encountered at a level is the rightmost one.",question:"How do we ensure the rightmost node is stored at each level? "},{answer:"Yes! In a recursive approach, we: Use preorder traversal (Root \u2192 Right \u2192 Left). Maintain a depth variable and track the first node encountered at each depth. If a node is the first node encountered at its depth, it is added to the result.",question:"Can this problem be solved using a recursive DFS approach?  "}],interview_followup_questions:[{answer:"Instead of processing the right child first, process the left child first.",question:"How would you modify the approach to return the left-side view instead?  "},{answer:"The queue is needed to maintain level-order traversal, so while a single list wouldn't store all nodes, we could optimize memory by modifying it in place.",question:"Can we solve this problem using a single list instead of a queue?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_printroottonotepathinbt",problem_name:"Print root to node path in BT",problem_slug:"print-root-to-note-path-in-bt",problem_rank:7,misc:{tags:["Cloudflare","Lyft","Docker","Etsy","Shopify","Boston Consulting Group","Johnson & Johnson","Bain & Company","Rakuten","Teladoc Health","Flipkart","Byju's","Chewy","Oracle","Square","Rockstar Games","Micron Technology","ARM","Walmart","Activision Blizzard","Ernst & Young","Ubisoft","Salesforce","Cerner","OYO Rooms","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem involves using tree traversal, which is a key component of handling structured data. An interesting real-world application of such problems is in parsing data in XML or JSON format. These data formats are extensively used in web and app development, APIs, and configuration files. The tree-based structure of these formats often requires programs that can traverse their hierarchical nature, similar to the problem of finding all root-to-leaf paths in a binary tree.",hints:[{hint:"Start from the root node and traverse the tree recursively. Maintain a current path list that stores nodes visited so far."},{hint:"When reaching a leaf node, store the current path in the result list. Use backtracking to remove the last node when returning from recursion."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"DFS is naturally suited for pathfinding problems since it explores one complete path before backtracking. BFS requires storing more nodes in memory, making it less space-efficient.",question:"Why use DFS instead of BFS?  "},{answer:"When returning from recursion, we remove the last node from the path to ensure it does not affect other recursive calls.",question:"Why do we need backtracking in the recursive approach?  "}],interview_followup_questions:[{answer:'Instead of storing lists, concatenate values into a string like "1->2->5".',question:"What if we needed to return paths as strings instead of lists?  "},{answer:" Modify traversal to include a running sum and filter paths based on conditions.",question:"What if some nodes had a special property (e.g., sum constraint)? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_lcainbt",problem_name:"LCA in BT",problem_slug:"lca-in-bt",problem_rank:8,misc:{tags:["Rockstar Games","Robinhood","MongoDB","Micron Technology","American Express","Broadcom","Uber","Boston Consulting Group","Ernst & Young","Texas Instruments","Red Hat","Riot Games","Philips Healthcare","Lyft","Cloudflare","Epic Systems","Target","Zomato","Swiggy","Seagate Technology","Rakuten","Qualcomm","Mastercard","Snowflake","Unity Technologies","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The concept of finding the lowest common ancestor (LCA) in a binary tree is a crucial part of Git version control system, which is widely used in software development. Git stores its metadata as a simple directed acyclic graph, and uses this algorithm to efficiently determine the most recent common ancestor of two branches. This aids in streamlining merging operations and tracking down bugs in the code.",hints:[{hint:"Recursively search the left subtree for p and q. Recursively search the right subtree for p and q."},{hint:"If both left and right subtrees return non-null values, then the current node is the LCA because p and q are in different subtrees. If only one subtree returns a non-null value, return that subtree\u2019s value (it means both p and q are located in the same subtree). If both left and right return null, return null."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:" Yes, by storing parent pointers and using a hash set to track visited ancestors, but recursion is more elegant.",question:"Can we solve this problem iteratively? "},{answer:"If the tree is a BST, we can solve the problem more efficiently in O(log N) by using BST properties.",question:"How does this differ for a Binary Search Tree (BST)?  "}],interview_followup_questions:[{answer:"Yes, we would generalize the function to return the lowest node that contains all given nodes in its subtree.",question:"Can this be extended to find LCA of multiple nodes instead of just two?  "},{answer:"We would track node depth while traversing and return the deepest LCA found.",question:'How would this change if we needed the "deepest" common ancestor instead?  '}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_maximumwidthofbt",problem_name:"Maximum Width of BT",problem_slug:"maximum-width-of-bt",problem_rank:9,misc:{tags:["Ubisoft","Salesforce","OYO Rooms","Electronic Arts","Airbnb","Medtronic","American Express","Reddit","Cloudflare","Stripe","Intel","ARM","Riot Games","Epic Games","Broadcom","Oracle","Unity Technologies","Swiggy","Optum","Instacart","Freshworks","Bloomberg","Zynga","Byju's","Shopify","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem, essentially about finding the maximum width of a binary tree, has direct applications in creating balanced search algorithms in databases. Database management systems often use tree data structures (B-trees, B+ trees, etc.) to ensure faster access to information. The width here represents the number of nodes in each level of the tree, and keeping this number balanced or controlled allows databases to ensure efficient querying times. This problem reinforces the importance of understanding and handling tree data structures effectively, as this can directly influence the performance of many software applications that depend on databases.",hints:[{hint:"Initialize a queue with (root, index = 0), where index represents the position in a complete binary tree. Perform BFS level by level"},{hint:"Track the first and last index of nodes at the current level. Compute width as last_index - first_index + 1 and update max_width. Add children to the queue with calculated indices based on complete tree properties"}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Since the problem requires measuring gaps between nodes, using indices from a complete binary tree representation helps in accurately computing distances between leftmost and rightmost nodes.",question:"Why do we track indices in a complete binary tree format?  "},{answer:"The width is calculated based on indices, meaning it counts the empty positions between nodes rather than just counting non-null nodes.",question:"What happens if there are missing nodes in the middle of a level?  "}],interview_followup_questions:[{answer:"Instead of using position-based width, simply count the number of nodes at each level without considering gaps.",question:"How would you modify the approach to count only non-null nodes?  "},{answer:" Yes! Just keep track of the maximum node count at any level instead of width calculation.",question:"Can this be extended to find the level with the maximum number of nodes instead of width? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_printallnodesatadistanceofkinbt",problem_name:"Print all nodes at a distance of K in BT",problem_slug:"print-all-nodes-at-a-distance-of-k-in-bt",problem_rank:10,misc:{tags:["Snowflake","Walmart","MongoDB","Activision Blizzard","HashiCorp","Etsy","Riot Games","Rakuten","Teladoc Health","Cloudflare","Broadcom","Philips Healthcare","Pinterest","Optum","GE Healthcare","Shopify","Bloomberg","Roche","Intel","Twilio","Instacart","Cerner","Uber","Swiggy","Bungie","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem or its underpinning concept finds great application in social networking apps like Facebook, LinkedIn, etc. In these apps, a user's connection with other users is a graph, and this problem helps in discovering nodes (other users), who are at a specified distance (degrees of connection, for example, friends of friends - 2nd degree connections on LinkedIn) from a target node (a particular user). Facebook\u2019s \u201CPeople You May Know\u201D feature and LinkedIn\u2019s \u201CConnections of\u201D feature work based on this concept.",hints:[{hint:"Use DFS or BFS to build a graph (adjacency list) where: Each node points to its left and right children. Each node points to its parent (establishing bidirectional links)."},{hint:"Start from the target node and use BFS to traverse exactly k levels. Keep track of visited nodes to avoid cycles. Once BFS reaches level k, store all nodes and return them."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The tree is unidirectional (parent \u2192 child), but we need to traverse both upward and downward. By storing parent links, we can move upward in addition to left/right child traversal.",question:"Why do we need to convert the tree into a graph?  "},{answer:"If the tree is left-skewed or right-skewed, the traversal still works since parent links help in moving upward.",question:"What happens if the tree is skewed?  "}],interview_followup_questions:[{answer:"Store all nodes encountered from level 0 to k in BFS traversal.",question:"How would this change if we needed all nodes within distance k instead of exactly k?  "},{answer:" Yes, but would require modifying the tree structure in place, which is not ideal.",question:"Can this be done without extra space for the graph? "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_minimumtimetakentoburnthebtfromagivennode",problem_name:"Minimum time taken to burn the BT from a given Node",problem_slug:"minimum-time-taken-to-burn-the-bt-from-a-given-node",problem_rank:11,misc:{tags:["eBay","Airbnb","Etsy","American Express","Shopify","Mastercard","Seagate Technology","HashiCorp","Roche","Unity Technologies","Uber","Visa","Goldman Sachs","Boston Consulting Group","Instacart","OYO Rooms","NVIDIA","Cerner","Optum","Nutanix","Cloudflare","Epic Systems","Rockstar Games","Docker","Snowflake","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"While this specific problem about setting a binary tree on fire is not directly applied in the software industry, the underlying concepts of tree traversal, breadth-first search, depth-first search, and shortest path finding are essential in various areas. They are used in data mining and machine learning algorithms, routing protocols like Open Shortest Path First in networks, file system hierarchies in operating systems, graph databases, and even in the layout rendering in Android's XML design. This problem helps to enhance the understanding of these concepts in a unique way.",hints:[{hint:"Use DFS (or BFS) to create an adjacency list representation of the tree. Each node should have references to its left child, right child, and parent to allow traversal in both directions."},{hint:"Start BFS traversal from the target node (fire source). Spread fire level by level every second. Keep track of visited nodes to avoid cycles."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The tree is unidirectional (parent \u2192 child), but fire spreads in both directions (upward and downward). By tracking parent nodes, we can move up the tree.",question:"Why do we need to convert the tree into a graph?  "},{answer:"Maintain a visited set to track already burned nodes.",question:"How do we prevent re-burning nodes?  "}],interview_followup_questions:[{answer:"Instead of returning time, store nodes per second level during BFS.",question:"How would we modify this if we needed to return all nodes that burn at each second?  "},{answer:"Yes, but DFS would require tracking maximum depth from the target node and handling multiple subtree burn times.",question:"Can we solve this problem using only DFS?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_faqs_counttotalnoesinacompletebt",problem_name:"Count total nodes in a complete BT",problem_slug:"count-total-nodes-in-a-complete-bt",problem_rank:12,misc:{tags:["Cerner","Optum","Freshworks","Unity Technologies","Philips Healthcare","HCL Technologies","Goldman Sachs","Shopify","Visa","IBM","Zoho","Instacart","Bloomberg","Broadcom","Pinterest","Medtronic","Rakuten","eBay","Johnson & Johnson","Robinhood","Reddit","Rockstar Games","HashiCorp","Walmart","Dropbox","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The concept of counting the number of nodes in a binary tree is useful in many software applications. For instance, in file systems and databases, Binary Trees (especially Binary Search Trees) are often used for efficient searching and sorting of data. Here, the knowledge of total nodes can be used for optimization, load balancing, and in determining how deep the tree is, which is essential while performing operations like adding, deleting, or searching for a node. Furthermore, companies like Google use similar principles in their MapReduce programming model to process huge sets of data efficiently.",hints:[{hint:"Perform a DFS (recursive) or BFS (iterative) traversal. Maintain a counter that increments for each node encountered. Base Case: If the root is null, return 0."},{hint:"If a tree is complete, its height can be determined by following the leftmost path. A complete binary tree has at most 2^h - 1 nodes. The last level may not be completely full, meaning we need to count nodes in the last level."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:" If a tree is perfect, it has exactly 2^h - 1 nodes, and we can compute it directly in O(1).",question:"What if the tree is a perfect binary tree? "},{answer:"In a complete tree, every level (except the last) is fully filled, so the leftmost path always reaches the maximum height.",question:"Why does following the leftmost path give the tree height?  "}],interview_followup_questions:[{answer:"The same DFS/BFS approach works, but the optimized binary search method is specific to binary trees.",question:"What if we needed to count nodes in a tree where each node has more than two children?  "},{answer:"Counting leaf nodes involves checking if a node has no children, whereas counting all nodes requires traversing the full structure.",question:"How does this compare to counting leaf nodes?  "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarytrees_constructionproblems",subcategory_name:"Construction Problems",subcategory_slug:"construction-problems",subcategory_rank:4,subcategory_type:"study",problems:[{problem_id:"binarytrees_binarytrees_constructionproblems_requirementsneededtoconstructauniquebt",problem_name:"Requirements needed to construct a unique BT",problem_slug:"requirements-needed-to-construct-a-unique-bt",problem_rank:1,misc:{tags:["Roche","Zomato","Alibaba","McKinsey & Company","Micron Technology","Medtronic","AMD","Deloitte","GE Healthcare","Epic Games","Oracle","Swiggy","Uber","Freshworks","Wayfair","Databricks","IBM","ARM","Johnson & Johnson","DoorDash","Robinhood","Ernst & Young","NVIDIA","Zynga","Bloomberg","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem can be commonly seen in the construction of Abstract Syntax Trees (ASTs) in compilers. Compilers use these different tree traversal techniques to parse the syntax of programming languages. An incorrect traversal can lead to incorrect construction of the AST, leading to incorrect execution or wrong results. Moreover, understanding binary trees is fundamental to database querying, such as SQL, where they are used to quickly retrieve stored data. So, solving this problem indeed has a significant importance in practical software development.",hints:[{hint:"Given two types of tree traversals, we need to determine if a unique binary tree can be reconstructed. Each traversal is represented by an integer identifier 1 \u2192 Preorder Traversal 2 \u2192 Inorder Traversal 3 \u2192 Postorder Traversal "},{hint:"A binary tree can only be uniquely constructed if:  One of the traversals must be Inorder, because Inorder preserves the relative position of nodes. The second traversal must be either Preorder or Postorder"}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Inorder preserves relative left and right positions, ensuring a consistent tree structure. Without Inorder, Preorder and Postorder alone are ambiguous.",question:"Why do we need Inorder for uniqueness?  "},{answer:"No, unless additional constraints (like BST properties) are given. A single traversal does not provide enough information about left vs. right children.",question:"Can a tree be reconstructed from only one traversal?  "}],interview_followup_questions:[{answer:"If explicit parent-child mappings were provided, we could reconstruct without needing two traversals.",question:"What if additional information (like parent-child relationships) was given?  "},{answer:"More than two traversals would be needed since binary tree rules do not apply.",question:"Can this be extended to ternary or quaternary trees?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_constructionproblems_constructabtfrompreorderandinorder",problem_name:"Construct a BT from Preorder and Inorder",problem_slug:"construct-a-bt-from-preorder-and-inorder",problem_rank:2,misc:{tags:["ARM","Zomato","Morgan Stanley","Rockstar Games","Cerner","Snowflake","Epic Games","GE Healthcare","Qualcomm","DoorDash","Rakuten","Roche","Oracle","Optum","Splunk","Reddit","Flipkart","Philips Healthcare","AMD","Chewy","Square","Johnson & Johnson","Wayfair","Unity Technologies","Micron Technology","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept underlying this problem is fundamental to the way databases organize and retrieve their data. Databases use tree structures (like Binary Search Trees) to store data, which optimizes search queries, inserts, deletes, and sequential data access. Efficient tree construction algorithms, like the one this problem aims to solve, are therefore vital to the database's performance. Also, this concept is utilized in routing protocols in network software, and the visual representation of hierarchical data, such as directory structures or organization charts in applications.",hints:[{hint:"Locate the root's index in inorder. The left subtree elements are before the root index. The right subtree elements are after the root index."},{hint:" Recursively Construct the Left and Right Subtrees Use sliced subarrays to pass correct values for left and right subtree construction."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Preorder traversal gives us the root first, allowing us to determine subtree boundaries from inorder. Inorder traversal preserves the left-right relationship, ensuring correct tree structure.",question:"Why does this approach work?  "},{answer:"Recursion mimics tree structure naturally, making it easier to handle subproblems. Iterative solutions require explicit stack management, which is harder.",question:"Why do we use recursion instead of iteration?  "}],interview_followup_questions:[{answer:"Yes, using a stack-based approach with preorder processing.",question:"Can this be done iteratively instead of recursively?  "},{answer:"BST properties can allow an alternate construction method without needing inorder traversal.",question:"How would this change if the tree was a BST?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_constructionproblems_constructabtfrompostorderandinorder",problem_name:"Construct a BT from Postorder and Inorder",problem_slug:"construct-a-bt-from-postorder-and-inorder",problem_rank:3,misc:{tags:["Red Hat","Medtronic","Teladoc Health","Uber","PwC","ARM","Square","Bain & Company","Cloudflare","Chewy","IBM","NVIDIA","Target","Deloitte","American Express","Qualcomm","Instacart","Intel","Seagate Technology","Epic Games","JPMorgan Chase","OYO Rooms","Johnson & Johnson","Splunk","Activision Blizzard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`Fun Fact: This problem is directly relevant in the world of computer graphics and rendering. Particularly, it's used in algorithms for "Binary Space Partitioning" - a method often employed in 3D computer graphics for rendering scenes with a large number of overlapping objects. Constructing binary trees using preorder and inorder traversals is crucial in defining the ordering and space divisions. Not to forget, such problems also have substantial uses in designing compilers and databases.`,hints:[{hint:"Locate the root in the inorder array to determine: Left subtree nodes (all nodes to the left of the root in inorder). Right subtree nodes (all nodes to the right of the root in inorder)."},{hint:"Recursively build the left and right subtrees using the respective subarrays from postorder and inorder."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The approach fails because locating the root in inorder is not unique. To handle duplicates, we can use additional information like index maps.",question:"What happens if duplicates exist in the arrays?  "},{answer:"Use a HashMap (dictionary) to store inorder value \u2192 index mappings, reducing lookup time to O(1).",question:"How do we optimize repeated root lookups in inorder?  "}],interview_followup_questions:[{answer:"Rebuilding expression trees from syntax orders, deserialization of tree structures.",question:"How does this problem relate to real-world applications?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_constructionproblems_serializeandde-serializebt",problem_name:"Serialize and De-serialize BT",problem_slug:"serialize-and-de-serialize-bt",problem_rank:4,misc:{tags:["Stripe","Rockstar Games","PayPal","Databricks","ARM","HCL Technologies","Robinhood","Uber","Intel","Zomato","HashiCorp","MongoDB","Epic Games","Broadcom","Walmart","Activision Blizzard","Bungie","DoorDash","Target","McKinsey & Company","Alibaba","Cerner","KPMG","JPMorgan Chase","American Express","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Did you know that the concept of serialization and deserialization is heavily used in sending and receiving data over the network or storing data in databases? For instance, in web development, when data is fetched from an API, it's often transmitted in JSON format which is text-based and easy to read. But, that's not how your objects exist in your code. They're in the form of complex data structures or binary format. Hence, they need to be converted (serialize) into a string form to travel across the network. Then, at the destination, they are converted back (deserialize) into usable objects. This allows different software systems, possibly deployed on different platforms and written in different languages, to communicate and exchange complex data.",hints:[{hint:'Serialization: Use BFS (level-order traversal) to process nodes. Store null values for missing children to maintain tree structure. Use comma-separated values (CSV format). Use Preorder traversal (Root \u2192 Left \u2192 Right). Store "N" (or null) for missing children.'},{hint:"Deserialization: Read the string and split it into nodes. Use a queue to rebuild the tree level by level. Read values sequentially and recursively reconstruct the tree."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"null nodes preserve tree structure, ensuring correct reconstruction.",question:"Why do we need to store null values in serialization?  "},{answer:"Possible, but tracking parents and children becomes harder.",question:"Can we deserialize without using a queue?  "}],interview_followup_questions:[{answer:"Yes! But a more space-efficient approach is to store only Preorder traversal and reconstruct using BST properties.",question:"Can this work for a BST (Binary Search Tree)?  "},{answer:"Instead of left/right pointers, store lists of children.",question:"How would you modify this for an N-ary tree?  "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarytrees_traversalinconstantspace",subcategory_name:"Traversal in Constant Space",subcategory_slug:"traversal-in-constant-space",subcategory_rank:5,subcategory_type:"study",problems:[{problem_id:"binarytrees_binarytrees_traversalinconstantspace_morristraversal|inorder",problem_name:"Morris Inorder Traversal",problem_slug:"morris-inorder-traversal-",problem_rank:1,misc:{tags:["Epic Systems","Visa","Zoho","Shopify","Lyft","Ernst & Young","Morgan Stanley","Western Digital","GE Healthcare","Salesforce","eBay","Unity Technologies","Stripe","Qualcomm","Robinhood","Swiggy","MongoDB","Byju's","Boston Consulting Group","Cloudflare","Oracle","Flipkart","IBM","Cerner","Bloomberg","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The underlying concept of an Inorder Tree Traversal, including the optimized Morris Inorder Traversal, has extensive practical applications in database systems. Database storage and querying often utilize B-trees and B+ trees, which are generalized binary trees. Thus, Inorder Traversal is used to retrieve items from these trees in a sorted manner. This is crucial for operations like range queries or sorted output which forms the backbone of database manipulation languages like SQL.",hints:[{hint:"Instead of using a stack, it modifies the tree structure temporarily by creating threaded links using the rightmost node of the left subtree."},{hint:"Instead of using a stack, it modifies the tree structure temporarily by creating threaded links using the rightmost node of the left subtree."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Traditional inorder traversal uses a recursive call stack (O(H) space) or an explicit stack (O(N) space). Morris traversal modifies the tree temporarily by linking the inorder predecessor to the current node, allowing backtracking without a stack. Once the traversal revisits a node, it removes the temporary threaded link, restoring the original tree structure.",question:"How does Morris Traversal achieve O(1) space complexity?  "},{answer:"The inorder predecessor is the rightmost node in the left subtree. Before moving left, we link this node\u2019s right child to the current node, allowing us to return without using a stack.",question:"Why do we find the inorder predecessor?  "}],interview_followup_questions:[{answer:"Recursive traversal uses O(H) space (stack frames), and iterative traversal with a stack uses O(N) space. Morris traversal uses O(1) space, making it ideal for constrained environments.",question:"How does Morris traversal compare to recursive and iterative traversal?  "},{answer:"It modifies the tree structure temporarily, which might not be acceptable in all cases. Finding the inorder predecessor requires extra steps, making it slightly slower in practice than a stack-based iterative approach. It only works efficiently for binary trees, not general trees.",question:"What are the limitations of Morris traversal?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_traversalinconstantspace_morrispreordertraversal",problem_name:"Morris Preorder Traversal",problem_slug:"morris-preorder-traversal-",problem_rank:2,misc:{tags:["PayPal","McKinsey & Company","Snowflake","Western Digital","Zynga","Etsy","Databricks","Ernst & Young","Salesforce","Morgan Stanley","HCL Technologies","Lyft","Epic Systems","Qualcomm","Walmart","Red Hat","Johnson & Johnson","Wayfair","Robinhood","Stripe","Roblox","Reddit","Medtronic","KPMG","Philips Healthcare","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept of binary tree traversal, including the efficient Morris preorder traversal, is widely used in the software industry for data analysis and database management. For example, SQL uses binary trees and traversal algorithms to fetch, insert, delete or update data records. The same concept is applied in GUI rendering, file systems, router algorithms, artificial intelligence for decision-making, and in managing hierarchical data in applications. The efficiency and speed of the traversal are essential to performance, making algorithms like Morris preorder traversal crucial in handling larger databases or complex data structures.",hints:[{hint:"If a node has a left child, find its inorder predecessor (rightmost node in the left subtree). Create a temporary link from the inorder predecessor to the current node to allow backtracking. If a node has no left child, visit it directly and move right."},{hint:"Print the node before moving to the left subtree (Preorder: Root \u2192 Left \u2192 Right). If revisiting via the threaded link, remove the link and move right."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The inorder predecessor is the rightmost node in the left subtree. It acts as a temporary bridge back to the current node after processing the left subtree.",question:"What is the role of the inorder predecessor in Morris Traversal?  "},{answer:"The node is processed immediately and traversal moves to the right child. No threaded links are required in this case.",question:"What happens if a node has no left child?  "}],interview_followup_questions:[{answer:"Postorder traversal requires reversing right child processing, making it more complex. It involves modifying the tree to process right children last, often using an auxiliary structure.",question:"How would this approach change for Postorder traversal?  "},{answer:"No, because Morris Traversal relies on binary tree properties (left and right child relationships). For an N-ary tree, Morris traversal cannot be directly applied.",question:"Can this be extended to an N-ary tree?  "}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarytrees_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:6,subcategory_type:"contest",problems:[{problem_id:"binarytrees_binarytrees_contest_minimumtravelcost",problem_name:"Minimum Travel Cost",problem_slug:"minimum-travel-cost",problem_rank:0,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarytrees_binarytrees_contest_networkmessagepassing",problem_name:"Maximum subtree sum",problem_slug:"maximum-subtree-sum",problem_rank:1,misc:{tags:[],facts:"xyz",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"tree_greatness",problem_name:"Tree Greatness",problem_slug:"tree-greatness",problem_rank:2,misc:{tags:[],facts:"xyz",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"binarysearchtrees",category_name:"Binary Search Trees",category_slug:"binary-search-trees",category_rank:12,subcategories:[{subcategory_id:"binarysearchtrees_theoryandbasics",subcategory_name:"Theory and Basics",subcategory_slug:"theory-and-basics",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"binarysearchtrees_binarysearchtrees_theoryandbasics_introductiontobst",problem_name:"Introduction to BST",problem_slug:"introduction-to-bst",problem_rank:1,misc:{tags:["Siemens Healthineers","PwC","Instacart","Cerner","Broadcom","Rockstar Games","Salesforce","Byju's","Roche","Airbnb","Splunk","Mastercard","Boston Consulting Group","Goldman Sachs","AMD","JPMorgan Chase","PayPal","Target","Ernst & Young","KPMG","OYO Rooms","Visa","Oracle","Databricks","Medtronic"],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"binarysearchtrees_binarysearchtrees_theoryandbasics_searchinbst",problem_name:"Search in BST",problem_slug:"search-in-bst",problem_rank:2,misc:{tags:["Visa","Bain & Company","Salesforce","GE Healthcare","Byju's","Alibaba","Lyft","eBay","Databricks","Siemens Healthineers","Splunk","IBM","Mastercard","Etsy","Roblox","Epic Games","PayPal","PwC","Docker","Zomato","Dropbox","Twilio","Johnson & Johnson","AMD","OYO Rooms","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Searching for a specific node in a binary search tree (BST) is a fundamental function that underlies many real-world applications, including database management systems and search engines. These systems often use a form of BST known as a B-tree. When you perform a Google search or a SQL query, these systems are using a version of the search operation defined in this problem to efficiently find relevant records among possibly billions. This is because BST allow for efficient lookups, additions, and deletions, which are key operations for these systems.",hints:[{hint:"If val == root.val, return the subtree rooted at this node. If val < root.val, recursively search in the left subtree. If val > root.val, recursively search in the right subtree."},{hint:"If val matches the current node, return it. If val < root.val, move to the left subtree. If val > root.val, move to the right subtree. If null is reached, return null (value not found)."}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"A valid BST does not have duplicate values by definition. If duplicates exist (e.g., in a modified BST with duplicate handling), we might need to return all matching nodes instead of just one.",question:"What if multiple nodes have the same value in the BST?"},{answer:"BST properties guarantee that if val < root.val, it must be in the left subtree (if it exists). Likewise, if val > root.val, it must be in the right subtree. Unlike a normal binary tree, BST only requires searching in one direction, reducing time complexity.",question:"Why do we not search both left and right subtrees?"}],interview_followup_questions:[{answer:"We can track the closest node encountered while traversing the BST. Instead of returning null, return the node with the smallest absolute difference from val.",question:"How can this be extended to return the closest value if val does not exist?"},{answer:"For a general binary tree, there is no ordering property, so we must perform a full tree traversal (DFS or BFS) instead of binary search. This increases complexity to O(n).",question:"How does this problem change if we were searching in a normal binary tree (not a BST)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_theoryandbasics_floorinabst",problem_name:"Floor and Ceil in a BST",problem_slug:"floor-and-ceil-in-a-bst",problem_rank:3,misc:{tags:["Square","MongoDB","Roche","Broadcom","IBM","Epic Games","Lyft","Intel","Shopify","Unity Technologies","McKinsey & Company","Alibaba","Wayfair","DoorDash","Morgan Stanley","Salesforce","OYO Rooms","Reddit","Ernst & Young","Medtronic","Rakuten","Oracle","Swiggy","HCL Technologies","Red Hat","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem's underlying concept is extensively used in database management systems (DBMS) and indexing techniques. For instance, when you're performing a database query using SQL to find a specific value in a table, a database system may use a binary search tree or B-tree internally (as an index) to look for that value. This greatly reduces search time, especially in substantial-sized databases. Finding floor and ceil values can be relevant in range-based queries or searches, such as identifying items in a certain price range on an e-commerce platform. Hence, proficiency in understanding and solving such problems may contribute to optimizing database operations and queries.",hints:[{hint:'"Traverse the BST while updating floor and ceil. If key == root.val, Floor = key, Ceil = key (since key exists in BST). If key < root.val, Update ceil = root.val and Move left. If key > root.val, Update floor = root.val and Move right."'},{hint:'"Recursively explore the BST based on key, updating floor and ceil dynamically. The base case occurs when we reach a null node."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"If every node in the BST is greater than key, no floor exists (floor = -1), and the smallest node becomes the ceil.",question:"What happens if all values in the BST are greater than key?"},{answer:"We can search for both in a single traversal using the BST property. Instead of performing separate searches, we update floor and ceil dynamically during one DFS/BFS traversal.",question:"Why can\u2019t we search for both floor and ceil in one pass?"}],interview_followup_questions:[{answer:"For large-scale BSTs (like B-Trees used in databases), balanced partitioning and cached floor/ceil lookups speed up queries significantly.",question:"Can this be optimized further for very large trees?"},{answer:"Since AVL trees are self-balancing, search operations remain O(log n), preventing the worst-case O(n) scenario seen in skewed BSTs. The algorithm remains the same but benefits from faster lookups.",question:"How would this be implemented in an AVL tree?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarysearchtrees_medium",subcategory_name:"Medium",subcategory_slug:"medium",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"binarysearchtrees_binarysearchtrees_medium_insertagivennodeinbst",problem_name:"Insert a given node in BST",problem_slug:"insert-a-given-node-in-bst",problem_rank:1,misc:{tags:["Bain & Company","Philips Healthcare","Zomato","Zynga","eBay","Square","Epic Games","Siemens Healthineers","JPMorgan Chase","Rakuten","Freshworks","Rockstar Games","Shopify","Pinterest","Bloomberg","Texas Instruments","Broadcom","PwC","Cerner","HCL Technologies","Electronic Arts","Dropbox","Uber","Optum","Johnson & Johnson","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The problem underlying this concept is extensively used in the development of databases. When adding new records, most databases use binary search trees (specifically, B-trees or B+ trees), or variants of them, to maintain sorted data and ensure fast search, insert, and delete operations. This way, when you look up a piece of information in a large database, the engine will use binary search trees to quickly locate the data you need.",hints:[{hint:"If root == null, create a new node with val and return it. If val < root.val, insert val into the left subtree (root.left). If val > root.val, insert val into the right subtree (root.right). Return the root node after insertion."},{hint:"Start from the root and traverse the tree. If val < current.val, move left. If val > current.val, move right. When an empty spot (null) is found, create a new node and attach it. Return the original root."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"If the BST is left-heavy, inserting a large value will extend it further right. If it is right-heavy, inserting a small value will extend it further left.",question:"What happens if the BST is skewed?"},{answer:"Standard BST insertion does not balance the tree. To ensure balanced insertion, use AVL trees or Red-Black Trees, which rebalance after insertions.",question:"Can we balance the tree after insertion?"}],interview_followup_questions:[{answer:`BSTs are the basis for B-Trees, used in database indexing. Balanced insertions ensure efficient search, insert, and delete operations in structured storage systems.
`,question:"How does this problem relate to databases and indexing?"},{answer:"After insertion, perform rotations and balance updates to maintain a logarithmic height. AVL trees ensure balance immediately, while Red-Black trees allow temporary imbalance.",question:"How would you modify this for self-balancing trees (AVL, Red-Black Trees)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_medium_deleteanodeinbst",problem_name:"Delete a node in BST",problem_slug:"delete-a-node-in-bst",problem_rank:2,misc:{tags:["Twilio","AMD","NVIDIA","eBay","Riot Games","Byju's","Unity Technologies","IBM","Lyft","Cerner","Target","Instacart","Robinhood","Morgan Stanley","Medtronic","Walmart","Siemens Healthineers","Teladoc Health","Chewy","Zynga","JPMorgan Chase","Johnson & Johnson","Swiggy","Nutanix","Electronic Arts","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem is very fundamental in the field of database management systems (DBMS). When you delete a record from the database, if it's organized in a binary search tree manner, the DBMS under the hood performs exactly this operation of finding and deleting a node from a BST. So think about it, every time you hit 'delete' on an item in a software application, you're indirectly making use of this BST deletion logic.",hints:[{hint:"Search for the key in the BST. Once found, If it has no children, remove it (return None). If it has one child, replace it with its child. If it has two children, replace it with the smallest node in the right subtree (inorder successor) or the largest node in the left subtree (inorder predecessor)."},{hint:'"Use an iterative approach to locate the node. Use the same deletion logic as the recursive method but with a loop."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The inorder successor (smallest node in the right subtree) or inorder predecessor (largest node in the left subtree) ensures that the BST remains valid while maintaining its properties.",question:"Why do we replace the node with its inorder successor or predecessor?"},{answer:"A normal binary tree does not have ordering constraints, so we can delete any node without maintaining order. In a BST, we must carefully restructure after deletion to keep it sorted.",question:"How does this differ from deletion in a normal binary tree?"}],interview_followup_questions:[{answer:"If a balanced tree (like an AVL Tree) is used, it will self-balance after deletion. If a standard BST is used, it may become skewed, requiring rebalancing.",question:"How does this operation affect tree balance?"},{answer:"Pass a list of keys and call the deletion function iteratively for each value, ensuring the tree remains valid.",question:"How would you modify the solution to delete multiple values at once?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_medium_kthsmallestandlargestelementinbst",problem_name:"Kth Smallest and Largest element in BST",problem_slug:"kth-smallest-and-largest-element-in-bst",problem_rank:3,misc:{tags:["GE Healthcare","Zomato","Cloudflare","Medtronic","Swiggy","Shopify","Robinhood","IBM","Johnson & Johnson","Alibaba","Cerner","Flipkart","Bungie","Lyft","Electronic Arts","PayPal","Visa","Red Hat","Roche","Boston Consulting Group","Mastercard","Activision Blizzard","Reddit","JPMorgan Chase","American Express","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This kind of problem is often encountered in databases and data analytics frameworks where sorting and querying operations are commonly performed. For example, finding the 'kth' smallest or largest value in a data set is a very common requirement in reporting, where you may want to find things like the top three sales results or the lowest five temperatures recorded. Binary Search Trees (BST) are frequently used in these contexts due to their efficient search, insert and delete operations. Moreover, Databases can store index keys in a BST format to optimize search time.",hints:[{hint:"Perform an inorder traversal while maintaining a counter. Stop when the k-th smallest element is found. Similarly, for k-th largest, perform a reverse inorder traversal."},{hint:"Perform a full inorder traversal and store values in an array. The k-th smallest is at index k-1, and the k-th largest is at index n-k."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"No, because inorder traversal finds only the smallest values first, while reverse inorder finds largest values first. We need two separate traversals.",question:"Can we find both k-th smallest and k-th largest in a single traversal?"},{answer:`In a balanced BST (AVL, Red-Black Tree), searching for the k-th element takes O(log n + k).
In a skewed BST, the worst-case time complexity is O(n).`,question:"How does tree balancing affect performance?"}],interview_followup_questions:[{answer:"Yes, by maintaining a count of nodes in each subtree, we can skip unnecessary traversals. This reduces average complexity to O(log n) in a balanced BST.",question:"Can we optimize finding the k-th smallest/largest using a count property?"},{answer:"The median of a BST is the \u2308n/2\u2309-th smallest element. Finding the median efficiently is a direct application of this problem.",question:"How does this relate to median finding in BSTs?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_medium_checkifatreeisabstornot",problem_name:"Check if a tree is a BST or not",problem_slug:"check-if-a-tree-is-a-bst-or-not",problem_rank:4,misc:{tags:["Snowflake","Medtronic","HCL Technologies","Ubisoft","PwC","Red Hat","Uber","Visa","Shopify","Qualcomm","American Express","Pinterest","Ernst & Young","Intel","Roche","Reddit","Goldman Sachs","OYO Rooms","eBay","Morgan Stanley","Robinhood","Johnson & Johnson","PayPal","Bungie","Nutanix","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: Checking if a binary tree is a binary search tree (BST) is not just a theoretical problem, but has practical applications in various software technologies. Databases can utilize BSTs for indexing purposes, allowing them to perform search, insert, delete operations efficiently. Therefore, understanding and validating BSTs are critical processes in ensuring integrity and performance in database systems. Likewise, in languages like C++ and Java, BSTs underlie certain container types (eg. TreeMap, TreeSet in Java, and set, multiset, map, multimap in C++) offering fast lookup, addition and removal of items. This problem's solution can contribute to performance optimization of these containers.",hints:[{hint:"Recursively check. The left subtree must be within (min_val, root.val). The right subtree must be within (root.val, max_val). If a node violates the constraint, return False."},{hint:'"Perform inorder traversal (Left \u2192 Root \u2192 Right). Store previous node value while traversing. If current node value \u2264 previous node value, return False."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`If BST allows duplicates, ensure they appear only on the left or right subtree consistently.
If duplicates are not allowed, modify checks to ensure strictly increasing order.`,question:"How does this algorithm handle duplicate values?"},{answer:"BST does not require balance, only ordering constraints. Unbalanced trees are still valid BSTs if ordering holds.",question:"What happens if the tree is unbalanced?"}],interview_followup_questions:[{answer:"For an array-based tree, check arr[i] > arr[(i-1)/2] for all nodes. However, this works only for complete BSTs, not general BSTs.",question:"How would this change if the tree was stored as an array (heap representation)?"},{answer:"BST validation only checks ordering, while AVL tree validation also checks height balance (|left_height - right_height| \u2264 1).",question:"What is the difference between BST validation and AVL tree validation?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_medium_lcainbst",problem_name:"LCA in BST",problem_slug:"lca-in-bst",problem_rank:5,misc:{tags:["Rakuten","Epic Games","AMD","Pinterest","Western Digital","Uber","Walmart","Electronic Arts","HashiCorp","HCL Technologies","Unity Technologies","Visa","Twilio","KPMG","Bloomberg","PayPal","Swiggy","Wayfair","Rockstar Games","Roblox","Robinhood","McKinsey & Company","Databricks","eBay","American Express","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem is very relevant in the field of web technologies, particularly in DOM (Document Object Model) manipulation which is a critical component of web development. An HTML document can also be viewed as a tree structure (though not a binary tree, however), and finding common ancestors between two nodes can be applied for example, when trying to determine the closest common parent of two different elements on a page for DOM manipulation tasks such as styling, event handling or even debugging!",hints:[{hint:'"If both p and q are smaller than root.val, LCA must be in the left subtree: LCA(root,p,q)=LCA(root.left,p,q)if\xA0p.val,q.val<root.val If both p and q are greater, LCA is in the right subtree: LCA(root,p,q)=LCA(root.right,p,q)if\xA0p.val,q.val>root.val Otherwise, root is the split point, meaning root is the LCA."'},{hint:'"By Iterative Approach (Optimized for Space) Start at the root and traverse down the BST until you find the split point. The first node where p and q are on different sides is the LCA."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"In a BST, if both values are less than root, they must be in the left subtree.",question:" Why do we traverse left when both p and q are smaller?"},{answer:"The LCA is the first node that contains both nodes in its subtree, so if one node is the ancestor of the other, return it.",question:"What if one of the nodes is the LCA itself?"}],interview_followup_questions:[{answer:"Use a standard LCA approach by checking for p and q in left/right subtrees without BST constraints.",question:"How would you modify this solution if the tree were not a BST?"},{answer:"The worst-case time complexity becomes O(n), so consider self-balancing BSTs (e.g., AVL, Red-Black trees).",question:" What if the BST were unbalanced?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_medium_constructabstfromapreordertraversal",problem_name:"Construct a BST from a preorder traversal",problem_slug:"construct-a-bst-from-a-preorder-traversal",problem_rank:6,misc:{tags:["NVIDIA","Reddit","Byju's","PwC","eBay","Seagate Technology","Salesforce","Teladoc Health","Stripe","Morgan Stanley","Oracle","Bungie","Visa","Deloitte","AMD","Walmart","PayPal","Alibaba","Airbnb","Bloomberg","Splunk","Robinhood","Texas Instruments","Databricks","Philips Healthcare","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The practical application of this programming problem is most prevalent in the development of databases and search engines. Binary Search Trees (BSTs) are extensively used to streamline searching and sorting processes. For instance, in a database with millions of records, using BSTs significantly reduces the time complexity to find a specific record. Also, the concept of preorder traversal is used in JavaScript frameworks like React to navigate around the Document Object Model (DOM). The knowledge and ability to construct a BST from a given preorder traversal data can help in optimizing tasks related to searching, insertion, and deletion in the real-world software applications.",hints:[{hint:'"Construct the root using preorder[0]. Recursively divide preorder into left and right subtrees: Elements smaller than root form the left subtree. Elements greater than root form the right subtree. Build the left and right subtrees recursively."'},{hint:'"Use a monotonic decreasing stack to keep track of parent nodes. Iterate over preorder, and for each value: If it\u2019s smaller than the top of the stack, it\u2019s the left child. If it\u2019s greater, pop elements until finding its parent, then make it the right child."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The first element greater than root in preorder marks the start of the right subtree.",question:"How do we efficiently determine left and right subtrees?"},{answer:"No, because inorder traversal does not preserve hierarchy (only sorts elements).",question:"Can this problem be solved using inorder traversal?"}],interview_followup_questions:[{answer:"Use reverse traversal (Right \u2192 Left \u2192 Root) and construct in reverse.",question:"How would you construct a BST from its postorder traversal?"},{answer:"Impossible unless we also have preorder/postorder, as inorder does not provide hierarchy.",question:"How would you construct a BST from its inorder traversal?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_medium_inordersuccessorandpredecessorinbst",problem_name:"Inorder successor and predecessor in BST",problem_slug:"inorder-successor-and-predecessor-in-bst",problem_rank:7,misc:{tags:["Visa","Ernst & Young","Wayfair","Unity Technologies","Boston Consulting Group","Morgan Stanley","NVIDIA","Robinhood","Ubisoft","ARM","MongoDB","Alibaba","Epic Games","Electronic Arts","Philips Healthcare","Lyft","Qualcomm","OYO Rooms","HashiCorp","Deloitte","Teladoc Health","Bungie","Zynga","Snowflake","Salesforce","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The problem of finding Inorder predecessor and successor in a Binary Search Tree (BST) can be seen in many real-world applications such as databases or software that deal with a large set of sorted data, allowing quick insertion, deletion and lookup operations. For instance, popular database management systems like Oracle or MySQL use varieties of tree data structures such as B-Tree, B+ Tree (an extension of BST). When you need to find nearest lesser (predecessor) and nearest greater (successor) values to a particular key, applications can use Inorder traversal method, similar to the above mentioned problem, within such tree-based structures to get the result efficiently. It's a common operation, particularly in navigating, organizing and managing hierarchical or ordered information.",hints:[{hint:'"If key exists in the BST and has a left subtree, the predecessor is the rightmost (max) node in its left subtree. Otherwise, traverse the BST: If root.val < key, update predecessor = root.val and move right. Otherwise, move left."'},{hint:'"If key exists and has a right subtree, the successor is the leftmost (min) node in its right subtree. Otherwise, traverse the BST: If root.val > key, update successor = root.val and move left. Otherwise, move right."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Because in a BST:
Left subtree contains smaller values \u2192 Candidate for predecessor.
Right subtree contains larger values \u2192 Candidate for successor.`,question:" Why do we move left for the successor and right for the predecessor?"},{answer:"Yes, but it takes O(n) time, while BST traversal is O(h) (log n for balanced BSTs).",question:"Can this problem be solved using inorder traversal?"}],interview_followup_questions:[{answer:"Perform inorder traversal and track predecessor and successor manually.",question:"How would you modify this solution for a general Binary Tree (not BST)?"},{answer:"The approach mimics binary search, as we narrow down the predecessor and successor",question:"How does this problem relate to binary search?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarysearchtrees_faqs",subcategory_name:"FAQs",subcategory_slug:"faqs",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"binarysearchtrees_binarysearchtrees_faqs_binarysearchtreeiterator",problem_name:"BST iterator",problem_slug:"bst-iterator",problem_rank:1,misc:{tags:["Roche","Walmart","Zoho","Etsy","Lyft","HashiCorp","Roblox","Cerner","Optum","Activision Blizzard","AMD","Shopify","Airbnb","Twilio","Seagate Technology","Cloudflare","Wayfair","Robinhood","Rakuten","Rockstar Games","PayPal","Alibaba","Splunk","JPMorgan Chase","NVIDIA","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This concept of BSTIterator is widely used in databases and file systems. In such systems, data is often stored in a binary search tree format to allow efficient search, insertion, and deletion operations. An in-order BST iterator, like the one in the problem, allows developers to efficiently traverse through this data in a sorted manner, which can markedly improve the performance of operations like range queries, sorting and displaying data. This functionality is typically offered by databases' 'cursor' abstraction, and is fundamental to SQL operations.",hints:[{hint:'"Perform an inorder traversal during initialization and store the elements in an array. next() simply returns the next element from the stored list. hasNext() checks if more elements are available."'},{hint:'"Instead of storing all elements, use a stack to simulate recursion. Push all left children first. When next() is called: Pop the top element. Push its right subtree\u2019s leftmost path into the stack."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Optimizes space from O(n) to O(h), where h is the tree height.
Ensures O(1) average time complexity for next().`,question:"Why do we use a stack instead of storing the entire inorder traversal?"},{answer:"Inorder traversal = Left \u2192 Root \u2192 Right, so we process leftmost nodes first.",question:"Why do we push only left children initially?"}],interview_followup_questions:[{answer:"Use two stacks (one for normal and one for reversed inorder).",question:"How would you modify this iterator to support prev() for reverse traversal?"},{answer:"Yes, but inorder traversal would not guarantee sorted order.",question:"Can this iterator be extended to work on general binary trees?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_faqs_twosuminbst",problem_name:"Two sum in BST",problem_slug:"two-sum-in-bst",problem_rank:2,misc:{tags:["Siemens Healthineers","Unity Technologies","HCL Technologies","Bungie","ARM","Seagate Technology","Freshworks","Rakuten","Cerner","Optum","Intel","Visa","Shopify","Instacart","Square","Medtronic","Bain & Company","Western Digital","KPMG","Salesforce","Johnson & Johnson","Airbnb","Twilio","AMD","Mastercard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem is essentially the underpinning of a lot of algorithmic problem-solving and decision-making that goes on in real-time applications. A fun fact about this problem is that it is actually used in financial trading software. In these systems, a balance needs to be maintained and therefore, it is often required to find two numbers in a dataset that sum to a certain value. This helps in maintaining that balance and making sure that the trading activities always net out. This operation has to be very fast, and binary search trees are one of the most efficient data structures for this purpose.",hints:[{hint:'"Perform inorder traversal and store elements in a hash set. For each node x, check if k - x exists in the hash set. If found, return True, otherwise continue."'},{hint:'"Use BST Iterator (next()) for inorder traversal (ascending order). Use Reverse BST Iterator (prev()) for reverse inorder (descending order). Compare smallest + largest using two iterators."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"BST inorder traversal gives a sorted array, which allows two-pointer or binary search optimizations.",question:"Why use inorder traversal?"},{answer:"Each node is processed only once, and set lookups are O(1) on average.",question:"Why does the hash set approach work in O(n) time?"}],interview_followup_questions:[{answer:"Store all valid (x, k-x) pairs in a set.",question:"How would you modify this solution to return all unique pairs?"},{answer:"BST provides structure, reducing search complexity.",question:" How does this compare to finding k sum pairs in an unsorted array?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_faqs_correctbstwithtwonodesswapped",problem_name:"Correct BST with two nodes swapped",problem_slug:"correct-bst-with-two-nodes-swapped",problem_rank:3,misc:{tags:["Snowflake","Epic Systems","Teladoc Health","Flipkart","Riot Games","Optum","Alibaba","Visa","ARM","KPMG","JPMorgan Chase","Rockstar Games","OYO Rooms","Shopify","Western Digital","Goldman Sachs","Splunk","Robinhood","AMD","IBM","Instacart","GE Healthcare","McKinsey & Company","HashiCorp","HCL Technologies","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem mirrors a real-world issue that can occur in database recovery. Databases can sometimes experience inconsistencies due to errors, mistaken swaps, and so on. Programmers would need to rectify these inconsistencies without causing more errors by using algorithms similar to the solution of this problem. In fact, binary search trees, like the ones mentioned in the problem, are frequently used to store data in databases due to their efficient search, insert, and delete operations!",hints:[{hint:'"As we traverse in inorder (Left \u2192 Root \u2192 Right), the correct sequence should be in ascending order. If prev.val > curr.val, we found an out-of-order pair."'},{hint:'"Perform Morris Traversal to detect swapped nodes in O(1) space. Identify two misplaced nodes during traversal. Swap their values to restore BST properties."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Because only two values were swapped, exactly two positions in inorder traversal will be incorrect.",question:" Why are there exactly two misplaced nodes?"},{answer:"Swapping nodes changes tree structure, but swapping only values restores the BST without modifications.",question:"Why do we swap values instead of swapping nodes?"}],interview_followup_questions:[{answer:"Sort the inorder array and perform minimum swaps.",question:" How would you modify the solution if nodes were swapped randomly, not just two?"},{answer:"Yes, using stack-based inorder traversal instead of recursion.",question:"Can this be solved iteratively using a stack?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"binarysearchtrees_binarysearchtrees_faqs_largestbstinbinarytree",problem_name:"Largest BST in Binary Tree",problem_slug:"largest-bst-in-binary-tree",problem_rank:4,misc:{tags:["Wayfair","GE Healthcare","Cloudflare","Roche","Epic Systems","Texas Instruments","Snowflake","Bain & Company","Zomato","Philips Healthcare","Broadcom","OYO Rooms","Boston Consulting Group","Databricks","McKinsey & Company","Zoho","JPMorgan Chase","Visa","Twilio","Pinterest","Rockstar Games","Optum","Qualcomm","HashiCorp","Chewy","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem taps into the core usage of the Binary Search Tree (BST) in software development. Real-world applications of BSTs include database systems, such as MySQL, where managing and querying large amounts of data efficiently is a key requirement. By ensuring certain subtrees maintain the properties of a BST, operations like searching, insertion, and deletion can be performed quicker, enhancing the overall performance. This problem of identifying the largest BST in a binary tree echoes the optimization tasks often required in real-world applications.",hints:[{hint:'"For each node: Recursively check left and right subtrees. Determine min, max, size of the largest BST subtree found. If the node satisfies BST conditions, update the maximum BST size."'},{hint:'"Perform postorder traversal to check each subtree. Track min, max, size of the largest BST at each node. Return the largest BST size found. "'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Postorder (Left \u2192 Right \u2192 Root) ensures that we process children first, making BST checks easier.",question:"Why do we use postorder traversal?"},{answer:"Postorder (Left \u2192 Right \u2192 Root) ensures that we process children first, making BST checks easier.",question:"Why do we use postorder traversal?"}],interview_followup_questions:[{answer:"Maintain a pointer to the root of the largest BST found.",question:"How would you modify this solution to return the actual BST subtree instead of just its size?"},{answer:"Allow equal values only on a specific side (left or right) based on constraints.",question:"How would this change if duplicate values were allowed in the BST?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"binarysearchtrees_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:4,subcategory_type:"contest",problems:[{problem_id:"range_sum_in_bst",problem_name:"Range Sum in BST",problem_slug:"range-sum-in-bst",problem_rank:0,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"great_tree",problem_name:"Great Tree",problem_slug:"great-tree",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Medium",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"heaps",category_name:"Heaps",category_slug:"heaps",category_rank:13,subcategories:[{subcategory_id:"heaps_implementationandtheory",subcategory_name:"Theory and Implementation",subcategory_slug:"theory-and-implementation",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"heaps_heaps_implementationandtheory_heaps(theoryvideo)",problem_name:"Heaps (Theory Video)",problem_slug:"heaps-theory",problem_rank:0,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"heaps_heaps_implementationandtheory_heapifyalgorithm",problem_name:"Heapify Algorithm",problem_slug:"heapify-algorithm",problem_rank:1,misc:{tags:["Swiggy","Robinhood","Flipkart","Walmart","Intel","Texas Instruments","Western Digital","Byju's","Teladoc Health","Freshworks","Cerner","NVIDIA","Chewy","GE Healthcare","Bloomberg","Target","Unity Technologies","Zynga","Lyft","Bungie","KPMG","Docker","PwC","American Express","Deloitte","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:'"Compare the node with its parent at parent = (ind-1) // 2. If nums[ind] < nums[parent], swap them and move up recursively. Stop when ind == 0 (root) or no more violations exist."'},{hint:'"Compare the node with its left child at 2*ind + 1 and right child at 2*ind + 2. Swap with the smallest child if nums[ind] is greater. Recursively move down until heap property is restored."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`If the new value is smaller, it may violate the parent rule \u2192 heapify up.
If the new value is larger, it may violate the child rule \u2192 heapify down.`,question:" Why do we sometimes heapify up and sometimes heapify down?"},{answer:"If the new value does not violate heap rules, no changes are required.",question:"What if we set a value but the heap remains valid?"}],interview_followup_questions:[{answer:"Use a Fibonacci Heap or Lazy Heap Updates to batch modifications and reduce complexity.",question:"How can we optimize updates if they happen frequently?"},{answer:"Heapify operations rely on indexed access, so arrays are the best choice. Using a linked list would increase traversal time to O(n) instead of O(log n).",question:" How would you implement this if the heap was stored in a different data structure (e.g., linked list)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"heaps_heaps_implementationandtheory_buildheapfromagivenarray",problem_name:"Build heap from a given Array",problem_slug:"build-heap-from-a-given-array",problem_rank:2,misc:{tags:["Etsy","Electronic Arts","PwC","Databricks","Zynga","Zomato","Cloudflare","Philips Healthcare","Morgan Stanley","Ubisoft","Snowflake","Roche","Zoho","Docker","Robinhood","Dropbox","Optum","Uber","PayPal","Walmart","HashiCorp","Ernst & Young","Red Hat","Swiggy","Boston Consulting Group","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"For each node at index i. Find the left child at 2*i + 1. Find the right child at 2*i + 2."},{hint:'"Swap with the smallest child if nums[i] > nums[child]. Recursively heapify down until the heap property is restored."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Nodes beyond (n//2) - 1 are leaf nodes, which already satisfy the heap property.
We only need to heapify down from non-leaf nodes.`,question:"Why do we start heapifying from (n//2) - 1 instead of index 0?"},{answer:`Heapify down efficiently restores the heap from the bottom up.
Heapify up is useful for inserting elements one by one but is less efficient for building a heap.`,question:"Why is heapify down used instead of heapify up?"}],interview_followup_questions:[{answer:`Heapifying requires O(n log n) traversal time in a linked list, making it inefficient.
Arrays are preferred for heaps due to direct index-based access.`,question:"How does this work if the heap is stored in a linked list instead of an array?"},{answer:`Instead of placing the smallest child at the top, place the largest child during heapify.
Change comparisons from nums[i] > nums[child] to nums[i] < nums[child].`,question:"How would you modify this to build a max-heap instead?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"heaps_heaps_implementationandtheory_implementminheap",problem_name:"Implement Min Heap",problem_slug:"implement-min-heap",problem_rank:3,misc:{tags:["Epic Systems","MongoDB","Docker","Swiggy","Epic Games","DoorDash","Uber","Boston Consulting Group","Medtronic","Morgan Stanley","Bloomberg","Freshworks","GE Healthcare","AMD","Snowflake","Twilio","Reddit","Johnson & Johnson","Bain & Company","American Express","Instacart","Lyft","ARM","Broadcom","Roche","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"The heap is usually stored in an array. An empty list can represent an initial empty heap."},{hint:"Add x to the end of the array. The smallest element is always at index 0. Swap the root (minimum element) with the last element. Return the length of the array representing the heap. Return True if the array is empty, otherwise False."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Insertion: New elements start at the bottom, so we move up to fix order.
Deletion: The last element is moved to the top, so we move down to fix order.`,question:"Why do we heapify-up on insertion but heapify-down on deletion?"},{answer:`Insertion: New elements start at the bottom, so we move up to fix order.
Deletion: The last element is moved to the top, so we move down to fix order.`,question:"Why do we heapify-up on insertion but heapify-down on deletion?"}],interview_followup_questions:[{answer:"Use a self-balancing heap to maintain real-time priority ordering.",question:" How would this be implemented for a dynamic streaming dataset (priority queue)?"},{answer:`Instead of 2*i+1 and 2*i+2, use d*i+1, d*i+2, ..., d*i+d for children.
Heapify operations check among d children instead of 2.`,question:"How does this extend to a d-ary heap (e.g., ternary heap with 3 children per node)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"heaps_heaps_implementationandtheory_implementmaxheap",problem_name:"Implement Max Heap",problem_slug:"implement-max-heap",problem_rank:4,misc:{tags:["Boston Consulting Group","Airbnb","McKinsey & Company","Rockstar Games","Splunk","Swiggy","Western Digital","Roche","Byju's","MongoDB","Ernst & Young","Reddit","Visa","Chewy","Unity Technologies","JPMorgan Chase","Zomato","Nutanix","Optum","Walmart","Goldman Sachs","PayPal","Cloudflare","Flipkart","Cerner","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:'"Since the maximum value is the largest number stored, it must be found by scanning the heap (worst case O(n)). Alternatively, maintain a secondary max pointer while inserting elements (if extra space is allowed)."'},{hint:'"Find the largest value in the heap (brute-force O(n) scan). Swap it with the last element, remove it, and heapify down to restore the min-heap order."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"A Min-Heap naturally orders values in ascending order. By negating values, we store the largest values as the smallest negative numbers, effectively reversing the order while still using min-heap operations.",question:"Why do we use negative values for max-heap simulation?"},{answer:"Since we negate values, negative inputs will be flipped to positive internally, ensuring heap operations work as expected.",question:"What happens if all values are negative?"}],interview_followup_questions:[{answer:"Instead of negating values, use a direct Max-Heap (heapify-up and heapify-down adjusted for > instead of <).",question:" How would you modify this for a standard Max-Heap instead of a Min-Heap?"},{answer:`Instead of 2*i+1 and 2*i+2, children are at di + 1, di + 2, ..., d*i + d.
Heapify down must consider d children instead of 2.`,question:"How does this extend to a d-ary heap (e.g., ternary heap with 3 children per node)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"heaps_heaps_implementationandtheory_checkifanarrayrepresentsaminheap",problem_name:"Check if an array represents a min heap",problem_slug:"check-if-an-array-represents-a-min-heap-",problem_rank:5,misc:{tags:["Philips Healthcare","OYO Rooms","Cerner","Optum","KPMG","Mastercard","Target","Alibaba","Square","Ubisoft","Roche","Seagate Technology","Byju's","Goldman Sachs","eBay","Ernst & Young","Zoho","Siemens Healthineers","Splunk","Freshworks","Flipkart","PwC","Johnson & Johnson","MongoDB","DoorDash","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: Binary min-heaps play a critical role in various data-intensive applications in the software industry. They are particularly effective in designing priority queues and implementing algorithms like Dijkstra's shortest path. Also, in the network sector, binary min-heaps help to handle bandwidth management and packet scheduling in Internet routers. Thus, a function that determines the validity of a binary min-heap can act as a useful debugging tool in these scenarios, ensuring that the underlying data structure is correctly organized and functional.",hints:[{hint:'"A binary min-heap is stored in array form, where: Parent of i is at (i-1) // 2. Left child of i is at 2*i + 1. Right child of i is at 2*i + 2."'},{hint:'"To check if nums is a valid min-heap: Iterate through all parent nodes (indices 0 to (n//2) - 1). Compare each parent with its left and right children (if they exist). If any parent is greater than a child, return False."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"A heap does not require total sorting. It only needs each parent \u2264 its children.",question:"Why do we only check parent-child relations (nums[i] \u2264 nums[2*i+1])?"},{answer:`BST: Left subtree < root < right subtree (strict ordering).
Heap: Only requires parent \u2264 children, not full ordering.`,question:"How is this different from a binary search tree (BST)?"}],interview_followup_questions:[{answer:"Instead of nums[i] \u2264 nums[child], check nums[i] \u2265 nums[child].",question:" How would you check if an array represents a max-heap instead of a min-heap?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"heaps_heaps_implementationandtheory_convertminheaptomaxheap",problem_name:"Convert Min Heap to Max Heap",problem_slug:"convert-min-heap-to-max-heap",problem_rank:6,misc:{tags:["Activision Blizzard","Broadcom","Visa","Johnson & Johnson","Lyft","Epic Games","Bain & Company","Intel","Freshworks","HCL Technologies","Snowflake","Splunk","Micron Technology","Goldman Sachs","Rockstar Games","Riot Games","Electronic Arts","Epic Systems","Ubisoft","Cerner","Docker","Cloudflare","Pinterest","Robinhood","PayPal","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The underlying concepts of min-heaps and max-heaps are used prominently in creating priority queues in software development. Priority queues are widely used in several real-world applications, like Dijkstra's algorithm for shortest path in graph problems, in load balancing and interrupt handling in an operating system, and in data compression algorithms like Huffman coding. The conversion between min-heaps and max-heaps could be beneficial in scenarios where the priority order needs to be reversed or dynamically changed in applications.",hints:[{hint:'"Start from the last non-leaf node ((n//2) - 1). Apply heapify-down for each node in reverse order. Ensure that every parent is greater than its children by swapping if necessary."'},{hint:'"Find the left child at 2*i + 1. Find the right child at 2*i + 2. Swap with the largest child if nums[i] < nums[child]. Recursively heapify down until the heap property is restored."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Leaf nodes (from n//2 onward) are already valid heaps (no children to compare).
Only non-leaf nodes need to be heapified down.`,question:"Why do we start heapifying from (n//2) - 1 instead of 0?"},{answer:"Since both min-heap and max-heap use the same array structure, we only modify values in-place.",question:"Why does this work in-place without extra space?"}],interview_followup_questions:[{answer:"Apply heapify-down in reverse order (swap with the smallest child instead of the largest).",question:" How would you modify this to convert a max-heap into a min-heap?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"heaps_heaps_implementationandtheory_heapsort",problem_name:"Heap Sort",problem_slug:"heap-sort",problem_rank:7,misc:{tags:["AMD","Electronic Arts","Databricks","Twilio","Intel","DoorDash","Roblox","Activision Blizzard","Alibaba","PayPal","Etsy","Oracle","Seagate Technology","Ubisoft","Wayfair","Docker","PwC","McKinsey & Company","Rockstar Games","MongoDB","Stripe","OYO Rooms","Swiggy","Reddit","Uber","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:'"Convert nums into a max-heap (largest element at root). Start heapifying from last non-leaf node (n//2) - 1 down to 0. Use heapify-down to maintain the heap property."'},{hint:'"Swap the root (max element) with the last element. Reduce heap size and heapify-down the new root to restore heap order. Repeat until the array is sorted in non-decreasing order."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Leaf nodes (n//2 to n-1) are already valid heaps, so no need to heapify them.
Only non-leaf nodes need adjustment.`,question:"Why start heapifying from (n//2) - 1?"},{answer:`Heap sort has worst-case O(n log n) complexity, while quicksort can degrade to O(n\xB2).
Heap sort is better for nearly sorted or small arrays where recursion overhead of quicksort is expensive.`,question:"Why is heap sort preferred over quicksort in some cases?"}],interview_followup_questions:[{answer:`Heap sort is inherently unstable (swaps can change relative order).
Solution: Store (value, index) pairs and sort based on original indices for stability.`,question:"Can heap sort be modified to be stable?"},{answer:`Heapify is inefficient for linked lists (O(n log n) traversal).
Use merge sort instead, as it\u2019s more cache-friendly.`,question:"How would you modify heap sort for a linked list?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"heaps_heaps_implementationandtheory_k-thlargestelementinanarray",problem_name:"K-th Largest element in an array",problem_slug:"k-th-largest-element-in-an-array",problem_rank:8,misc:{tags:["Epic Games","Cloudflare","Optum","Johnson & Johnson","Cerner","Broadcom","Target","Pinterest","Salesforce","Mastercard","Medtronic","Snowflake","Stripe","Texas Instruments","Electronic Arts","KPMG","Byju's","Rockstar Games","Swiggy","Qualcomm","Morgan Stanley","Zoho","Goldman Sachs","Bain & Company","DoorDash","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'The concept underlying the "kth largest element" problem is widely used in real-time analytics applications and Big Data processing, where one might need to find the top k values out of massive streams of data. This concept is used in systems used by massive social media platforms where they need to identify the top trending topics, hashtags, or posts at any given time. Similarly, this same principle is used in music streaming apps to find the top k most listened songs out of millions of songs available.',hints:[{hint:'"Use a min-heap of size k. Insert the first k elements into the heap.  The heap\u2019s root (smallest in the heap) is the k-th largest element."'},{hint:'"Convert the entire array into a max-heap (O(n)). Extract k elements using heapify-down (O(k log n)). The k-th extracted element is the k-th largest."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`A min-heap of size k tracks the top k largest elements, making extraction O(1).
A max-heap stores everything, requiring O(k log n) extraction.`,question:"Why use a min-heap for k-th largest instead of max-heap?"}],interview_followup_questions:[{answer:`Perform reverse inorder traversal, counting elements until reaching k.
Time Complexity: O(h + k) \u2248 O(log n + k) for balanced BSTs.`,question:"What changes for k-th largest in a BST instead of an array?"},{answer:"QuickSelect is O(n) on average but O(n\xB2)` worst case.\nMedian of Medians ensures O(n) worst case but is more complex to implement.",question:"How does QuickSelect compare to Median of Medians for selection problems?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"heaps_faqs",subcategory_name:"FAQs",subcategory_slug:"faqs",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"heaps_heaps_faqs_kthlargestelementinastreamofrunningintegers",problem_name:"Kth largest element in a stream of running integers",problem_slug:"kth-largest-element-in-a-stream-of-running-integers",problem_rank:3,misc:{tags:["Snowflake","Zomato","Rockstar Games","Square","AMD","Wayfair","Ernst & Young","Philips Healthcare","Visa","Flipkart","Freshworks","Morgan Stanley","Teladoc Health","Cloudflare","Cerner","PwC","Alibaba","Uber","Bloomberg","Red Hat","Siemens Healthineers","GE Healthcare","Medtronic","PayPal","Epic Systems","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"The smallest element in the heap is the k-th largest element in the stream. Any number smaller than the heap\u2019s root is ignored. Any number larger than the root replaces it, maintaining the top k largest elements."},{hint:'"Insert val into the heap if the size is less than k. If the heap already has k elements, compare val with the smallest element: If val > heap[0], replace heap[0] and heapify. If val <= heap[0], discard it."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`A min-heap of size k efficiently tracks the k-th largest element.
The root always holds the k-th largest value, avoiding full sorting.`,question:"Why use a min-heap instead of a max-heap?"},{answer:`Sorting each time costs O(n log n), while heap operations are O(log k).
Sorting is too slow for large data streams.`,question:"Can we use sorting instead of a heap?"}],interview_followup_questions:[{answer:`Stock market analysis (track top k highest prices).
Leaderboard ranking (finding k-th highest score).
Data stream processing (analyzing incoming data efficiently).
`,question:"How does this work in real-world applications?"},{answer:`Use a max-heap of size k (instead of a min-heap).
The largest value in the max-heap is the k-th smallest.`,question:"How would you find the k-th smallest element instead?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"heaps_contest",subcategory_name:"Contest",subcategory_slug:"contest-heaps",subcategory_rank:3,subcategory_type:"contest",problems:[{problem_id:"k_nearest_integers",problem_name:"K Nearest Integers",problem_slug:"k-nearest-integers",problem_rank:0,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"minimum_operations_to_exceed_target",problem_name:"Minimum Operations To Exceed Target",problem_slug:"minimum-operations-to-exceed-target",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"furthest_reachable_mountain",problem_name:"Furthest Reachable Mountain",problem_slug:"furthest-reachable-mountain",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"graphs",category_name:"Graphs",category_slug:"graph",category_rank:14,subcategories:[{subcategory_id:"graphs_theoryandtraversals",subcategory_name:"Theory and traversals",subcategory_slug:"theory-and-traversals",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"graphs_graphs_theoryandtraversals_introductiontograph",problem_name:"Introduction to Graph",problem_slug:"introduction-to-graph",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"graphs_graphs_theoryandtraversals_connectedcomponents",problem_name:"Connected Components",problem_slug:"connected-components",problem_rank:2,misc:{tags:["Micron Technology","Chewy","Teladoc Health","JPMorgan Chase","OYO Rooms","NVIDIA","Cerner","Visa","Roche","Siemens Healthineers","Reddit","Goldman Sachs","Mastercard","Salesforce","Red Hat","Stripe","AMD","Databricks","Johnson & Johnson","Zynga","PayPal","Activision Blizzard","Walmart","Optum","Epic Systems","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One real-world application of this problem is in the realm of social networking platforms. These platforms, such as Facebook or LinkedIn, represent users as nodes(vertices) and their relationships as edges. The algorithm to find connected components can identify clusters of users who are all interconnected, essentially revealing user communities and helping improve friend recommendations or targeted advertising. For example, if all your existing friends form a connected component, it's highly likely that a recommendation from this group will be a valid friendship suggestion. The 'connected components' has immense practical significance in the area of social network analysis.",hints:[{hint:"Maintain a boolean array visited[V], where visited[i] = True means the node has already been counted in a component. Start DFS/BFS from an unvisited node, marking all reachable nodes in that component as visited."},{hint:"Another approach is Union-Find (Disjoint Set Union) to keep track of components. Initially, each node is its own component. For each edge (a, b), merge the sets containing a and b. The number of unique parents in the DSU structure gives the number of components."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"It visits all nodes in a component before moving to another, ensuring each DFS/BFS call represents one full component.",question:"Why does DFS/BFS correctly count the number of components?"},{answer:"The algorithm still works; each disconnected part will be counted as a separate component.",question:" What if the graph is disconnected?"}],interview_followup_questions:[{answer:"Convert the edge list into an adjacency list before performing DFS/BFS.",question:"How would this change if the graph was stored as an edge list instead of an adjacency list?"},{answer:"Use Path Compression and Union by Rank to speed up the merging process to nearly O(1) per operation.",question:"How would you optimize Union-Find for large graphs?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_theoryandtraversals_traversaltechniques",problem_name:"Traversal Techniques",problem_slug:"traversal-techniques",problem_rank:3,misc:{tags:["Oracle","Intel","Twilio","Swiggy","MongoDB","JPMorgan Chase","Alibaba","Broadcom","Shopify","Boston Consulting Group","Cloudflare","Target","Etsy","Unity Technologies","Stripe","Roche","Johnson & Johnson","Dropbox","Splunk","Qualcomm","ARM","Epic Systems","Lyft","Western Digital","Deloitte","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The techniques of Depth First Search (DFS) and Breadth First Search (BFS) that this problem explores are widely used in real-world routing algorithms, like Google Maps. They need to traverse through a huge graph of roads and intersections (vertices) and find the shortest or fastest path. Moreover, DFS is also used in web-crawlers of search engines like Google to visit and index new webpages, wherein the link structure of the websites is treated as a graph.",hints:[{hint:'"Use recursion (or a stack) to explore as deep as possible before backtracking. Maintain a visited array to mark visited nodes and avoid cycles. Start from vertex 0 and visit nodes in the order they appear in adj[i]."'},{hint:'"Use a queue to explore nodes level by level (FIFO order). Begin from 0, mark it as visited, and process all connected nodes before moving deeper. The traversal order follows the order of neighbors in adj[i]."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`DFS explores deep first, requiring backtracking, so recursion or an explicit stack is used.
BFS explores all neighbors before moving deeper, requiring a queue (FIFO order).`,question:"Why does DFS use a stack while BFS uses a queue?"},{answer:"DFS may revisit nodes without a visited array`, leading to infinite recursion.\nBFS correctly handles cycles by ensuring each node is processed only once.",question:"What happens if the graph contains cycles?"}],interview_followup_questions:[{answer:`Use BFS, as it guarantees the shortest path in O(V + E).
Track parent nodes to reconstruct the path.`,question:"How would you modify DFS/BFS to find the shortest path in an unweighted graph?"},{answer:"Maintain a recursion stack (visited[i] == True while in recursion) to detect back edges.",question:"How would you modify DFS to detect cycles in the graph?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"graphs_traversalproblems",subcategory_name:"Traversal Problems",subcategory_slug:"traversal-problems",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"graphs_graphs_traversalproblems_numberofprovinces",problem_name:"Number of provinces",problem_slug:"number-of-provinces",problem_rank:1,misc:{tags:["Rockstar Games","GE Healthcare","PayPal","Zoho","Western Digital","Bungie","Salesforce","Oracle","Activision Blizzard","Boston Consulting Group","Optum","Square","Shopify","HashiCorp","ARM","Uber","American Express","Zynga","Target","Instacart","McKinsey & Company","Ernst & Young","Texas Instruments","Etsy","Riot Games","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept derived from this problem, is often used in the domain of social networking applications like LinkedIn, Facebook etc. They use a similar concept in identifying 'network clusters' in their friend graph. A network cluster, in this case, could be seen as a 'province' where everyone is somehow connected. This helps in refining their recommendation systems to suggest new connections within the same network cluster and essentially grow the regional network. Algorithms with a similar foundation to this are also used in the detection of communities in various network structures.",hints:[{hint:"Treat each row of the adjacency matrix as a node and use DFS or BFS to explore all connected nodes starting from an unvisited city. Every time a new DFS/BFS starts, it identifies a new province (connected component)."},{hint:"Maintain a boolean array visited[V] to track which cities have been explored. Every DFS/BFS call finds one province, so increment the province count."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:`Yes, but the problem gives a matrix, so directly working with it avoids extra preprocessing.
Adjacency lists are better when adj is sparse.`,question:"Can we use adjacency lists instead of an adjacency matrix?"},{answer:"Union-Find quickly merges groups, reducing time complexity to nearly O(n) per operation with path compression.",question:" How does Union-Find (Disjoint Set Union) help?"}],interview_followup_questions:[{answer:"For directed graphs, strongly connected components (SCCs) should be found using Kosaraju\u2019s or Tarjan\u2019s Algorithm.",question:"How would you modify this for a directed graph?"},{answer:"Convert it into an adjacency list and use optimized BFS/DFS traversal.",question:"How does this change if the matrix is sparse?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_traversalproblems_numberofislands",problem_name:"Number of islands",problem_slug:"number-of-islands",problem_rank:2,misc:{tags:["Seagate Technology","DoorDash","Flipkart","Goldman Sachs","American Express","Databricks","Pinterest","Visa","Philips Healthcare","HashiCorp","Electronic Arts","Western Digital","Wayfair","Dropbox","Robinhood","Broadcom","Uber","Shopify","Target","Intel","McKinsey & Company","Optum","Splunk","AMD","Qualcomm","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'Fun Fact: This programming problem is fundamental to the sectors of digital image processing and Geographic Information System (GIS). Recognizing "islands" or unique contiguous areas within an image can be used in satellite image processing and telemetry to identify separate landmasses or regions on earth. For instance, Google Maps uses similar algorithms to differentiate between various landforms. Moreover, it can also find its applications in the field of medical imaging where we may need to separate different regions, tissues or organs within the body.',hints:[{hint:`"DFS (Recursive or Stack-based Iterative): Start from an unvisited '1', mark all reachable '1's as visited using DFS. Each DFS call marks an entire island. BFS (Queue-based): Similar to DFS, but uses a queue to explore all connected lands level by level."`},{hint:`"Treat each '1' as an initially separate set. Merge adjacent '1' cells into one connected component using Union-Find. The number of unique components after merging gives the number of islands."`}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Islands can be connected diagonally, so we must check 8 directions (left, right, up, down, and 4 diagonals).",question:" Why do we check diagonal connections?"},{answer:"BFS is iterative (using a queue), which avoids deep recursion issues that can cause stack overflow in large grids.",question:"Why is BFS preferred over DFS in some cases?"}],interview_followup_questions:[{answer:"Track the size of each island during DFS/BFS and return the maximum size found.",question:" How can we find the largest island in the grid?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_traversalproblems_floodfillalgorithm",problem_name:"Flood fill algorithm",problem_slug:"flood-fill-algorithm",problem_rank:3,misc:{tags:["Alibaba","NVIDIA","Rockstar Games","Zomato","Bloomberg","Seagate Technology","Airbnb","Freshworks","eBay","HCL Technologies","Broadcom","Etsy","Twilio","Intel","Ubisoft","Johnson & Johnson","Visa","Stripe","Ernst & Young","Reddit","Flipkart","Bungie","Micron Technology","Qualcomm","Byju's","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'The flood fill algorithm, as described in this problem, is widely used in graphics editing tools, such as Photoshop and GIMP, as well as in game development. For example, when you use the "bucket fill" tool in a painting software to change the color of a connected region, you are effectively using the flood fill algorithm. Similarly, in games like Minesweeper, the algorithm is used to reveal connected, non-mined squares.',hints:[{hint:'"Start from (sr, sc), recursively explore all 4-connected pixels with the same color. Change their color to newColor and continue the process. Base Case: If a pixel is out of bounds or has a different color, stop."'},{hint:'"Instead of recursion, use a queue (FIFO order) to iteratively process all pixels level by level. This avoids stack overflow issues in very large images where recursion depth might be too high."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Use a visited check by marking pixels with newColor or using a boolean visited array.",question:"How do we prevent infinite loops when filling?"},{answer:"If image[sr][sc] == newColor, return immediately, otherwise, the function will keep modifying the same color indefinitely.",question:"What happens if newColor is the same as the original color?"}],interview_followup_questions:[{answer:"Use a multi-criteria flood fill, checking both color and other attributes.",question:"How would you modify this if pixels had multiple properties (e.g., color and texture)?"},{answer:"Yes, it can be adapted to explore all reachable paths in a maze.",question:"Can flood fill be used for maze-solving or pathfinding?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_traversalproblems_numberofenclaves",problem_name:"Number of enclaves",problem_slug:"number-of-enclaves",problem_rank:4,misc:{tags:["Morgan Stanley","Ubisoft","Pinterest","Salesforce","Oracle","Target","Byju's","OYO Rooms","Siemens Healthineers","Walmart","Nutanix","Philips Healthcare","Splunk","Zoho","Johnson & Johnson","Cerner","Stripe","MongoDB","eBay","Qualcomm","Flipkart","Square","KPMG","Wayfair","Dropbox","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: Problems like these have practical use in video game development, specifically in world-building and environment design. The algorithm that checks for land cells in a grid that you can't walk off is extensively used in designing the navigatable areas in different game maps. For instance, popular sandbox games such as Minecraft, where players can manipulate the in-game environment, this checks ensure that there are no inaccessible or infinitely looping paths formed when the players alter the game terrain.",hints:[{hint:'"The binary matrix represents an implicit graph, where each land cell is a node. Water cells (0) act as barriers, preventing movement. Boundary-connected land cells (1s) are not enclosed, so we must exclude them."'},{hint:'"Use a visited array to track explored land cells. Alternatively, modify the grid in-place by converting boundary-connected land (1s) to -1 or some marker."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Boundary-connected land cells will always escape, so we mark them first to avoid unnecessary checks.",question:"Why flood fill from the boundary instead of scanning the entire grid?"},{answer:`If all 1s are connected to the boundary, the answer is 0.
If an inner landmass is completely enclosed by water (0s), it is counted.`,question:"What if the grid is entirely land (1s)?"}],interview_followup_questions:[{answer:"Use DFS/BFS per enclosed region, keeping a region counter instead of a single count.",question:"How would you modify the algorithm to count separate enclosed land regions?"},{answer:"This is a variant, where only fully enclosed islands (not touching the boundary) are counted.",question:' How does this relate to the "Number of Islands" problem?'}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_traversalproblems_rottenoranges",problem_name:"Rotten Oranges",problem_slug:"rotten-oranges",problem_rank:5,misc:{tags:["Walmart","Robinhood","Splunk","Roche","Johnson & Johnson","Chewy","Dropbox","Lyft","Electronic Arts","Micron Technology","Philips Healthcare","Activision Blizzard","Docker","Unity Technologies","Wayfair","Ernst & Young","IBM","Bain & Company","Shopify","Alibaba","Zynga","GE Healthcare","Rockstar Games","Western Digital","Medtronic","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This problem is an instance of the Breadth-First Search (BFS) algorithm and simulates a typical spread mechanism like virus propagation, pollution spread, etc. A practical software application of this concept can be found in computer graphics used for animation and game development. Here, this BFS algorithm can be used for "flood fill" operations, where you "fill" or change the color of a particular area on the screen (like converting all the fresh oranges to rotten ones in our problem). Additionally, the BFS algorithm is also used in networking software to traverse nodes or routers, and in social media algorithms to understand and predict how information or trends spread across a network.',hints:[{hint:'"Since the rot spreads level by level, BFS (Queue-based) is the best approach. Push all initially rotten oranges (2) into the queue as starting points. Process oranges minute by minute, marking newly rotten oranges and tracking time."'},{hint:'"Count the total fresh oranges (1s) initially. Track the number of fresh oranges that rot over time. If, after BFS, some fresh oranges remain, return -1 (not all oranges can rot)."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"By processing all rotten oranges (2s) simultaneously, BFS correctly tracks rot spread minute by minute.",question:" How do we ensure all oranges rot in the minimum time?"},{answer:"No, because BFS relies on a FIFO queue to track spreading over time.",question:"Can BFS be implemented without an explicit queue?"}],interview_followup_questions:[{answer:`Introduce a time decay factor, where a rotten orange turns fresh again after k minutes.
This would require additional state tracking in BFS.`,question:'How would you modify this if oranges could "heal" back to fresh after some time?'},{answer:"Instead of 4 directions, consider 8 directions (up, down, left, right + 4 diagonals).",question:"How would you modify this if an orange could rot diagonally as well?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_traversalproblems_distanceofnearestcellhavingone",problem_name:"Distance of nearest cell having one",problem_slug:"distance-of-nearest-cell-having-one",problem_rank:6,misc:{tags:["Cerner","Epic Games","Deloitte","Johnson & Johnson","OYO Rooms","NVIDIA","Philips Healthcare","Alibaba","Seagate Technology","Docker","Chewy","Red Hat","Boston Consulting Group","Etsy","Bloomberg","Target","American Express","Broadcom","Zoho","Medtronic","Riot Games","Swiggy","Epic Systems","Rakuten","Walmart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`This concept has practical relevance in geographical information systems (GIS) software. One of the most typical use cases is the "distance raster calculation". For instance, it is used to calculate the shortest distance from a specific location (represented by '1' in the grid) to every other location in the defined area. This problem essentially represents how GIS systems compute 'proximity analysis' - determining the nearest pharmacy, hospital, grocery store, etc., which is a core feature in navigation and map apps like Google Maps or Uber.`,hints:[{hint:'"All cells containing 1 are sources (starting points) in BFS. Push all 1s into a queue first with an initial distance of 0. Then, process BFS level by level, updating distances for 0s as they are visited."'},{hint:'"Maintain a distance matrix, initialized to \u221E for 0s and 0 for 1s. Update distances in BFS as we explore neighbors in 4 directions (up, down, left, right). Stop updating a cell if its current distance is already smaller than the computed distance."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"BFS works faster for unweighted grids, while Dijkstra\u2019s is needed for weighted graphs.",question:"Can we use Dijkstra\u2019s Algorithm instead?"}],interview_followup_questions:[{answer:"Modify BFS to ignore -1 cells and avoid updating their distances.",question:"What if some cells were blocked (e.g., -1 representing an obstacle)?"},{answer:`Yes, use a two-pass DP approach:
First pass (top-left to bottom-right) updates distances from the top and left.
Second pass (bottom-right to top-left) updates distances from the bottom and right.
However, BFS is more intuitive and efficient for this problem.`,question:" Can we solve this using Dynamic Programming (DP)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_traversalproblems_surroundedregions",problem_name:"Surrounded Regions",problem_slug:"surrounded-regions",problem_rank:7,misc:{tags:["Rakuten","Cerner","Robinhood","Texas Instruments","Ubisoft","Oracle","Snowflake","JPMorgan Chase","Morgan Stanley","Dropbox","Chewy","Etsy","Nutanix","Reddit","Splunk","Swiggy","Salesforce","Unity Technologies","Epic Games","Boston Consulting Group","Airbnb","Cloudflare","Bungie","Instacart","Activision Blizzard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`This problem is essentially a variation of the often-used 'Flood Fill' algorithm, which is an important tool in computer graphics. Applications such as Photoshop make use of this algorithm in their "fill" tool, where an entire area of similar color is replaced by another color with just one click. Similarly, this problem replaces an entire area of similar characters with another character. Besides, Flood Fill algorithm is also applied in gaming industry for mechanics like territory control, path finding, and more.`,hints:[{hint:"Start from all 'O's on the boundary (first & last row, first & last column). Use DFS or BFS to mark all connected 'O's as safe (e.g., change them to -1 temporarily)."},{hint:`"Traverse the grid again: Convert remaining 'O's to 'X' (they are enclosed). Convert marked -1 back to 'O'."`}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Only 'O's connected to the boundary remain unchanged, so marking them first avoids unnecessary checks.",question:"Why start from the boundary instead of scanning the whole grid?"},{answer:"DFS/BFS efficiently marks boundary-connected regions in O(N \xD7 M) time instead of repeatedly scanning the grid.",question:"Why use DFS/BFS instead of brute force checking all 'O' cells?"}],interview_followup_questions:[{answer:"Use adjacency lists instead of 2D arrays for better memory efficiency.",question:" What if the matrix was sparse (mostly empty)?"},{answer:"Yes, we can mark safe 'O's with -1 (or any placeholder) and restore them later.",question:"Can we modify the matrix in-place?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_traversalproblems_numberofdistinctislands",problem_name:"Number of distinct islands",problem_slug:"number-of-distinct-islands",problem_rank:8,misc:{tags:["PayPal","Cerner","Bain & Company","MongoDB","Flipkart","Johnson & Johnson","Oracle","Alibaba","Pinterest","Mastercard","Instacart","NVIDIA","Optum","Ernst & Young","Wayfair","DoorDash","eBay","Splunk","Qualcomm","Etsy","Siemens Healthineers","Zoho","Square","Dropbox","Rockstar Games","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is similar to the problem of image recognition in computer vision. It reflects the task of identifying unique shapes in a binary image. For instance, identifying different hand written digits in a scanned document, or detecting specific objects in satellite imagery. Techniques such as Depth-First Search (DFS) or Breadth-First Search (BFS), commonly used in solving this coding problem, are similarly used in computer vision tasks to recognize patterns and categorize images.",hints:[],difficulty:"Medium",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"graphs_cycles",subcategory_name:"Cycles",subcategory_slug:"cycles",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"graphs_graphs_cycles_detectacycleinanundirectedgraph",problem_name:"Detect a cycle in an undirected graph",problem_slug:"detect-a-cycle-in-an-undirected-graph",problem_rank:1,misc:{tags:["DoorDash","Databricks","Shopify","Intel","Bloomberg","Epic Games","Western Digital","Instacart","Mastercard","Johnson & Johnson","Reddit","Ubisoft","Wayfair","HashiCorp","Deloitte","Morgan Stanley","Zynga","Etsy","Broadcom","Boston Consulting Group","Goldman Sachs","Robinhood","Square","Electronic Arts","Walmart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fact: Detecting cycles in a graph is a fundamental problem that has a wide array of applications in the software industry. It is used in networking and telecommunication for finding routing loops or cyclical data dependencies. Also, it finds usage in DevOps for spotting potential infinite loops in tasks automation like ansible, puppet, etc. More so, in social networking applications like Facebook or LinkedIn, it can help track circular friend requests or connections. Algorithms for detecting cycles are extensively used in garbage collection mechanism in programming languages like Python, Java and Javascript to identify and clean up objects that are no longer needed by the program to efficiently manage memory.",hints:[{hint:'"Use DFS with a visited array to track traversal. A cycle exists if a visited node is reached again and it is not the parent node."'},{hint:'"Use Union-Find to track connected components. If an edge connects two nodes already in the same set, a cycle is detected."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"In an undirected graph, a visited neighbor could be the previous node in traversal, which is not a cycle.",question:"Why check the parent in DFS for cycles?"},{answer:"Union-Find tracks connected components efficiently, detecting if two nodes already belong to the same component when an edge is added.",question:"Why use Union-Find for cycle detection?"}],interview_followup_questions:[{answer:"Modify DFS to store path traces and return all cycle paths.",question:"How can we find all cycles instead of just detecting one?"},{answer:"Use incremental DSU updates to detect cycles in real-time.",question:"What if the graph was dynamically changing (edges being added/removed)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_cycles_bipartitegraph",problem_name:"Bipartite graph",problem_slug:"bipartite-graph",problem_rank:2,misc:{tags:["Siemens Healthineers","Unity Technologies","Zomato","Intel","Broadcom","NVIDIA","Roblox","Texas Instruments","IBM","ARM","MongoDB","Etsy","Lyft","Pinterest","Alibaba","Twilio","Shopify","PayPal","KPMG","Zoho","Target","McKinsey & Company","Boston Consulting Group","Wayfair","Byju's","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The problem at the heart of bipartite graph detection is used heavily in computer sciences, especially in network and social media applications. One real-world example is in designing matchmaking systems in multiplayer video games. In these games, players are sometimes seen as two distinct sets - for example, team A and team B - and we need to ensure each player in team A has a corresponding match in team B. Hence, the problem of partitioning the players into compatible teams turns out to be checking for a bipartite graph!",hints:[{hint:'"Use BFS to color nodes alternately (like a checkerboard pattern). If a node is already colored with the same color as its adjacent node, the graph is not bipartite."'},{hint:'"Recursively assign alternating colors to adjacent nodes. If any conflict is found, return False."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"In an odd-length cycle, alternating colors fail at some point, leading to two adjacent nodes having the same color.",question:" Why does an odd-length cycle mean the graph is not bipartite?"},{answer:`BFS is preferred as it naturally colors level by level (like a breadth-first layer coloring).
DFS works as well but can lead to deep recursion.`,question:"Why use BFS instead of DFS?"}],interview_followup_questions:[{answer:"A graph is bipartite if and only if it is 2-colorable.",question:"How does this relate to two-coloring a graph?"},{answer:"Directed graphs require different approaches, such as checking Strongly Connected Components (SCCs).",question:"How would you modify this for a directed graph?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_cycles_topologicalsortorkahn'salgorithm",problem_name:"Topological sort or Kahn's algorithm",problem_slug:"topological-sort-or-kahns-algorithm",problem_rank:3,misc:{tags:["Stripe","MongoDB","Bungie","Activision Blizzard","Chewy","GE Healthcare","Byju's","Reddit","OYO Rooms","Docker","Zomato","Rakuten","Cloudflare","Databricks","Bloomberg","Oracle","Target","PwC","eBay","Walmart","Uber","Mastercard","Epic Games","Teladoc Health","JPMorgan Chase","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One interesting application of the topological sorting algorithm in real-world software development is in job scheduling. It helps to establish a sequence of tasks where some tasks are dependent on others being completed first. This algorithm helps in the correct priority-based execution of tasks for project management software and operating systems. Also, package managers use topological sorting to resolve dependencies between packages to ensure correct installation order.",hints:[{hint:'"Perform DFS on unvisited nodes. Push nodes to a stack after all their neighbors are visited (post-order traversal). The reverse of the stack gives a valid topological order."'},{hint:'"Maintain an in-degree array (count of incoming edges for each node). Start with nodes having 0 in-degree (no dependencies). Process each node and reduce the in-degree of its neighbors. Nodes whose in-degree becomes 0 are added to the queue."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Cycles prevent a valid ordering, as no node in a cycle can appear before the others.",question:" Why is topological sorting only possible for DAGs?"},{answer:"Post-order traversal ensures a node is pushed to the stack only after visiting all its children, giving the correct order when reversed.",question:"How does DFS ensure topological sorting?"}],interview_followup_questions:[{answer:"Yes, as long as all u \u2192 v constraints are satisfied, multiple valid orderings exist.",question:"Can DFS and BFS give different valid topological sorts?"},{answer:"Topological sorting remains the same, but it can be used to find shortest/longest paths in DAGs.",question:"How would this change if the graph was weighted?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_cycles_detectacycleinadirectedgraph",problem_name:"Detect a cycle in a directed graph",problem_slug:"detect-a-cycle-in-a-directed-graph",problem_rank:4,misc:{tags:["Target","Broadcom","Morgan Stanley","Chewy","Johnson & Johnson","Instacart","Siemens Healthineers","Byju's","Mastercard","Goldman Sachs","AMD","PayPal","ARM","Walmart","Deloitte","Boston Consulting Group","Pinterest","McKinsey & Company","Shopify","Medtronic","DoorDash","Robinhood","Uber","Texas Instruments","GE Healthcare","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The problem of detecting cycles in a directed graph is essentially used in software dependency management systems. These systems, such as NPM for JavaScript or Maven for Java, have to resolve various package dependencies while avoiding cycles. A cycle would mean you have a circular dependency, which often leads to infinite recursion or other logical errors. Thus, algorithms solving such problems are integral to the smooth operation of modern software development and operations.",hints:[{hint:'"Use DFS with a recursion stack to track visited nodes. A cycle exists if a node is visited again while still being processed (present in the recursion stack)."'},{hint:'"A DAG (Directed Acyclic Graph) can always be topologically sorted. If a valid topological sort is not possible (i.e., not all nodes are processed), a cycle exists."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"In a directed graph, a cycle means a back edge exists, where a node is revisited before completing its DFS call.",question:" Why check the recursion stack in DFS for cycles?"},{answer:`Yes, but with a different approach:
If a visited node is encountered again and it is not the parent, a cycle exists.`,question:"Can DFS detect cycles in an undirected graph?"}],interview_followup_questions:[{answer:"A deadlock occurs if there is a cycle in the resource allocation graph, making cycle detection crucial.",question:"How does this relate to detecting deadlocks in operating systems?"},{answer:"No, both methods correctly detect cycles, but BFS (Kahn\u2019s Algorithm) requires extra processing (in-degree tracking), whereas DFS (recursion stack) works naturally.",question:"Can DFS and BFS give different results for cycle detection?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"graphs_hardproblems",subcategory_name:"Hard Problems",subcategory_slug:"hard-problems",subcategory_rank:4,subcategory_type:"study",problems:[{problem_id:"graphs_graphs_hardproblems_findeventualsafestates",problem_name:"Find eventual safe states",problem_slug:"find-eventual-safe-states",problem_rank:1,misc:{tags:["Uber","Docker","Robinhood","HashiCorp","Micron Technology","Roblox","PwC","Rockstar Games","IBM","Riot Games","Zomato","Epic Games","Siemens Healthineers","Dropbox","Unity Technologies","Stripe","Johnson & Johnson","Lyft","Deloitte","Seagate Technology","Shopify","Cerner","Goldman Sachs","Nutanix","Target","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The problem of finding safe nodes in a graph is directly relevant to the implementation of network routing protocols. Network devices, like routers, create a graph representation of the network topology. As packets of data traverse the network, they follow the paths defined by this graph. In some cases, a failed device or lost connection could render a node, or even an entire sub-network, unreachable. These are equivalent to the terminal nodes in this problem. So, effectively determining safe nodes could ensure the reliable delivery of packets by avoiding isolated or failure-prone segments of the network.",hints:[{hint:"Reverse all edges (construct the reverse graph). Use Kahn\u2019s Algorithm (BFS with indegree processing) to find nodes that can reach terminal nodes. Sort the result in ascending order before returning."},{hint:'"Use DFS to detect cycles: Any node part of a cycle is not safe. Mark visited nodes and store results for faster lookup (memoization). If DFS reaches a terminal node or another known safe node, mark the current node safe."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`In the original graph, safe nodes are hard to track.
In the reverse graph, terminal nodes become zero in-degree nodes, allowing BFS to process them first.`,question:" Why reverse the graph for Kahn\u2019s Algorithm?"},{answer:"The algorithm naturally accounts for this, as all terminal nodes and their reachable nodes are safe.",question:"What if the graph has multiple terminal nodes?"}],interview_followup_questions:[{answer:`Use adjacency lists instead of matrices for memory efficiency.
Parallelize BFS processing for large datasets.`,question:"Can this be optimized for very large graphs?"},{answer:"Run BFS/DFS separately on each component and process them independently.",question:"How do we handle disconnected graphs?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblems_courseschedulei",problem_name:"Course Schedule I",problem_slug:"course-schedule-i",problem_rank:2,misc:{tags:["Visa","McKinsey & Company","Red Hat","AMD","Optum","Chewy","Morgan Stanley","KPMG","Flipkart","Etsy","Target","American Express","Salesforce","Stripe","Teladoc Health","Byju's","Square","Unity Technologies","Epic Games","Pinterest","eBay","Boston Consulting Group","PwC","Freshworks","Rakuten","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem mimics the concept of handling dependencies in project management and software development tools. For instance, in package managers like npm (Node Package Manager), a package can't be installed before its dependencies are resolved. Similarly, in project management tools like Jira, certain tasks may be blocked until prerequisite tasks are completed. This problem essentially deals with a directed graph and a cycle detection which is similar to detection of cyclic dependencies in real life software development.",hints:[{hint:'"Construct the graph using an adjacency list. Compute the in-degree (number of prerequisites) for each node. Use Kahn\u2019s Algorithm (BFS) to process nodes with zero in-degree (no prerequisites). If we can process all N tasks, return True; otherwise, return False (cycle exists)."'},{hint:'"Use DFS with a recursion stack to detect back edges (which indicate a cycle). If a cycle is found, return False; otherwise, return True."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"A cycle means some tasks depend on themselves, making it impossible to finish them.",question:"Why does a cycle make task completion impossible?"},{answer:"Run BFS/DFS from all unvisited nodes to check all components",question:"How do we handle disconnected graphs?"}],interview_followup_questions:[{answer:"No change needed, since both BFS and DFS handle multiple dependencies naturally.",question:"How would you modify this if tasks could have multiple prerequisites?"},{answer:"Modify topological sorting to process higher-priority tasks first.",question:"How would this change if some tasks had priority levels?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblems_coursescheduleii",problem_name:"Course Schedule II",problem_slug:"course-schedule-ii",problem_rank:3,misc:{tags:["Zynga","Epic Games","Optum","American Express","Deloitte","Rakuten","McKinsey & Company","Airbnb","Activision Blizzard","ARM","Roblox","AMD","Salesforce","Flipkart","Instacart","Cerner","Seagate Technology","Docker","Western Digital","Swiggy","Nutanix","Shopify","Stripe","Ernst & Young","Teladoc Health","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem presents a real-world application of the topological sort algorithm, which is commonly used in project scheduling, ordering of compilation tasks, determining the sequence of tasks in project management, and resolving dependencies in package installation. In software development, it helps to identify the order of execution of interdependent classes or frameworks. An interesting use of this concept is in social media algorithms to determine the order of displaying posts based on relevance and dependency.",hints:[{hint:'"This method relies on in-degree tracking, which counts how many prerequisites a task has. Any task with an in-degree of 0 (i.e., no prerequisites) can be executed immediately."'},{hint:"As each task is completed, it reduces the in-degree of dependent tasks, allowing more tasks to become available for execution. If at any point, no tasks with 0 in-degree remain while tasks are still unprocessed, this means a cycle exists."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Since a graph can have multiple valid topological sorts, any correct sequence that satisfies the constraints is acceptable. BFS-based Kahn\u2019s Algorithm often provides lexicographically smallest order when tasks are processed in a predefined order.",question:"What happens if there are multiple valid orderings?"},{answer:"No, because this is a graph traversal problem, not an optimization problem. Dynamic Programming is useful when solving problems with overlapping subproblems and optimal substructure, neither of which applies here.",question:"Can this problem be solved using Dynamic Programming instead of Graph Algorithms?"}],interview_followup_questions:[{answer:"In that case, we would need to extend topological sorting to consider task durations. A longest path algorithm in a DAG could be used to determine the overall time required to complete all tasks while respecting dependencies.",question:"How would this change if certain tasks had weights (e.g., different completion times)?"},{answer:"This can be formulated as a critical path problem, where the goal is to minimize makespan, the total execution time required when considering dependencies and execution parallelism.",question:"What if we wanted to minimize the number of steps required to complete all tasks while respecting dependencies?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblems_alientdictionary",problem_name:"Alien Dictionary",problem_slug:"alient-dictionary",problem_rank:4,misc:{tags:["Roblox","KPMG","PayPal","Target","HCL Technologies","Reddit","PwC","Qualcomm","Databricks","Western Digital","Wayfair","Splunk","Instacart","Teladoc Health","Stripe","Siemens Healthineers","HashiCorp","Byju's","ARM","Walmart","Chewy","NVIDIA","Bloomberg","Oracle","MongoDB","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept behind this problem is used in software that deals with multiple languages, internationalization or character set conversion. These softwares often have to determine the collation order of characters in different languages, as it can greatly vary. It is also used in translation software where the sequence of characters in different languages needs to be identified. Additionally, it provides an interesting take on sorting algorithms and graph theory, which are cornerstone concepts in various areas of software development, from database management to resource allocation.",hints:[{hint:`"Compare each word with the next word and determine the first mismatching character. If ""word1"" appears before ""word2"" and the first different letter is 'x' in ""word1"" and 'y' in ""word2"", then 'x' must come before 'y' in the ordering. This gives a directed edge x \u2192 y in the graph."`},{hint:'"Track how many times each character appears as a dependent (i.e., its in-degree). Start with characters that have in-degree 0 (letters that appear first). Process letters in BFS order, ensuring that all constraints are met."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:'If "abc" appears before "ab", this is an invalid dictionary, and no valid ordering exists.',question:"What if two adjacent words have no different characters (i.e., one is a prefix of another)?"},{answer:"Characters that are present but have no dependencies should still be included in the result. They can appear in any position that does not violate constraints.",question:"What happens if some characters do not appear in ordering constraints?"}],interview_followup_questions:[{answer:"Instead of a standard topological sort, we would need a priority-based sorting algorithm, similar to Huffman Coding, where letters with more constraints or higher frequency take precedence.",question:"How would this change if words had frequency counts, and we needed the most frequent letter first?"},{answer:"These characters should be added to the result arbitrarily, as they have no restrictions on their placement.",question:"What if some characters appeared in the dictionary but were not used in any constraints?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblems_shortestpathindag",problem_name:"Shortest path in DAG",problem_slug:"shortest-path-in-dag",problem_rank:5,misc:{tags:["Oracle","Boston Consulting Group","Databricks","Twilio","Texas Instruments","Philips Healthcare","Uber","Optum","McKinsey & Company","Broadcom","Lyft","Snowflake","Cerner","Bungie","Zoho","Ernst & Young","Activision Blizzard","Electronic Arts","Intel","Roblox","Morgan Stanley","Seagate Technology","Shopify","Freshworks","Medtronic","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`A practical application of this programming problem lies in routing and navigation software, such as Google Maps or Waze. The "Directed Acyclic Graph" represents the map's network of roads, with the "vertices" representing intersections and the "edges" representing the roads themselves. The algorithm to find the "shortest path" from a source (user's starting point) to all vertices (possible destinations) is a fundamental operation of these services. This would allow them to provide real-time directions and traffic updates, indicating the fastest route to the destination. If a path can't be found (represented by '-1'), it means that destination is unreachable from the current location.`,hints:[{hint:"Since the graph is a Directed Acyclic Graph (DAG), use topological sorting to process vertices in a valid order. After sorting, relax edges following the topological order to compute shortest paths efficiently."},{hint:"Unlike Dijkstra\u2019s algorithm (which uses a priority queue), topological sorting followed by relaxation solves it in O(N + M) time. This approach works because in a DAG, edges always point forward, preventing cycles."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Since it\u2019s a DAG, negative cycles are impossible, and the approach remains valid. If there were cycles, we\u2019d need Bellman-Ford instead.",question:"What if the graph has negative weights?  "},{answer:"The algorithm automatically considers the minimum-weight path during relaxation.",question:"What if there are multiple shortest paths to a node?  "}],interview_followup_questions:[{answer:"Yes, by reversing the weights (multiplying by -1) and applying the same topological sorting + relaxation approach.",question:"Can we modify this to find the longest path in a DAG?  "},{answer:"Introduce a dummy node (N) with edges of weight 0 pointing to all sources, then run the same algorithm from node N.",question:"How can we handle multiple sources instead of a single source?  "}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblems_shortestpathinundirectedgraphwithunitweights",problem_name:"Shortest path in undirected graph with unit weights",problem_slug:"shortest-path-in-undirected-graph-with-unit-weights",problem_rank:6,misc:{tags:["Boston Consulting Group","Seagate Technology","Activision Blizzard","Red Hat","Western Digital","Epic Systems","Splunk","NVIDIA","Airbnb","OYO Rooms","HCL Technologies","JPMorgan Chase","AMD","ARM","Intel","Chewy","Nutanix","Rockstar Games","Robinhood","Salesforce","Swiggy","Optum","Micron Technology","PwC","Twilio","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of algorithm, known as the Shortest Path algorithm, is the foundation of routing on the internet. Electric signals travel faster through some types of wires or connections than others, so finding the route that gets data to its destination the quickest is a common application of Shortest Path algorithms. They are also used in map applications for finding the quickest route to your destination, accounting not only for distance but also for things like traffic and speed limits.",hints:[{hint:" Perform a topological sort to find an ordering of nodes where every node appears before its dependent nodes. Initialize a distance array with inf (or a large value) for all nodes, except for the source node (0), which is initialized to 0."},{hint:"Process the nodes in topological order, updating the shortest distances for all adjacent nodes using edge relaxation:dist[v]=min(dist[v],dist[u]+weight[u\u2192v]). If a node remains unreachable (inf distance), return -1 for that node"}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Yes, since there are no cycles, negative weights do not create infinite loops like in Dijkstra\u2019s algorithm. However, if the graph had cycles, we would need Bellman-Ford to detect negative weight cycles.",question:"Can this approach handle graphs with negative weights?"},{answer:`Dijkstra\u2019s Algorithm is best for graphs with arbitrary weights and cycles, using a priority queue (O(N + M log N)).
Topological sorting for DAGs works in O(N + M), which is faster for acyclic graphs.`,question:"How does this compare to Dijkstra\u2019s Algorithm?"}],interview_followup_questions:[{answer:"Convert the problem into a longest path problem by negating all weights, applying the same topological sorting approach, and then reversing the result.",question:"What if we needed to find the longest path instead?"},{answer:"If cycles exist, we cannot use topological sorting. Instead, we must use Dijkstra\u2019s Algorithm (if all weights are non-negative) or Bellman-Ford (if negative weights exist).",question:"How would this solution change if the graph was not a DAG?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblems_wordladderi",problem_name:"Word ladder I",problem_slug:"word-ladder-i",problem_rank:7,misc:{tags:["Wayfair","Etsy","Chewy","KPMG","Shopify","Bungie","GE Healthcare","Zynga","Goldman Sachs","Rockstar Games","American Express","PayPal","Medtronic","Roche","Uber","Instacart","McKinsey & Company","Rakuten","HashiCorp","Freshworks","Bloomberg","DoorDash","Red Hat","Dropbox","Byju's","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem is actually commonplace in natural language processing (NLP) and machine learning applications, specifically word ladder problems. A real-world application would be in the development of language-based games or language learning applications. For example, applications like Duolingo may use similar transformation sequence algorithms to create exercises that progressively change words by a single letter. Furthermore, the ability to change one word into another using minute transformations can also be used in text-detection algorithms and spelling correction systems, which is a key feature in most word processors and search engines.",hints:[{hint:"Insert all words from wordList into a set (for O(1) lookups). If targetWord is not in wordList, return 0 (since transformation is impossible). Use BFS starting from startWord, with each level representing a transformation step."},{hint:"For each word at the front of the queue, generate all possible one-letter transformations and check if they exist in wordList. If a transformation leads to targetWord, return the current depth. If all possible transformations are exhausted and targetWord is not reached, return 0."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Instead of checking all words in wordList, iterate over each character of the current word and replace it with all possible lowercase letters (a-z) to generate new words.",question:"How do we generate valid word transformations efficiently?"},{answer:"No, because BFS explores words based on their transformations, not their positions in wordList.",question:"Does the order of words in wordList matter?"}],interview_followup_questions:[{answer:"Yes! Instead of searching from startWord to targetWord, run two simultaneous BFS (one from startWord and another from targetWord). This approach halves the search space, improving performance from O(NM) to O(NM/2).",question:"Can we optimize further using bidirectional BFS?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblems_wordladderii",problem_name:"Word ladder II",problem_slug:"word-ladder-ii",problem_rank:8,misc:{tags:["MongoDB","eBay","Instacart","McKinsey & Company","Oracle","Twilio","JPMorgan Chase","Nutanix","American Express","Bain & Company","Seagate Technology","Ubisoft","Airbnb","Broadcom","Robinhood","Bloomberg","PayPal","NVIDIA","Salesforce","Databricks","Cloudflare","Zynga","Ernst & Young","Etsy","Mastercard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem is central in applications such as machine translation, autocorrect algorithms, or even text-based games. The ability to transform one word into another by changing letters, while still producing valid words, forms the foundation of such systems. The concept is known as Levenshtein distance or Edit distance in computer science, which measures the minimum number of operations (transformations) required to change one word into another. It is a popular algorithm in Natural Language Processing and Computational Linguistics.",hints:[{hint:'"Bidirectional BFS is optimal, reducing the search space by simultaneously expanding from startWord and targetWord until they meet in the middle. Instead of storing only distances, we store parent mappings to track how each word was reached, allowing us to reconstruct all shortest paths efficiently."'},{hint:'"After finding the shortest path depth using BFS, we use Depth-First Search (DFS) or backtracking to reconstruct all possible sequences. The parent mapping stores how each word was reached during BFS, and DFS reconstructs sequences by following this mapping back from targetWord to startWord."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The transformation can still begin from startWord if it can reach an existing word in wordList. If startWord cannot transform into any valid word, return an empty list.",question:"What if startWord is not in wordList?"},{answer:"BFS guarantees the shortest transformation sequence because it explores level by level. DFS does not guarantee this and may explore deeper paths unnecessarily.",question:"Why use BFS instead of DFS for finding shortest paths?"}],interview_followup_questions:[{answer:"If each word change had a different cost, Dijkstra\u2019s Algorithm (shortest path with weighted edges) would be required instead of BFS.",question:"How would you modify this approach if words had different transformation costs?"},{answer:"Instead of using a fixed wordList, we could use a Trie or a HashMap-based dynamic structure to allow fast insertions/deletions and efficient search operations.",question:"How would you handle dynamic word additions or deletions in wordList?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"graphs_shortestpathalgorithms",subcategory_name:"Shortest Path Algorithms",subcategory_slug:"shortest-path-algorithms",subcategory_rank:5,subcategory_type:"study",problems:[{problem_id:"graphs_graphs_shortestpathalgorithms_dijkstra'salgorithm",problem_name:"Dijkstra's algorithm",problem_slug:"dijkstra's-algorithm",problem_rank:1,misc:{tags:["Texas Instruments","Activision Blizzard","Electronic Arts","Bungie","Ubisoft","Western Digital","Philips Healthcare","Micron Technology","Goldman Sachs","Stripe","Target","Bain & Company","Zoho","Visa","Snowflake","Zomato","AMD","HCL Technologies","Dropbox","Epic Games","IBM","Square","Splunk","Byju's","JPMorgan Chase","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The concept underlying this programming problem is used in the implementation of various routing algorithms in major navigation applications like Google Maps or Waze. For example, Dijkstra\u2019s algorithm, which also finds the shortest path given a source node in a graph (which could represent cities, intersections etc.) with associated weights (distances, time or cost), enables these apps to provide users with the quickest or shortest route to their destination. This problem is fundamental to the field of Graph Theory that lays the foundation for network analysis and optimization in various domains including computer networks, operations research, and transportation.",hints:[{hint:" Initialize a distance array dist[] where dist[i] stores the shortest known distance from S to i. Set all distances to 10^9 (infinity) except dist[S] = 0. Use a Min-Heap (Priority Queue) to always expand the current closest node."},{hint:"For each node, check all adjacent nodes and relax their distances (dist[v] = min(dist[v], dist[u] + weight)). Continue until all nodes are processed."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Since it processes each node once, it assumes that once a node is processed, its shortest distance is finalized. Negative weights can lead to situations where a better path appears after processing, causing incorrect results.",question:"Why does Dijkstra\u2019s Algorithm not work with negative weights?"},{answer:"The priority queue always picks the next closest node, ensuring that we process the shortest known path first, improving efficiency.",question:"Why do we use a priority queue in Dijkstra\u2019s Algorithm?"}],interview_followup_questions:[{answer:`Maintain a parent array to track the previous node in the shortest path.
After computing distances, backtrack from each node to reconstruct the path.`,question:"How would you modify this to return the actual shortest path, not just the distance?"},{answer:"We would need to use Bellman-Ford Algorithm (O(VE)), which can handle negative weights but not negative cycles.",question:"What if the graph had negative weight edges?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_shortestpathalgorithms_printshortestpath",problem_name:"Print Shortest Path",problem_slug:"print-shortest-path-",problem_rank:2,misc:{tags:["Western Digital","Cerner","Etsy","Stripe","Epic Systems","Johnson & Johnson","JPMorgan Chase","Micron Technology","Ernst & Young","Teladoc Health","Broadcom","NVIDIA","KPMG","Zomato","Lyft","Electronic Arts","Roche","Unity Technologies","Ubisoft","Swiggy","Freshworks","Byju's","American Express","Docker","Zoho","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The Weighted undirected graph problem is a crucial part of the Dijkstra's algorithm, which is a fundamental part of routing protocols that enables the internet to work effectively. These routing protocols, including Open Shortest Path First (OSPF) and Border Gateway Protocol (BGP), spin Dijkstra's algorithm continuously to determine the shortest path for routing data from one node to another. So, every time you use Google Maps for the shortest route or stream a Netflix video, you're indirectly using the principles of weighted graph problem!",hints:[{hint:"Construct the graph using an adjacency list representation. Maintain a priority queue (min-heap) to always expand the closest (smallest distance) node first. Maintain a distance array dist[], setting all distances to inf (infinity), except dist[1] = 0."},{hint:"Maintain a parent array parent[] to reconstruct the path. If n is unreachable, return [-1]. Otherwise, backtrack using parent[] to reconstruct the shortest path sequence."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Maintain a parent[] array to track the predecessor of each node in the shortest path.
Once we reach n, backtrack using parent[] to reconstruct the path.`,question:"How do we ensure we return the actual shortest path, not just the distance?"},{answer:"Bellman-Ford works for graphs with negative weight edges, but it runs in O(nm), which is slower than Dijkstra\u2019s O((n + m) log n) for large graphs.",question:"Can we use Bellman-Ford Algorithm instead?"}],interview_followup_questions:[{answer:"Yes, by using a Fibonacci Heap, we can reduce the complexity from O((n + m) log n) to O(n log n + m).",question:"Can we optimize Dijkstra\u2019s performance further?"},{answer:"We would need to use Bellman-Ford Algorithm instead of Dijkstra\u2019s, since Dijkstra\u2019s cannot handle negative weights.",question:"What if the graph contained negative weight edges?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_shortestpathalgorithms_shortestpathwithminimumeffort",problem_name:"Shortest Distance in a Binary Maze",problem_slug:"shortest-path-with-minimum-effort",problem_rank:3,misc:{tags:["Seagate Technology","Oracle","Texas Instruments","Robinhood","Deloitte","Riot Games","Etsy","Intel","Electronic Arts","Walmart","NVIDIA","Teladoc Health","Instacart","Siemens Healthineers","Reddit","Salesforce","Western Digital","Twilio","Johnson & Johnson","Snowflake","Morgan Stanley","McKinsey & Company","Alibaba","Red Hat","American Express","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"Check if either the source or destination cell is 0. If so, return -1 (impossible to reach). Use a queue for BFS traversal, storing (row, col, distance). Maintain a visited matrix to prevent cycles."},{hint:"Process each cell, exploring its 4 valid neighbors (up, down, left, right), and update their distances if they are not visited and have value 1. If we reach the destination cell, return the current distance. If the queue is exhausted and the destination is not reached, return -1."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Since all moves have the same weight (1), BFS is optimal. Dijkstra\u2019s is required only when edge weights vary.",question:"Can we use Dijkstra\u2019s Algorithm instead of BFS?"},{answer:"BFS naturally finds one of the shortest paths, but if all paths are required, additional backtracking from the destination would be needed.",question:"What if multiple shortest paths exist?"}],interview_followup_questions:[{answer:"This would require a modified Dijkstra\u2019s Algorithm, where removing obstacles adds weight to certain paths.",question:"What if obstacles could be removed at a cost?"},{answer:"Use multi-source BFS, initializing the queue with all sources simultaneously.",question:"What if multiple sources and multiple destinations existed?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_shortestpathalgorithms_pathwithminimumeffort",problem_name:"Path with minimum effort",problem_slug:"path-with-minimum-effort",problem_rank:4,misc:{tags:["Rakuten","PwC","PayPal","Snowflake","Zomato","NVIDIA","Salesforce","Uber","McKinsey & Company","MongoDB","Visa","Airbnb","OYO Rooms","Red Hat","Oracle","IBM","Bloomberg","Etsy","Unity Technologies","Bungie","Johnson & Johnson","Pinterest","Texas Instruments","Robinhood","Splunk","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept underlying this problem is similar to the logic used in routing and navigation software, such as Google Maps or Waze. In these applications, the idea is to find the shortest or least effort route between two points. But instead of considering differences in heights, they use factors such as distance, traffic, and road conditions to decide what the 'effort' of a potential route would be. In fact, this programming problem essentially models what is known as 'cost-based pathfinding,' which is a common problem in computer science for designing intelligent routing systems in various domains, not just geospatial navigation!",hints:[{hint:"Use a min-heap (priority queue) where each entry contains (effort, row, col), prioritizing smaller efforts. Maintain a minEffort[][] matrix initialized to \u221E, where minEffort[r][c] stores the smallest effort required to reach cell (r, c)."},{hint:'"Start at (0,0) with effort 0, and use Dijkstra\u2019s relaxation technique to update neighboring cells, pushing valid lower-effort paths into the heap. Once (rows-1, columns-1) is reached, return the minimum possible effort required. "'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`BFS is optimal for unweighted shortest path problems, but here, paths have varying efforts (weights).
BFS does not consider the minimum effort constraint optimally, making it inefficient for this problem.`,question:"Why can\u2019t we use BFS directly?"},{answer:`Instead of computing the shortest path directly, Binary Search finds the smallest effort where a valid path exists.
BFS/DFS is used to verify whether an effort limit is feasible.`,question:"How does Binary Search + BFS/DFS work?"}],interview_followup_questions:[{answer:"Using Fibonacci Heap, the time complexity can be improved to O(mn log log (mn)).",question:"Can we optimize Dijkstra\u2019s approach further?"},{answer:"The adjacency condition would change to include diagonal neighbors, but the algorithm remains the same.",question:"What if diagonal movements were allowed?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_shortestpathalgorithms_cheapestflightwithinkstops",problem_name:"Cheapest flight within K stops",problem_slug:"cheapest-flight-within-k-stops",problem_rank:5,misc:{tags:["OYO Rooms","Cerner","AMD","Cloudflare","HCL Technologies","Zomato","Walmart","Pinterest","Twilio","PwC","JPMorgan Chase","Ubisoft","eBay","Bungie","Freshworks","Roche","Instacart","McKinsey & Company","IBM","Deloitte","Intel","Mastercard","Teladoc Health","NVIDIA","Epic Games","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem underpins the fundamental operations of various travel and accommodation booking apps such as Expedia, Skyscanner, or Google Flights. These platforms utilize algorithms rooted in graph theory to find the cheapest or most convenient routes between locations by considering factors such as price, transit cities (stops), and directness of the route. The problem is essentially a variant of the shortest path problem with a constraint on the number of edges, which translates to the maximum number of stops in a flight journey in applications.",hints:[{hint:"Since we must limit the number of stops (k), a BFS-like approach with a priority queue (similar to Dijkstra\u2019s) is ideal. Instead of using a standard dist[] array (which tracks the shortest path without considering stops), we use a tuple (cost, node, stops) in a min-heap (priority queue)."},{hint:"If we reach dst within k+1 levels (since k refers to intermediate stops, not total edges), return the cost."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"A min-heap (priority queue) allows us to always expand the cheapest flight path first, ensuring we find the optimal solution faster.",question:"Why use a priority queue instead of a simple queue (BFS)?"},{answer:"The number of stops constraint makes it different from classical shortest path problems, requiring BFS-style expansion or Bellman-Ford modifications.",question:"How does this problem compare to the standard shortest path problem?"}],interview_followup_questions:[{answer:"The graph would require multiple weight components (cost + time), needing multi-objective optimization techniques.",question:"What if additional constraints were introduced, such as layover time between flights?"},{answer:"Negative weights don\u2019t make sense in flight prices, but if they did, we would need Bellman-Ford to detect negative cycles.",question:"What if flights had negative costs?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_shortestpathalgorithms_minimummultiplicationstoreachend",problem_name:"Minimum multiplications to reach end",problem_slug:"minimum-multiplications-to-reach-end",problem_rank:6,misc:{tags:["Rakuten","eBay","HCL Technologies","Etsy","Ernst & Young","American Express","Philips Healthcare","McKinsey & Company","Cerner","GE Healthcare","Deloitte","Oracle","Target","Johnson & Johnson","Unity Technologies","HashiCorp","OYO Rooms","Lyft","Texas Instruments","AMD","Cloudflare","Stripe","Pinterest","Walmart","Activision Blizzard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This sort of optimization problem, where one seeks to achieve a certain result in the fewest steps or the lowest cost, finds broad application in logistic optimisation in the software industry. An example can be seen in supply chain software, where this kind of problem is routinely solved to optimize transportation routes or inventory maintenance in order to reduce costs and increase efficiency. Here, the "start" and "end" might represent inventory levels at two different locations, and the numbers in the array could represent efficiencies of various transport options or suppliers.',hints:[{hint:"Use a queue where each entry contains (current_value, steps_taken). Maintain a visited set (or boolean array of size 100000) to avoid cycles."},{hint:"Process each number, generate new numbers (current * num) % 100000 for each num in arr, and enqueue them if they haven't been visited. If end is reached, return the number of steps. If the queue is exhausted, return -1."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"BFS guarantees finding the minimum steps first, as it explores all numbers at step k before moving to step k+1.",question:"Why does BFS work best for this problem?"},{answer:"The modulo ensures numbers stay bounded within 0-99999, preventing overflow and keeping the graph finite.",question:"Why do we take modulo 100000?"}],interview_followup_questions:[{answer:"The graph would contain both multiplication and division edges, requiring careful handling of non-integer results.",question:"What if we allowed division (/ operation) along with multiplication?"},{answer:"No, because this is a shortest path search problem, not an optimization problem with overlapping subproblems.",question:"Can this be solved using Dynamic Programming?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_shortestpathalgorithms_numberofwaystoarriveatdestination",problem_name:"Number of ways to arrive at destination",problem_slug:"number-of-ways-to-arrive-at-destination",problem_rank:7,misc:{tags:["Medtronic","Western Digital","Electronic Arts","Cloudflare","JPMorgan Chase","ARM","Roblox","Riot Games","HCL Technologies","Goldman Sachs","Zomato","Walmart","IBM","Ernst & Young","Alibaba","Databricks","GE Healthcare","Siemens Healthineers","Boston Consulting Group","Epic Games","Snowflake","Oracle","Philips Healthcare","MongoDB","Docker","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This programming problem resembles the widespread real life applications in route optimization, which is one of the key tasks handled by GPS and mapping services like Google Maps, Uber, and Lyft, etc. Their algorithms not only have to calculate the fastest route from point A to point B, but also provide alternatives in case the initial route is blocked or traffic conditions change. A high-level solution to this problem often involves the usage of Dijkstra's algorithm or Bellman Ford's algorithm for finding the shortest path in a graph, seen regularly in logistics, supply chain management and transport industries. The concept of finding the number of ways to reach a destination in the shortest time can be beneficial in providing multiple optimal route recommendations.",hints:[{hint:"Use Dijkstra\u2019s Algorithm with a priority queue (min-heap). Maintain a distance array (dist[]) initialized to infinity (\u221E) for all intersections except dist[0] = 0."},{hint:"Maintain a ways array (ways[]), where ways[i] stores the number of ways to reach intersection i using the shortest path. Initialize ways[0] = 1. Process nodes in priority queue (smallest travel time first). For each neighbor v of u, If dist[v] > dist[u] + time, update dist[v] and reset ways[v] = ways[u] and If dist[v] == dist[u] + time, increment ways[v] += ways[u] (since a new shortest path to v is found)."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`If a new shorter path is found, reset ways[v] = ways[u].
If an equally short path is found, add ways[u] to ways[v].`,question:"How do we handle multiple shortest paths to a node?"},{answer:"BFS works for unweighted graphs, but here roads have varying travel times, requiring weighted shortest path algorithms.",question:"Why use Dijkstra\u2019s Algorithm instead of BFS?"}],interview_followup_questions:[{answer:"Maintain a parent list to reconstruct paths via backtracking.",question:"How would you modify the algorithm to return all actual paths instead of just the count?"},{answer:"Floyd-Warshall finds shortest paths between all pairs (O(n\xB3)), while Dijkstra\u2019s is efficient for single-source shortest paths (O((n + m) log n)).",question:"How does this compare to Floyd-Warshall?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_shortestpathalgorithms_bellmanfordalgorithm",problem_name:"Bellman ford algorithm",problem_slug:"bellman-ford-algorithm",problem_rank:8,misc:{tags:["Roche","Pinterest","JPMorgan Chase","Ubisoft","HashiCorp","DoorDash","Cloudflare","MongoDB","Unity Technologies","American Express","Rockstar Games","Stripe","Lyft","Roblox","KPMG","Salesforce","Electronic Arts","Teladoc Health","Twilio","Red Hat","Ernst & Young","Micron Technology","Walmart","Intel","Texas Instruments","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This problem of finding the shortest path in a weighted, directed graph is a fundamental component of many practical applications in software development. For instance, it forms the backbone of routing protocols used in GPS systems or mapping software (like Google Maps), allowing them to calculate the shortest or fastest route between two points. In these routing systems, vertices can represent intersections or waypoints, while weights can represent distance or travel time. Detecting a negative cycle can be useful as it can represent a routing error or "time paradox" in scheduling or network applications where travel or processing time is represented.',hints:[{hint:"If any distance further decreases on the Vth iteration, a negative weight cycle exists, so return -1. Return the dist[] array with distances for all vertices, replacing unreachable nodes with 10^9."},{hint:"Initialize a dist[] array with infinity (10^9) for all vertices except dist[S] = 0. Relax all edges V-1 times (since the shortest path in a graph with V nodes requires at most V-1 edges)."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Dijkstra\u2019s Algorithm does not work with negative weights, whereas Bellman-Ford handles negative weights and detects cycles.",question:"Why use Bellman-Ford instead of Dijkstra\u2019s Algorithm?"},{answer:"Yes, using early stopping: If no distance updates occur in an iteration, we can terminate early.",question:"Can we optimize Bellman-Ford?"}],interview_followup_questions:[{answer:"Using the SPFA Algorithm (Shortest Path Faster Algorithm), which is an optimized queue-based Bellman-Ford, improving efficiency for sparse graphs.",question:"Can we improve performance further?"},{answer:"Maintain a parent array to track the previous node in the shortest path and reconstruct it via backtracking.",question:"How would you modify the algorithm to return the actual shortest path, not just distances?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_shortestpathalgorithms_floydwarshallalgorithm",problem_name:"Floyd warshall algorithm",problem_slug:"floyd-warshall-algorithm",problem_rank:9,misc:{tags:["Boston Consulting Group","Robinhood","Ubisoft","AMD","Zynga","Airbnb","Oracle","Shopify","NVIDIA","Johnson & Johnson","PwC","Bloomberg","Bungie","Stripe","Dropbox","Unity Technologies","Qualcomm","Zoho","JPMorgan Chase","Byju's","Riot Games","Databricks","Square","Wayfair","Zomato","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is a direct application of the Floyd-Warshall algorithm, a core concept utilized in the field of routing and navigation. Software applications like Google Maps, GPS systems, and various shipping and logistics platforms often use variations of this algorithm to calculate and suggest the shortest path from one location to another. This not only saves time but is also essential for enhancing the route efficiency of autonomous vehicles, drones and robotic systems.",hints:[{hint:'" Initialize a dist[][] matrix: If matrix[i][j] != -1, set dist[i][j] = matrix[i][j]. If i == j, set dist[i][i] = 0. If matrix[i][j] == -1, set dist[i][j] = \u221E (indicating no direct path)."'},{hint:'"Run three nested loops (O(V\xB3)): Use each vertex k as an intermediate node and check if going through k provides a shorter path and Detect negative weight cycles."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Floyd-Warshall computes all-pairs shortest paths in O(V\xB3), whereas Dijkstra\u2019s needs O(V\xB2 log V + VE), making it inefficient for dense graphs.",question:"Why use Floyd-Warshall instead of Dijkstra\u2019s Algorithm?"},{answer:`Floyd-Warshall (O(V\xB3)) is ideal for dense graphs.
Bellman-Ford (O(V\xB2E)) is more useful for sparse graphs with negative weights.`,question:"How does Floyd-Warshall compare to Bellman-Ford?"}],interview_followup_questions:[{answer:"Maintain a parent matrix (next[][]), updating it during relaxation to track the intermediate vertices.",question:"What if we needed to reconstruct the shortest paths, not just distances?"},{answer:"Floyd-Warshall is infeasible; instead, use Johnson\u2019s Algorithm (O(V\xB2 log V + VE)), which combines Dijkstra\u2019s and Bellman-Ford for better efficiency.",question:"What if the graph was very large (V > 10^4)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_shortestpathalgorithms_findthecitywiththesmallestnumberofneighbors",problem_name:"Find the city with the smallest number of neighbors",problem_slug:"find-the-city-with-the-smallest-number-of-neighbors",problem_rank:10,misc:{tags:["Roche","Alibaba","GE Healthcare","Boston Consulting Group","Goldman Sachs","Qualcomm","Mastercard","Siemens Healthineers","Philips Healthcare","Airbnb","Broadcom","Seagate Technology","Optum","Epic Systems","McKinsey & Company","Stripe","Zoho","Rakuten","PayPal","Robinhood","Morgan Stanley","Epic Games","Roblox","Micron Technology","HCL Technologies","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem mimics the core concept of routing in the field of computer networks and telecommunications. In real world, think of these cities as 'nodes' and the connections between them as 'edges'. This type of problem is solved using algorithms like Dijkstra's or the Floyd-Warshall algorithm in the design of routing protocols for networks, where it is crucial to determine the nearest or least-cost path from one node to another. While it's not about finding a city with the smallest number of reachable cities, the method to find shortest paths in a network is definitely a practical application of this problem. It's a routine part of the functionality of essential tech parts, such as Internet routers, Google Maps, GPS systems, and more.",hints:[{hint:"Construct an adjacency matrix dist[][] and Run Floyd-Warshall Algorithm (O(n\xB3)) to compute the shortest distance between all pairs of cities."},{hint:"For each city, count the number of reachable cities within the given Threshold distance. Identify the city with the fewest reachable cities. If there\u2019s a tie, return the city with the highest index."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If so, use the minimum weight among them when constructing the adjacency matrix.",question:"Can there be multiple roads between the same cities?"},{answer:"If dist[i][j] > Threshold, city j is not considered reachable from i.",question:"How do we handle cities that are unreachable?"}],interview_followup_questions:[{answer:"Bellman-Ford (O(n\xB2m)) would be needed for negative weights, as Floyd-Warshall does not work with negative cycles.",question:"What if edges had negative weights?"},{answer:"Use Dijkstra\u2019s Algorithm on demand instead of recomputing all-pairs shortest paths.",question:"How would we handle dynamic graph changes (adding/removing edges)?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"graphs_minimumspanningtree",subcategory_name:"Minimum Spanning Tree",subcategory_slug:"minimum-spanning-tree",subcategory_rank:6,subcategory_type:"study",problems:[{problem_id:"graphs_graphs_minimumspanningtree_msttheory",problem_name:"MST theory",problem_slug:"mst-theory",problem_rank:1,misc:{tags:["JPMorgan Chase","Morgan Stanley","Goldman Sachs","Salesforce","Optum","Riot Games","Splunk","Etsy","Seagate Technology","Electronic Arts","Deloitte","American Express","Databricks","OYO Rooms","Red Hat","Uber","Lyft","Robinhood","HCL Technologies","Epic Systems","Instacart","Activision Blizzard","Zomato","Texas Instruments","Ubisoft","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[],difficulty:"Hard",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1},{problem_id:"graphs_graphs_minimumspanningtree_disjointset",problem_name:"Disjoint Set",problem_slug:"disjoint-set-",problem_rank:2,misc:{tags:["Wayfair","Alibaba","Riot Games","PayPal","Walmart","Ernst & Young","Docker","NVIDIA","Medtronic","Reddit","Siemens Healthineers","Etsy","Rakuten","Intel","Salesforce","HCL Technologies","Target","Broadcom","Databricks","Optum","Red Hat","Chewy","Electronic Arts","PwC","Splunk","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The union-find data structure, or the disjoint set, is specifically designed for efficient handling of the equivalence relation problem. It plays a fundamental part in some very popular real-world applications. For example, it is a key component in Kruskal's algorithm, which is a widely used algorithm to find the minimum spanning tree in a graph. The minimum spanning tree has plenty of utilities, from designing the efficient networking in telecom industry to powering the recommendation engines in apps like Netflix, where it's used to cluster users based on their viewing patterns. The rank and size heuristics are used to optimize the efficiency of the union-find operations, making these applications even more performant in solving real-world problems.",hints:[{hint:"When calling find(), update the parent pointer to the root, making future lookups O(1). "},{hint:'"Attach the smaller height tree to the larger height tree to keep the structure balanced.  Attach the smaller set to the larger set to keep set sizes balanced."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Without it, finding the root takes O(n) in the worst case. Path compression flattens the structure, making future lookups nearly O(1).",question:"Why does Union-Find need Path Compression?"},{answer:"No, we should only use one heuristic at a time. Using both would reduce effectiveness because size-based merging does not directly track tree height.",question:"Can we use Union by Rank and Union by Size together?"}],interview_followup_questions:[{answer:"Extend parent[] and rank[]/size[] dynamically using a hash map instead of fixed arrays.",question:"How would this change if nodes were added dynamically?"},{answer:"Maintain a list of elements in each component and update it during union().",question:"What if we wanted to track the actual connected components?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_minimumspanningtree_findthemstweight",problem_name:"Find the MST weight",problem_slug:"find-the-mst-weight",problem_rank:3,misc:{tags:["Wayfair","Texas Instruments","Optum","American Express","Deloitte","Bungie","Walmart","Rakuten","Docker","Instacart","Freshworks","Seagate Technology","Unity Technologies","Visa","Qualcomm","Airbnb","Micron Technology","Alibaba","Splunk","IBM","Broadcom","Square","Activision Blizzard","Philips Healthcare","Roblox","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept of a Minimum Spanning Tree, as outlined in the problem statement, is a fundamental algorithm used within network design. It plays a key role in practical applications such as the design of computer, telecommunication, and transportation networks. In any such network, it is crucial to connect all nodes with the minimum possible cost, hence the need for an MST. It\u2019s also used in data clustering algorithms (like hierarchical clustering) in machine learning, and image segmentation in computer vision.",hints:[{hint:"Sort edges in ascending order of weight. Use Disjoint Set (Union-Find with Path Compression & Union by Rank) to keep track of connected components. Iterate over sorted edges. If an edge does not form a cycle, include it in the MST and merge the components. If V-1 edges have been included, stop (MST is complete). Return the sum of MST edge weights."},{hint:"Use a priority queue (min-heap) to always expand the lightest edge connected to the MST. Maintain a visited set and a cost array to track the cheapest edge connecting each vertex to the MST. Extract the minimum-weight edge and expand the MST iteratively until all vertices are included. Return the sum of MST edge weights."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If weights are not unique, multiple valid MSTs can exist, but their total weight is always the same.",question:"What if multiple MSTs exist?"},{answer:"A tree with V nodes always has V-1 edges, ensuring minimal connectivity without cycles.",question:"Why does an MST always have exactly V-1 edges?"}],interview_followup_questions:[{answer:"Store edges in a result list during MST construction.",question:"How would we modify the algorithm to return the actual MST edges, not just the weight sum?"},{answer:"MST algorithms work even with negative weights as long as the graph is connected.",question:"What if the graph had negative weights?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"graphs_hardproblemsii",subcategory_name:"Hard Problems II",subcategory_slug:"hard-problems-ii",subcategory_rank:7,subcategory_type:"study",problems:[{problem_id:"graphs_graphs_hardproblemsii_numberofoperationstomakenetworkconnected",problem_name:"Number of operations to make network connected",problem_slug:"number-of-operations-to-make-network-connected",problem_rank:2,misc:{tags:["Cerner","Visa","IBM","Riot Games","Bloomberg","Boston Consulting Group","MongoDB","Docker","AMD","Wayfair","JPMorgan Chase","PayPal","eBay","Western Digital","Micron Technology","Shopify","Dropbox","GE Healthcare","Teladoc Health","Freshworks","KPMG","ARM","Robinhood","Instacart","Databricks","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This problem involves the concept of Graph Theory, which is widely used in numerous fields including software development. A practical example is in network design, specifically the design of minimum spanning trees in telecommunication networks, to ensure every node is connected while minimizing the total length of wires used. Additionally, social networking platforms utilize similar principles to suggest the "shortest" path to connect two individuals based on their mutual connections. Hence, ensuring connectivity while minimizing operations echoes the graph optimization algorithms used in software and network design.',hints:[{hint:'"The problem can be solved using Disjoint Set Union (DSU) / Union-Find: Find the number of connected components. If we have c components, at least c-1 edge moves are needed to connect them."'},{hint:'"Initialize a Union-Find data structure for n nodes. Union all edges and track the number of connected components. Count the number of extra edges that can be moved. If the number of extra edges is at least c-1, return c-1; otherwise, return -1."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`A tree with n nodes has exactly n-1 edges.
Any graph with fewer than n-1 edges must be disconnected.`,question:"Why must there be at least n-1 edges to connect the graph?"},{answer:"An extra edge is one that does not contribute to merging components, meaning the two vertices it connects are already in the same set",question:'How do we count "extra edges"?'}],interview_followup_questions:[{answer:"Kruskal\u2019s also uses Union-Find, but instead of merging extra edges, it selects minimum weight edges.",question:"How does this compare to Kruskal\u2019s Algorithm for Minimum Spanning Trees?"},{answer:"This would turn into a Minimum Cost Spanning Tree (MCST) problem, solvable with Prim\u2019s or Kruskal\u2019s Algorithm.",question:"What if adding new edges had a cost associated with them?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblemsii_accountsmerge",problem_name:"Accounts merge",problem_slug:"accounts-merge",problem_rank:3,misc:{tags:["OYO Rooms","Electronic Arts","Snowflake","Zynga","Epic Systems","Qualcomm","Airbnb","Optum","DoorDash","Ernst & Young","Shopify","Micron Technology","McKinsey & Company","Wayfair","Bain & Company","PayPal","GE Healthcare","Flipkart","Stripe","Walmart","Cloudflare","Red Hat","Broadcom","HashiCorp","Seagate Technology","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is actually a critical part of many modern communication apps and customer relationship management (CRM) systems. These systems often need to process thousands of accounts or user profiles from various sources and merge duplicates to ensure consistency and accuracy in managing user or customer data. This process, called deduplication, is an everyday problem, especially where data is sourced from multiple inputs, like social media, customer feedback, emails etc. An efficient algorithm to solve this in real-time can significantly improve the UX for customer support systems and data analytics tasks.",hints:[{hint:"Map each email to a unique identifier (index) using Union-Find. Merge emails that belong to the same account by performing Union operations on them."},{hint:'"Group all emails by their root parent and store them under the correct name. Sort and format the result to match the required output. "'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Union-Find is more efficient (O(N log N)) compared to DFS/BFS (O(N\xB2)) for merging components.",question:"Why use Union-Find instead of DFS/BFS?"},{answer:"No, since we need to track email relationships, we need extra space for Union-Find and email mappings.",question:"Can we merge accounts in-place without extra storage?"}],interview_followup_questions:[{answer:"This would require a bipartite graph representation rather than Union-Find.",question:"How would this change if emails had multiple owners?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblemsii_numberofislandsii",problem_name:"Number of islands II",problem_slug:"number-of-islands-ii",problem_rank:4,misc:{tags:["Oracle","Visa","Byju's","Zomato","Walmart","Wayfair","Stripe","Zynga","PayPal","Dropbox","Splunk","McKinsey & Company","Roblox","Rockstar Games","Etsy","Red Hat","JPMorgan Chase","Reddit","Uber","Siemens Healthineers","Activision Blizzard","American Express","IBM","Riot Games","Swiggy","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is a perfect representation of how geographical information systems (GIS) work. In GIS software, they constantly deal with similar situations. Land mass configuration, changes over time, and pinpointing particular areas on the maps are an everyday task for them. Watershed modeling, environmental changes, town planning, or even video games that deal with terrain generation could use an algorithm that solves this problem.",hints:[{hint:"The optimal way to track connected components is using Disjoint Set Union (DSU) (also called Union-Find)."},{hint:'"Treat each land cell as a node in a disjoint set. When a cell (r, c) is converted into land. It initially forms a new island. Check its four neighbors (up, down, left, right). If any neighbor is also land (1), merge them using Union-Find. Step 3: After each operation, return the current number of distinct islands"'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Union-Find efficiently handles incremental merging in O(\u03B1(nm)) (near constant time), whereas DFS/BFS (O(nm)) would re-traverse the grid repeatedly.",question:"Why use Union-Find instead of BFS/DFS?"},{answer:`Path Compression ensures nearly constant-time (O(\u03B1(nm))) find operations.
Union by Rank/Size keeps the DSU structure balanced.`,question:"How does Union-Find efficiently track islands?"}],interview_followup_questions:[{answer:"Use a hashmap-based Union-Find instead of a fixed n x m matrix.",question:"How would this change if the grid was dynamic (infinite expansion allowed)?"},{answer:"Yes, using a hashmap for DSU operations instead of a static parent[] array.",question:"Can we optimize this further?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblemsii_makingalargeisland",problem_name:"Making a large island",problem_slug:"making-a-large-island",problem_rank:5,misc:{tags:["Square","Freshworks","Micron Technology","Epic Systems","Instacart","IBM","PwC","Red Hat","American Express","Teladoc Health","PayPal","Intel","Oracle","Ernst & Young","MongoDB","Activision Blizzard","Etsy","NVIDIA","Zynga","Robinhood","Boston Consulting Group","Snowflake","Databricks","Swiggy","Goldman Sachs","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun fact: The underlying concept of this programming problem is extensively used in image processing applications and computer vision. Specifically, these applications use morphological operations which can include expanding the area of a unique color (akin to changing a 0 to a 1 in the problem) and then determining the size of the largest connected component (or the largest island). This can help in identifying and tracking objects or features in an image or video stream. This technique can be used in a variety of industries such as surveillance systems, autonomous vehicle systems, medical imaging processing, and more!",hints:[{hint:'"Label each island with a unique index using DFS and store its size in a hashmap {island_id: size}. For every 0 in the grid, check its adjacent 1s (up, down, left, right). The answer is the maximum size of any modified island. "'},{hint:'"Instead of running DFS/BFS for every possible 0 flip, we precompute all islands first and store their sizes. Each 0 can be flipped into 1, and we check how many distinct islands it connects to. The goal is to find a 0 that maximizes the total merged island size."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Precomputing island sizes allows checking in O(1) per 0, instead of repeatedly running DFS/BFS.",question:"Why do we store islands separately instead of checking dynamically?"},{answer:"Use a set to track unique island IDs around a 0 before summing their sizes.",question:"How do we ensure we don\u2019t double-count islands when flipping 0 to 1?"}],interview_followup_questions:[{answer:"It\u2019s similar, but here we precompute islands instead of dynamically exploring them.",question:"How does this compare to flood-fill problems?"},{answer:"Use Disjoint Set Union (DSU) for merging islands dynamically instead of DFS-based labeling.",question:"Can we optimize further?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_hardproblemsii_moststonesremovedwithsameroworcolumn",problem_name:"Most stones removed with same row or column",problem_slug:"most-stones-removed-with-same-row-or-column",problem_rank:6,misc:{tags:["Shopify","IBM","Bungie","Epic Systems","Pinterest","MongoDB","Ernst & Young","Intel","Wayfair","Goldman Sachs","PwC","McKinsey & Company","AMD","Morgan Stanley","Broadcom","Twilio","OYO Rooms","Uber","Unity Technologies","eBay","Bloomberg","Freshworks","Visa","Cerner","HCL Technologies","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is useful in the domain of game development, computational geometry, and artificial intelligence. For instance, in strategy games like Go or Chess where stone (or piece) removal based on certain conditions is part of the game logic. The underlying concept can also be applied in spatial data processing, such as Geographic Information Systems (GIS) on tasks where you might want to remove some duplicate points from the same latitudes or longitudes. This problem helps program those types of scenarios effectively and efficiently.",hints:[{hint:'"reat each row and column as a node and stones as edges connecting them. Merge stones that share the same row or column using Union-Find. If there are C connected components, at least C stones must remain. The maximum stones that can be removed is n - C."'},{hint:'"Build a graph where each stone is a node. Perform DFS/BFS to count connected components. The maximum removals is again n - C."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Union-Find efficiently tracks connected components in O(n log n), whereas naive sorting takes O(n\xB2).",question:"Why use Union-Find instead of sorting and iterating?"},{answer:"Stones are merged by row or column into a single component using path compression and union by rank.",question:"How does merging stones work in Union-Find?"}],interview_followup_questions:[{answer:"Yes, using rank-based optimizations and path compression to ensure near O(1) operations.",question:"Can we optimize Union-Find further?"},{answer:"Use graph traversal techniques to determine the best batch removals.",question:"What if multiple removals were allowed in one step?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"graphs_additionalalgorithms",subcategory_name:"Additional Algorithms",subcategory_slug:"additional-algorithms",subcategory_rank:8,subcategory_type:"study",problems:[{problem_id:"graphs_graphs_additionalalgorithms_kosaraju'salgorithm",problem_name:"Kosaraju's algorithm",problem_slug:"kosaraju's-algorithm",problem_rank:1,misc:{tags:["Lyft","Goldman Sachs","Airbnb","Bain & Company","Dropbox","Johnson & Johnson","HCL Technologies","Intel","Byju's","JPMorgan Chase","Zomato","Freshworks","Ernst & Young","Epic Games","MongoDB","Visa","Nutanix","Pinterest","AMD","NVIDIA","Philips Healthcare","Qualcomm","Rakuten","Optum","DoorDash","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept of finding strongly connected components in a directed graph has real-world applications in many fields like social media, search engines, and recommendation systems. Did you know, in social media, it is used to identify tightly-knit community structures? For example, one where everyone is friends with everyone else or everyone follows everyone else. It also helps in analyzing web pages, where each page is a vertex and hyperlinks are directed edges. By finding the strongly connected components, search engines can identify groups of pages that are highly interlinked, improving search results. So, next time when you see groups in your social media or clustered search results remember, it's derived from this graph problem!",hints:[{hint:" Perform DFS in normal order, storing nodes in a stack based on their finishing time (Topological Sort)."},{hint:"Reverse the graph (transpose the edges) and process nodes in stack order, counting SCCs using another DFS."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"A stack ensures correct DFS finish order, which is necessary for SCC detection.",question:"Why use a stack instead of directly processing nodes in reverse order?"},{answer:"It ensures that when DFS runs on the transposed graph, we never jump between SCCs.",question:"Why does processing nodes in decreasing finish time guarantee SCCs?"}],interview_followup_questions:[{answer:"Each disconnected component is treated separately, and SCCs are identified normally.",question:"How does Kosaraju\u2019s Algorithm handle disconnected graphs?"},{answer:"In an undirected graph, SCCs become connected components, and we can use a simple DFS/BFS.",question:"What if the graph was undirected?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_additionalalgorithms_bridgesingraph",problem_name:"Bridges in graph",problem_slug:"bridges-in-graph",problem_rank:2,misc:{tags:["Wayfair","Ernst & Young","ARM","Dropbox","Epic Systems","Deloitte","HCL Technologies","Splunk","AMD","Pinterest","Chewy","Western Digital","Snowflake","PayPal","Goldman Sachs","Flipkart","Johnson & Johnson","Red Hat","Zynga","Ubisoft","Freshworks","Roche","Intel","Target","Robinhood","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`Fun Fact: The concept of finding "bridges" in a graph is central to network reliability analysis in software-defined networking (SDN). In such networks, nodes represent devices and edges represent connections between them. A bridge node or edge is a critical point that, if failed, could interrupt the entire network communication. Identifying these bridges helps network engineers to design more reliable systems and take necessary precautions to prevent network failure. It's also used in power grid management and social network analysis to identify individuals or connections crucial to the network's overall cohesion.`,hints:[{hint:"Perform a DFS traversal, tracking discovery time (disc[]) and lowest reachable vertex (low[]) for each node."},{hint:"If low[v] > disc[u] for an edge (u, v), it means there is no alternative path to reach u from v, making (u, v) a bridge. If low[v] > disc[u], it means v cannot reach back to u without (u, v), confirming a bridge."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`A naive approach would remove each edge one by one and check connectivity (O(E * (V + E))), which is too slow.
Tarjan\u2019s Algorithm finds all bridges in O(V + E) efficiently.`,question:"Why not use simple DFS to find bridges?"},{answer:"low[] helps identify whether a subtree has an alternate back edge, preventing false bridge detection.",question:"Why use low[] instead of just tracking parent-child relationships?"}],interview_followup_questions:[{answer:"Bridges exist in simple graphs; parallel edges mean removing one does not disconnect the graph.",question:"What if the graph had duplicate edges?"},{answer:"Yes! Articulation points are found using a similar DFS approach with low[] values.",question:"Can we modify the algorithm to find articulation points (cut vertices)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"graphs_graphs_additionalalgorithms_articulationpointingraph",problem_name:"Articulation point in graph",problem_slug:"articulation-point-in-graph",problem_rank:3,misc:{tags:["Wayfair","MongoDB","Philips Healthcare","Boston Consulting Group","Siemens Healthineers","GE Healthcare","Morgan Stanley","IBM","Snowflake","Oracle","Deloitte","Teladoc Health","Rakuten","OYO Rooms","eBay","Intel","ARM","NVIDIA","Twilio","Cloudflare","Seagate Technology","Johnson & Johnson","Epic Systems","Ubisoft","Flipkart","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This problem involves finding "articulation points" or "cut vertices" in a network - which is critical in designing and maintaining efficient and resilient networks. For instance, failure of such points in internet networks can cause a complete shutdown of data transfer across different regions. Similar scenarios can be seen in social networks and power grids where one failure can lead to the disconnection of entire sections. Understanding these points allows for improved network robustness and better disaster recovery strategies.',hints:[{hint:"Perform DFS traversal, tracking discovery time (disc[]) and lowest reachable vertex (low[]) for each node."},{hint:"A vertex u is an articulation point if, It is the root of DFS and has two or more independent children. It is not the root, but some subtree cannot reach an ancestor (i.e., low[v] \u2265 disc[u])."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"low[] efficiently tracks whether a subtree has an alternate back edge, ensuring accurate articulation point detection.",question:"Why use low[] values instead of tracking parent-child relationships?"},{answer:"Self-loops do not affect articulation points since they do not contribute to connectivity.",question:"How do we handle self-loops or duplicate edges?"}],interview_followup_questions:[{answer:`Bridges remove edges, while articulation points remove vertices.
Both use Tarjan\u2019s DFS-based approach.`,question:"How does this relate to finding bridges in a graph?"},{answer:"Run Tarjan\u2019s DFS separately for each component.",question:"What if we needed to return articulation points in multiple disconnected components?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"graphs_contest",subcategory_name:"Contest",subcategory_slug:"contest-graphs",subcategory_rank:9,subcategory_type:"contest",problems:[{problem_id:"farthest_empty_plot_from_buildings",problem_name:"Furthest Empty Plot From Buildings",problem_slug:"furthest-empty-plot-from-buildings",problem_rank:0,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"find_all_possible_tasks",problem_name:"Find All Possible Tasks",problem_slug:"find-all-possible-tasks",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"reachable_nodes_before_destruction",problem_name:"Reachable Nodes Before Destruction",problem_slug:"reachable-nodes-before-destruction",problem_rank:2,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"dynamicprogramming",category_name:"Dynamic Programming",category_slug:"dynamic-programming",category_rank:15,subcategories:[{subcategory_id:"dynamicprogramming_introduction",subcategory_name:"Introduction",subcategory_slug:"introduction",subcategory_rank:0,subcategory_type:"study",problems:[{problem_id:"dynamicprogramming_dynamicprogramming_introduction_introductiontodp",problem_name:"Introduction to DP",problem_slug:"introduction-to-dp",problem_rank:1,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA-NOIDE",hasIDE:!1}]},{subcategory_id:"dynamicprogramming_1ddp",subcategory_name:"1D DP",subcategory_slug:"1d-dp",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"dynamicprogramming_dynamicprogramming_1ddp_climbingstairs",problem_name:"Climbing stairs",problem_slug:"climbing-stairs",problem_rank:1,misc:{tags:["Nutanix","Electronic Arts","Salesforce","Texas Instruments","Databricks","ARM","Etsy","GE Healthcare","Pinterest","Morgan Stanley","Broadcom","Twilio","Seagate Technology","Ernst & Young","Dropbox","Optum","Target","Shopify","KPMG","Micron Technology","Lyft","NVIDIA","Red Hat","Robinhood","Alibaba","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'Fun fact: The underlying concept of this problem is used extensively in routing and navigation software applications such as Google Maps and Waze. These applications use dynamic programming algorithms to calculate the shortest or most efficient path from one location to another by considering all possible routes. This problem can be seen as a simplified, linear version of such a navigation issue, where instead of just 1 or 2 steps, the "steps" can be different roads or paths that diverge and converge, leading towards the destination.',hints:[{hint:"To solve this problem, consider the last step before reaching n. You could have arrived at step n either from n-1 (by taking a 1-step move) or from n-2 (by taking a 2-step move). Thus, the number of ways to reach step n is the sum of the ways to reach n-1 and n-2. "},{hint:"A naive recursive approach results in exponential time complexity (O(2^n)) due to repeated computations. Instead, we can use memoization (top-down) or dynamic programming (bottom-up) to compute results efficiently in O(n) time and O(n) space."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The recurrence relation f(n) = f(n-1) + f(n-2) follows the same pattern as the Fibonacci series because each step depends on the sum of the previous two step counts.",question:"Why is the Fibonacci sequence relevant here?"},{answer:"The recurrence relation changes to f(n) = f(n-1) + f(n-2) + f(n-3), increasing the number of ways exponentially.",question:"What if we allow jumps of 3 steps instead of just 1 or 2?"}],interview_followup_questions:[{answer:"Using a bottom-up approach with a loop to compute f(n) from f(0) to f(n), storing only the last two computed values (O(1) space).",question:"How can this problem be solved iteratively instead of recursively?"},{answer:"The problem then transforms into counting paths in a matrix, where dp[i][j] = dp[i-1][j] + dp[i][j-1] to move right or down.",question:"How would you modify this problem for a 2D grid, where you can move right or down instead of just forward?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_1ddp_frogjump",problem_name:"Frog Jump",problem_slug:"frog-jump",problem_rank:2,misc:{tags:["Zoho","MongoDB","Cloudflare","Zynga","Epic Systems","AMD","Cerner","Alibaba","Snowflake","Etsy","eBay","Swiggy","KPMG","OYO Rooms","Target","Docker","Nutanix","Wayfair","Roche","American Express","Lyft","Ubisoft","Dropbox","Freshworks","Rakuten","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:'"At each step i, the frog has two choices:  Jump from i-1 to i (cost: abs(heights[i] - heights[i-1])). Jump from i-2 to i (cost: abs(heights[i] - heights[i-2]), if i-2 exists)."'},{hint:"A recursive approach with memoization avoids recomputing overlapping subproblems but still has O(n) space complexity. Instead, we can use an iterative bottom-up dynamic programming (DP) approach in O(n) time while reducing space to O(1) by keeping track of only the last two computed values."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The recurrence depends on the minimum of two previous states, similar to the staircase problem but with variable costs instead of fixed increments.",question:"Why does the recurrence relation resemble the Fibonacci sequence structure?"},{answer:"The frog will always prefer to take two-step jumps when possible since the energy cost is lower in a downward jump.",question:"What happens if the heights are in decreasing order?"}],interview_followup_questions:[{answer:"Modify the recurrence to allow jumps from any previous step where a jump is allowed, similar to the unbounded knapsack problem.",question:"How would you modify this if the frog could take variable jumps given in an array?"},{answer:"Use a weighted graph approach with Dijkstra\u2019s algorithm instead of DP, since the cost is no longer based on relative height differences.",question:"What if jumping costs were different, not based on height but on predefined energy values per step?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_1ddp_frogjumpwithkdistances",problem_name:"Frog jump with K distances",problem_slug:"frog-jump-with-k-distances",problem_rank:3,misc:{tags:["Pinterest","Bungie","Philips Healthcare","Splunk","OYO Rooms","Intel","Siemens Healthineers","Seagate Technology","Alibaba","Electronic Arts","Zoho","Oracle","Unity Technologies","Cerner","Johnson & Johnson","Snowflake","American Express","McKinsey & Company","Etsy","Freshworks","HCL Technologies","Qualcomm","Epic Systems","ARM","Lyft","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem can be seen as an example of Dynamic Programming and Graph Theory implemented in routing and network analysis. In fact, it mimics real-world scenarios like Google Maps' task of finding the shortest or least energy-consuming path from one location to another. Google has to take into account various factors such as path lengths, transportation modes, or even varying altitudes (if you're biking or walking) - just as our frog needs the lowest energy path to reach its goal!",hints:[{hint:"At each step i, the frog can jump to any step in the range [i+1, i+k], as long as that step exists. This means that to determine the minimum energy required at step i, we check all previous steps up to k steps back and select the minimum energy path."},{hint:"A brute-force recursive approach would try all possible paths, resulting in an exponential time complexity. Instead, we can use dynamic programming (DP) to compute results iteratively in O(n*k) time and O(n) space. "}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Since the frog can jump anywhere within [i-k, i-1], we need to evaluate all possible jumps and pick the one that requires the least energy.",question:"Why is the recurrence dp[i] = min(dp[j] + |heights[i] - heights[j]|) necessary?"},{answer:"The recurrence must be modified so that at every step i, the allowed jump range is [i+1, i+k[i]], where k[i] is an array representing the allowed jump size at step i.",question:"How does this problem change if k becomes dynamic (i.e., k changes at every step)?"}],interview_followup_questions:[{answer:"Instead of finding the minimum energy required, we must check if dp[n-1] <= budget, turning it into a bounded DP problem.",question:"What if there was an additional constraint that the frog had a limited energy budget?"},{answer:"No, a greedy approach fails because choosing the lowest energy jump at each step does not guarantee the global minimum.",question:"Can this problem be solved using a greedy approach instead of DP?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_1ddp_maximumsumofnonadjacentelements",problem_name:"Maximum sum of non adjacent elements",problem_slug:"maximum-sum-of-non-adjacent-elements",problem_rank:4,misc:{tags:["Seagate Technology","Zomato","Salesforce","eBay","Zoho","Flipkart","NVIDIA","Red Hat","Activision Blizzard","Oracle","HCL Technologies","Qualcomm","MongoDB","Alibaba","McKinsey & Company","Visa","Mastercard","Byju's","Rockstar Games","Ubisoft","Chewy","Cerner","Snowflake","ARM","Bungie","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem demonstrates the concept of dynamic programming, which is a method for solving problems by breaking them down into simpler subproblems, and storing the solutions of these subproblems to avoid solving them repeatedly. In real-world applications, dynamic programming is extensively used in optimization problems. One popular example is Google Maps, where dynamic programming algorithms are used to find the shortest path between two locations, maximizing the efficiency of the route while minimizing travel time.",hints:[{hint:'"Consider the two choices at each step i: Take nums[i] \u2192 Add nums[i] to the sum and skip the next element (i+1). Skip nums[i] \u2192 Move to the next element (i+1) without adding anything."'},{hint:'"Using dynamic programming (O(n)), we store the dp[] values to avoid redundant calculations. Further optimization reduces space complexity from O(n) to O(1), using two variables to track dp[i-1] and dp[i-2]."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"No, a greedy approach (always taking the largest available element) fails because it doesn\u2019t consider future consequences (e.g., picking a large element might force skipping multiple good elements).",question:"Can we solve this problem using a greedy approach?"},{answer:`If we include nums[i], we must take dp[i-2] to ensure no adjacent elements are included.
If we exclude nums[i], we take dp[i-1] to get the best sum without nums[i].`,question:"Why is the recurrence relation based on dp[i-1] and dp[i-2]?"}],interview_followup_questions:[{answer:"Instead of considering all elements, apply the same DP approach only to even numbers.",question:"What if there was an additional constraint that elements can only be picked if their value is even?"},{answer:`This modifies the problem into the circular house robber problem, where we solve for two cases:
Exclude the first element and solve normally.
Exclude the last element and solve normally.
Return the maximum of both cases.`,question:"What if the elements were arranged in a circular array (first and last elements are adjacent)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_1ddp_houserobber",problem_name:"House robber",problem_slug:"house-robber",problem_rank:5,misc:{tags:["American Express","Docker","OYO Rooms","Lyft","Walmart","Wayfair","Etsy","Goldman Sachs","Zoho","McKinsey & Company","Unity Technologies","Electronic Arts","Stripe","PayPal","KPMG","Instacart","Alibaba","Cerner","Bungie","Riot Games","Cloudflare","NVIDIA","Boston Consulting Group","Optum","HashiCorp","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem statement is a classic example of the Dynamic Programming technique used often in software development to enhance efficiency. In practical terms, it is similar to resource allocation problems where companies try to maximize outputs (like profits, productivity, etc.) without violating some set rules. Suppose a company with branches distributed around the world (circular manner) wants to implement a data sync operation. To avoid network congestion, the rule is that two adjacent branches can't perform the sync operation simultaneously. The solution to our robbery problem can help to schedule these operations to ensure maximum data synchronisation without violating the network rule.",hints:[{hint:'"Since house 1 and house n are adjacent, we must solve the problem in two separate cases: Exclude the first house and rob from houses [1:n]. Exclude the last house and rob from houses [0:n-1]. This ensures that we never pick both the first and last houses together."'},{hint:'"Using dynamic programming (O(n)), we store the results in a dp[] array to avoid redundant calculations. Further optimization reduces space complexity from O(n) to O(1), by storing only the last two computed values."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"If we allow robbing all houses normally, the robber could pick both first and last houses, violating the circular constraint.",question:"Why do we need to consider two cases (exclude first and exclude last)?"},{answer:"The robber picks alternate houses for the highest total sum, ensuring no two adjacent houses are robbed.",question:"What happens if all houses contain the same value?"}],interview_followup_questions:[{answer:`The recurrence relation changes to: dp[i]=max(dp[i\u22121],dp[i\u22122]+money[i],\u2026,dp[i\u2212k]+money[i])
A sliding window approach optimizes this to O(n).`,question:"What if the robber could skip at most k houses instead of 1?"},{answer:"Instead of a dp[] array (O(n) space), use two rolling variables (O(1)) to store only the last two computed values.",question:"How can we optimize this for extremely large inputs (n > 10^6)?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"dynamicprogramming_2ddp",subcategory_name:"2D DP",subcategory_slug:"2d-dp",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"dynamicprogramming_dynamicprogramming_2ddp_ninja'straining",problem_name:"Ninja's training",problem_slug:"ninja's-training",problem_rank:1,misc:{tags:["Salesforce","Qualcomm","PwC","Seagate Technology","HCL Technologies","Activision Blizzard","Twilio","Ernst & Young","DoorDash","OYO Rooms","Zomato","American Express","Robinhood","Optum","Walmart","Square","Philips Healthcare","Roblox","NVIDIA","Siemens Healthineers","Teladoc Health","Stripe","Rakuten","MongoDB","PayPal","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem is an example of dynamic programming, a commonly used problem-solving approach in software development. The concept of maximizing merit points over a range of choices without repeating the same activity, is similar to the real-world challenges that software like Google Calendar or Apple Health face. These apps need to suggest optimal fitness or productivity schedules based on a user's availability and preferences, ensuring a range of activities are covered without repetition on consecutive days. Such problems are solved using dynamic programming algorithms, just like this ninja training schedule problem.",hints:[{hint:`"Let dp[i][j] be the maximum merit points possible on day i if the ninja performs activity j (j \u2208 {0,1,2}). The ninja must pick an activity different from the previous day's to maximize points. The final answer is the maximum value from the last row of dp"`},{hint:'"A recursive approach without memoization leads to exponential complexity (O(3^n)) since we explore all choices. Using dynamic programming (O(n)), we store computed results in dp[][] to avoid redundant calculations."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Instead of a full dp[][] table (O(n * 3) space), maintain three variables tracking the last day's results (O(1)).",question:"What is the most optimized approach?"},{answer:`Extend the recurrence relation to exclude the previously chosen activity: dp[i][j]=max(dp[i\u22121][k]+matrix[i][j])\u2200k=j
This increases time complexity to O(n * m) for m activities.`,question:"What if there are more than three activities?"}],interview_followup_questions:[{answer:"Modify the recurrence to ensure that an activity cannot be picked if it was chosen in the last k days.",question:"How would this change if each activity had a cooldown period of k days before being reused?"},{answer:"Yes, a segment tree allows efficient queries and updates to maximize dynamic merit point allocations.",question:"Can this problem be solved using a segment tree for updates in a large dataset?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"dynamicprogramming_dpongrids",subcategory_name:"DP on grids",subcategory_slug:"dp-on-grids",subcategory_rank:3,subcategory_type:"study",problems:[{problem_id:"dynamicprogramming_dynamicprogramming_dpongrids_griduniquepaths",problem_name:"Grid unique paths",problem_slug:"grid-unique-paths",problem_rank:1,misc:{tags:["Visa","Dropbox","Cloudflare","Electronic Arts","Twilio","eBay","Teladoc Health","Ubisoft","DoorDash","Johnson & Johnson","Seagate Technology","American Express","Airbnb","AMD","Flipkart","Pinterest","Optum","Uber","Instacart","Target","Epic Systems","JPMorgan Chase","Ernst & Young","PwC","Chewy","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`This type of problem corresponds to a well-known algorithmic concept used in pathfinding - giving rise to techniques like Dijkstra's or A* algorithms. These are extensively used in the software industry, notably in GPS software for finding shortest routes, in game development for enabling characters to navigate through a game map, or in logistics and supply chain softwares for optimizing routes. Specifically, such a "unique ways" problem introduces the concepts of grid-based pathfinding and combinatorial counting, foundational for these advanced navigational systems.`,hints:[{hint:'"The number of ways to reach a cell depends on how you got there: From the left (matrix[i][j-1]) From the top (matrix[i-1][j])"'},{hint:'"A recursive approach without memoization results in exponential time complexity (O(2^{m+n})), making it inefficient for large grids. Using dynamic programming (O(m*n)), we store results in a dp[][] table to avoid redundant calculations."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The combinatorial approach (O(1)) is the best, as it avoids unnecessary computations.",question:"What is the best approach for large m and n values?"},{answer:"Unlike Dijkstra\u2019s algorithm, there are no weights\u2014just counting paths without obstacles.",question:"How does this problem compare to other shortest path problems?"}],interview_followup_questions:[{answer:"Yes, we can model this as a graph traversal problem, using BFS for unweighted shortest paths.",question:"Can this be solved using graph-based algorithms?"},{answer:"We modify dp[][] to store previous cell choices, then use backtracking to reconstruct the paths.",question:"What if we wanted to find the actual paths instead of just counting them?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dpongrids_uniquepathsii",problem_name:"Unique paths II",problem_slug:"unique-paths-ii",problem_rank:2,misc:{tags:["Square","Siemens Healthineers","Intel","Red Hat","DoorDash","Alibaba","Johnson & Johnson","JPMorgan Chase","Swiggy","Docker","Ernst & Young","Visa","Pinterest","Airbnb","IBM","ARM","GE Healthcare","Byju's","Splunk","Mastercard","Western Digital","Target","Epic Games","Bungie","Robinhood","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`The underlying concept of this problem is extensively used in navigation and mapping services like Google Maps and GPS devices. Algorithms that solve similar pathfinding problems, like the A* algorithm, are designed to calculate the shortest route between two points. They consider obstacles (like blocked roads or traffic) by using a similar concept as the "1s" in the provided problem. Essentially, these algorithms navigate through a complex 2D grid very similar to this problem's matrix, but on a much larger and intricate scale.`,hints:[{hint:'"Let dp[i][j] represent the number of ways to reach cell (i, j). If matrix[i][j] == 1, the cell is blocked, so dp[i][j] = 0."'},{hint:'"A recursive approach without memoization results in exponential time complexity (O(2^{m+n})), making it inefficient for large grids. Using dynamic programming (O(m*n)), we store computed results in dp[][] to avoid redundant calculations."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"No, because choosing the right or down direction optimally at each step does not guarantee a globally optimal path.",question:"Can a greedy approach work?"},{answer:"No, because obstacles break the uniform structure, making combinatorial formulas ineffective.",question:"Can we use the combinatorial approach (O(1)) like in the standard unique paths problem?"}],interview_followup_questions:[{answer:"Use Dijkstra\u2019s algorithm or Bellman-Ford algorithm to find the shortest path cost.",question:"How would you modify this for a grid with negative weight penalties instead of binary blocks?"},{answer:"Modify dp[i][j] to track jumps, incorporating teleportation paths dynamically.",question:"What if the grid had teleportation cells (T) that allowed instant movement?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dpongrids_minimumpathsumingrid",problem_name:"Minimum path sum in grid",problem_slug:"minimum-path-sum-in-grid",problem_rank:3,misc:{tags:["Pinterest","Robinhood","NVIDIA","Goldman Sachs","ARM","Instacart","Airbnb","Philips Healthcare","Johnson & Johnson","Snowflake","Cerner","HashiCorp","eBay","Red Hat","Etsy","Reddit","Intel","Rakuten","Teladoc Health","Nutanix","Seagate Technology","PayPal","Epic Systems","Wayfair","KPMG","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem is a typical example of dynamic programming and is practically used in routing and navigation systems in maps. For instance, Google Maps or GPS systems finding the shortest or least congested path from one point to another uses similar concepts. The cells in the matrix can correspond to different routes, and the integer values can be considered as the cost, time or distance of traveling through that route.",hints:[{hint:"Let dp[i][j] be the minimum path sum to reach cell (i, j). The answer is the minimum value in the last row:min(dp[m\u22121][0],dp[m\u22121][1],...,dp[m\u22121][n\u22121])"},{hint:'"A recursive approach results in exponential time complexity (O(3^m)) due to overlapping subproblems. Using dynamic programming (O(m * n)), store results in a dp[][] table to avoid redundant calculations."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Because the ninja can move down, down-left, or down-right, the optimal path is determined by the minimum sum among these three choices.",question:"Why do we take the min() of three possible previous values?"},{answer:"This is a variant of the weighted shortest path problem, where Dijkstra\u2019s Algorithm could be used with a priority queue to find the minimum path sum.",question:"How does this problem relate to shortest path algorithms?"}],interview_followup_questions:[{answer:"Store parent pointers in dp[][] and backtrack from the minimum cell in the last row.",question:"What if we wanted to return the path itself, not just the minimum sum?"},{answer:"Modify dp[i][j] = \u221E for blocked cells and ensure paths avoid them.",question:"What if some cells were blocked (-1 values), making movement impossible?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dpongrids_triangle",problem_name:"Triangle",problem_slug:"triangle",problem_rank:4,misc:{tags:["Roche","Micron Technology","Swiggy","Shopify","Etsy","OYO Rooms","Rockstar Games","Deloitte","Twilio","Dropbox","McKinsey & Company","Cloudflare","Instacart","Morgan Stanley","AMD","Epic Systems","Goldman Sachs","Pinterest","JPMorgan Chase","Reddit","Flipkart","Zoho","NVIDIA","PayPal","Texas Instruments","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem, also known as the 'Minimum Path Sum in a Triangle', has fundamental relevance in graph theory and network routing. It is used in practical cases such as network routing, where the goal is to find the path of least resistance (or in this case, the least sum). This algorithm is essential for tasks such as Google Maps or other GPS navigation systems to calculate and suggest the shortest or fastest route to a destination.",hints:[{hint:'"Each cell\u2019s minimum falling path sum depends on the minimum of its reachable previous row elements. dp[i][j]=triangle[i][j]+min(dp[i\u22121][j],dp[i\u22121][j\u22121]) This ensures we accumulate the smallest possible sum while moving downward."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"By solving subproblems from the last row upward, we ensure each subproblem has already been computed, making it an efficient overlapping subproblem approach.",question:"Why does the bottom-up approach work best?"},{answer:"Yes, by treating each transition as a graph traversal, but it would be inefficient (O(n\xB2 log n)) due to priority queue usage.",question:"Can this be solved using a queue-based BFS approach?"}],interview_followup_questions:[{answer:"Yes, but it would no longer be a DP problem and would require graph traversal techniques like BFS or Dijkstra\u2019s Algorithm.",question:"Can this problem be extended to allow movement in four directions?"},{answer:"Maintain a parent tracking array to backtrack from the minimum sum path.",question:"What if we needed to return the actual path, not just the sum?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dpongrids_cherrypickupii",problem_name:"Cherry pickup II",problem_slug:"cherry-pickup-ii",problem_rank:5,misc:{tags:["Chewy","Roblox","Ubisoft","IBM","Seagate Technology","Medtronic","Philips Healthcare","Rakuten","Robinhood","Qualcomm","DoorDash","Airbnb","Square","Alibaba","PwC","Etsy","Red Hat","Shopify","GE Healthcare","Texas Instruments","Broadcom","OYO Rooms","eBay","Ernst & Young","Zomato","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem and its underlying algorithm concepts can find use in real-world applications like video games and robotics. In a gaming scenario, this problem can be used to program artificial intelligence for characters in grid-based turn strategy games, ensuring each character gathers the most resources or points while avoiding collision. In robotics, this might be a real scenario where two robots are tasked to collect items from a given space and the optimized path needs to be calculated to collect maximum items without both robots reaching the same point at the same time. This coordination and optimization problem requires advanced algorithms for efficiency and is a fundamental challenge in multi-robot systems.",hints:[{hint:"A recursive approach with memoization is a natural way to solve this problem. Define a function that represents the maximum cherries collected when both robots are at specific positions in a given row. The function should consider all valid moves for both robots and return the optimal value. "},{hint:"To optimize further, an iterative bottom-up DP approach can be used. Instead of computing values recursively, maintain a DP table where each entry stores the best possible number of cherries collected when the robots are in specific positions. Start from the last row and work upward, simulating the robots' movement constraints."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"A greedy approach might seem tempting, such as always moving both robots toward the highest cherry cell in the next row. However, this does not guarantee an optimal solution because it does not account for long-term outcomes. A locally optimal choice may lead to a suboptimal overall collection in later steps.",question:"Why can\u2019t we solve this problem using a simple greedy approach?"},{answer:"Since the robots can move diagonally, they may attempt to move beyond the leftmost or rightmost columns. These cases should be handled explicitly in the DP state transition by ignoring moves that place a robot outside the valid column range.",question:"What happens if one of the robots goes out of bounds?"}],interview_followup_questions:[{answer:"For k robots, the DP state would expand to track k different positions per row instead of just two. The state transition would require iterating over all possible k robot moves, leading to a time complexity of O(n \xD7 m^k). While feasible for small k, further optimizations like state compression or heuristic pruning might be needed.",question:"How would you modify this problem if there were k robots instead of two?"},{answer:"Yes! We can model the matrix as a graph where each (i, j) is a node, and edges exist between valid robot moves. A Dijkstra-like algorithm with a priority queue (min-heap or max-heap) can be used to explore the best path efficiently.",question:"Can we solve this problem using graph traversal techniques?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"dynamicprogramming_dponstocks",subcategory_name:"DP on stocks",subcategory_slug:"dp-on-stocks",subcategory_rank:4,subcategory_type:"study",problems:[{problem_id:"dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstoc",problem_name:"Best time to buy and sell stock",problem_slug:"best-time-to-buy-and-sell-stock",problem_rank:1,misc:{tags:["Walmart","Intel","AMD","Etsy","MongoDB","Boston Consulting Group","Zoho","Medtronic","ARM","Target","NVIDIA","Activision Blizzard","Qualcomm","IBM","Lyft","Electronic Arts","GE Healthcare","Salesforce","Reddit","PayPal","Twilio","Robinhood","Chewy","Snowflake","Alibaba","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"While this problem is a simplified version, the concept is used in the development of algorithmic trading software. These software tools use complex algorithms, often based on this kind of problem, to automatically execute trades when certain conditions are met (like when it's most profitable to buy or sell a stock). High-frequency trading, a type of algorithmic trading that places a large number of trades very quickly, often relies on this type of decision-making logic.",hints:[{hint:"A naive brute-force approach would check all pairs (buy, sell), iterating over all possible purchase and sale days, resulting in an O(n\xB2) time complexity. "},{hint:'"A more optimal O(n) solution involves a single traversal with two variables:  min_price: Tracks the lowest price seen so far. max_profit: Tracks the highest profit achievable at each step."'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"A two-pointer approach isn\u2019t suitable here since we must track the minimum price seen so far rather than maintaining a left and right pointer comparison. A single pass with tracking variables is more efficient.",question:"Can we use a two-pointer approach to solve this problem?"},{answer:"When multiple transactions are allowed, the approach changes. Instead of finding a single global maximum, we need to track multiple increasing segments and sum up all profitable transactions.",question:" How does this solution differ from the case where multiple transactions are allowed?"}],interview_followup_questions:[{answer:"A dynamic programming solution would be required. We maintain two transactions, tracking the best buy-sell pairs using two arrays (left_profit and right_profit), or optimize it using a state machine approach.",question:"How would the approach change if we were allowed at most two transactions?"},{answer:"Not efficiently. A monotonic queue or sliding window is more useful when dealing with constraints on consecutive elements. Here, we need a global minimum tracking approach, which is best achieved with a single pass.",question:"Can this problem be solved using a sliding window or queue?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstockii",problem_name:"Best time to buy and sell stock II",problem_slug:"best-time-to-buy-and-sell-stock-ii",problem_rank:2,misc:{tags:["Walmart","Flipkart","Pinterest","Mastercard","Visa","Broadcom","Bloomberg","Teladoc Health","Morgan Stanley","Salesforce","DoorDash","Deloitte","Bungie","Medtronic","Texas Instruments","Wayfair","Splunk","Oracle","Nutanix","Unity Technologies","Rakuten","HashiCorp","Goldman Sachs","Zynga","Swiggy","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is a classic example of a scenario in algorithmic trading software, which is extensively used in finance and investment fields. Such software helps make data-driven decisions and automate multiple trades; they can execute more efficient trades than a human trader. The ability to detect and leverage profit-making opportunities like the one described in this problem is a critical function in these systems. The problem is essentially defining the peak-valley approach, a common practice in trend-following trading strategies. Algorithmic trading systems use similar logic but on a much more complex and vast scale. They often include elements like volatility prediction, pattern recognition, and high-frequency trading.",hints:[{hint:'"Define the DP states as follows:  dp[i][0] \u2192 Maximum profit on the i-th day without holding a stock. dp[i][1] \u2192 Maximum profit on the i-th day while holding a stock."'},{hint:"Since dp[i] only depends on dp[i-1], we can reduce space complexity from O(n) to O(1) by maintaining only two variables instead of an entire DP table."}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:'The -arr[i] accounts for the cost of buying the stock. When transitioning from a "not holding" state to a "holding" state, we deduct the stock price to reflect the expense.',question:"Why is there a -arr[i] in the dp[i][1] transition?"},{answer:"With only one transaction, we only track the minimum price seen so far and compute the maximum profit in one pass. With multiple transactions, we must explicitly track when to buy and sell repeatedly, which requires DP.",question:"How does this differ from the case where we can only make one transaction?"}],interview_followup_questions:[{answer:"If k transactions are allowed, we extend the DP state to dp[i][j][0] and dp[i][j][1], where j represents the number of transactions used. This leads to a DP table with O(n \xD7 k) complexity, often optimized using a rolling array or Kadane-like approach.",question:"How would the solution change if we were allowed at most k transactions?"},{answer:"Yes! The problem can be modeled as a graph, where each node represents a state (holding or not), and edges correspond to buying/selling actions. A shortest path algorithm can then determine the optimal sequence of trades.",question:"Can we solve this problem using a graph-based approach?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstockiii",problem_name:"Best time to buy and sell stock III",problem_slug:"best-time-to-buy-and-sell-stock-iii",problem_rank:3,misc:{tags:["Oracle","Docker","Seagate Technology","Dropbox","eBay","Instacart","Broadcom","Zomato","IBM","Robinhood","Micron Technology","Salesforce","Rakuten","Ernst & Young","Nutanix","Airbnb","Databricks","Zynga","Chewy","PayPal","Goldman Sachs","Shopify","Qualcomm","AMD","Ubisoft","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem is helpful in simulating the decision-making process of trading algorithms used in fintech applications and robo-advisers. By answering this problem, developers can enhance their understanding of dynamic programming, which is useful in creating algorithms that can analyze historical market data, trace multiple trading scenarios, and devise optimal selling & buying strategy to maximize profits. This forms the backbone of several stock market forecasting software and automated trading systems, which aim to provide the most profitable trades by considering the frequency and timing of transactions.",hints:[{hint:'"We define four states:  first_buy \u2192 The maximum profit after the first buy. first_sell \u2192 The maximum profit after the first sell. second_buy \u2192 The maximum profit after the second buy. second_sell \u2192 The maximum profit after the second sell."'},{hint:`"For each day's stock price arr[i], update the states as follows:  first_buy = max(first_buy, -arr[i]). first_sell = max(first_sell, first_buy + arr[i]) second_buy = max(second_buy, first_sell - arr[i]) second_sell = max(second_sell, second_buy + arr[i])"`}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"Unlike problems where we can trade infinitely, here we are limited to two transactions. Tracking second_buy ensures we properly deduct the cost of the second purchase while maximizing the total profit.",question:"Why do we need second_buy and second_sell states?"},{answer:"A DP table (dp[i][k]) could be used, where i represents the day and k represents the number of transactions. However, since k is fixed at 2, we can optimize space to O(1) instead of O(n \xD7 k) by using just four variables.",question:"Why don\u2019t we use a DP table for this problem?"}],interview_followup_questions:[{answer:"A monotonic queue isn\u2019t useful here because transactions depend on past profits rather than just local min/max values. DP efficiently captures the required dependencies.",question:"Can we solve this problem using a stack or monotonic queue?"},{answer:"For streaming prices, we must maintain a rolling sliding window approach, updating profits dynamically as new prices arrive.",question:"What if the input was streamed (i.e., prices arrive in real-time instead of an array)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstockiv",problem_name:"Best time to buy and sell stock IV",problem_slug:"best-time-to-buy-and-sell-stock-iv",problem_rank:4,misc:{tags:["eBay","Bloomberg","Zomato","Splunk","Philips Healthcare","Lyft","Zoho","HCL Technologies","Riot Games","Wayfair","Texas Instruments","Rakuten","Broadcom","Electronic Arts","AMD","DoorDash","NVIDIA","OYO Rooms","JPMorgan Chase","McKinsey & Company","Salesforce","Chewy","Instacart","IBM","Cerner","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem and its solutions form the core logic behind many financial and trading software systems, especially algorithmic trading and robo-advisors. These applications aim to make profit through efficient and intelligent buying and selling of shares. They use similar dynamics to stipulate how many transactions can be executed, based on which stocks to hold, and for how long, in order to achieve maximum profit. They use such algorithms to gather, analyze and implement strategic trading decisions based on the changing market scenarios.",hints:[{hint:'"We define a DP table where:  dp[i][j] \u2192 The maximum profit achievable using at most j transactions on the i-th day. The core transition formula: dp[i][j] = max(dp[i-1][j], max(arr[i] - arr[m] + dp[m][j-1]) for m in range(0, i))"'},{hint:'"Instead of iterating over all possible buy days (m), we can track the best time to buy dynamically:  Maintain max_diff = max(max_diff, dp[i-1][j-1] - arr[i-1]) Update the transition equation: dp[i][j] = max(dp[i-1][j], arr[i] + max_diff)"'}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"A greedy approach works only when unlimited transactions are allowed. When transactions are limited (k), we must carefully plan buy/sell operations to maximize total profit.",question:"Why is a DP approach necessary instead of a greedy approach?"},{answer:"Yes! Instead of a full DP table, we can use two arrays (prev and curr) to maintain only the last two rows, reducing space to O(k) instead of O(n \xD7 k).",question:"Can we reduce the space complexity from O(n \xD7 k)?"}],interview_followup_questions:[{answer:"If short selling is allowed, then holding negative shares would be possible, meaning we need to modify the DP state to allow negative holdings.",question:"How would you solve this problem if short selling were allowed?"},{answer:"ML models such as Reinforcement Learning (RL) or Recurrent Neural Networks (RNNs) can analyze historical data to predict price movements beyond simple DP-based decision-making.",question:"How can machine learning be used to optimize trading decisions based on this model?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstockwithcooldownandtransactionfees",problem_name:"Best time to buy and sell stock with transaction fees",problem_slug:"best-time-to-buy-and-sell-stock-with-cooldown-and-transaction-fees",problem_rank:5,misc:{tags:["Medtronic","HashiCorp","Alibaba","Seagate Technology","Broadcom","Shopify","Ernst & Young","Target","Pinterest","Red Hat","Robinhood","Bungie","Cloudflare","NVIDIA","Siemens Healthineers","OYO Rooms","Oracle","Square","Morgan Stanley","Zynga","Epic Systems","eBay","MongoDB","Flipkart","Micron Technology","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem mimics real-world challenges encountered in the development of financial software, automated trading systems, or robo-advisors which use algorithms to optimize trading strategies. For example, these solutions might need to decide when to buy or sell stocks based on data from previous days, while also considering transaction fees. Additionally, some financial markets enforce regulations similar to the 'cooldown' constraint, to prevent high frequency trading abuses. Thus, the principles behind solving this problem are crucial in the FinTech sector.",hints:[{hint:'"We use DP to track two states: hold \u2192 Maximum profit when holding a stock. not_hold \u2192 Maximum profit when not holding a stock."'},{hint:"If we hold a stock on day i, we either Keep holding it or Buy it today. If we do not hold a stock on day i, we either Keep not holding or Sell it today and pay the transaction fee "}],language:[],difficulty:"Medium",frequently_occuring_doubts:[{answer:"The transaction fee is only deducted when selling, not buying. Deducting it during the buy phase would cause an unnecessary reduction in profit.",question:"Why does the hold state track dp[i-1][0] - arr[i] instead of dp[i-1][0] - arr[i] - fee?"},{answer:"If no transaction yields a profit greater than the fee, then no transactions should be made, and the answer is 0.",question:"What if the transaction fee is larger than the maximum price difference?"}],interview_followup_questions:[{answer:"This would require modifying the DP state transitions to ensure at least one-day separation between buy and sell.",question:"What if buying and selling on the same day were not allowed?"},{answer:"With a transaction limit, we need a DP table dp[i][j][0] and dp[i][j][1], where j represents the number of transactions used so far.",question:"How would the solution change if k transactions were allowed instead of unlimited?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"dynamicprogramming_dponsubsequences",subcategory_name:"DP on subsequences",subcategory_slug:"dp-on-subsequences",subcategory_rank:5,subcategory_type:"study",problems:[{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_subsetsumequalstotarget",problem_name:"Subset sum equals to target",problem_slug:"subset-sum-equals-to-target",problem_rank:1,misc:{tags:["Uber","Ernst & Young","Intel","Bloomberg","PayPal","Stripe","Teladoc Health","Roblox","IBM","Epic Systems","Twilio","OYO Rooms","Western Digital","Bungie","Roche","Visa","Wayfair","Rockstar Games","Goldman Sachs","ARM","Snowflake","Square","Airbnb","Broadcom","Medtronic","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem is often used in financial software or apps where it's crucial to match transactions or set of numbers to specific totals\u2014in fraud check algorithms, for instance, or split payments. It's also known as the subset-sum problem and is a common example of the 'knapsack problem' which has various applications in cryptography, complexity theory, and computer networks.",hints:[{hint:'"A DP approach optimally solves this problem using a boolean DP table (dp[i][j]), where:  dp[i][j] represents whether a subset of the first i elements has a sum equal to j."'},{hint:'"If we exclude arr[i], the result depends on dp[i-1][j]. If we include arr[i], the result depends on dp[i-1][j - arr[i]]. If either case is True, then dp[i][j] = True. Thus, the recurrence relation is:  dp[i][j] = dp[i-1][j] OR dp[i-1][j - arr[i]] (if j >= arr[i])."'},{hint:'"Instead of a dp[n][target] table, we can use a single 1D array (dp[target]), updating from right to left to avoid overwriting values.  dp[j] = dp[j] OR dp[j - arr[i]]"'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Processing from right to left ensures that each element is considered only once per row update, preventing duplicate inclusion.",question:"Why do we process dp[j] from right to left in the space-optimized approach?"},{answer:"Subset Sum is a special case of 0/1 Knapsack, where each element has a value equal to its weight, and the goal is to exactly fill the knapsack.",question:"How is this problem related to the Knapsack problem?"}],interview_followup_questions:[{answer:"Instead of a boolean table, maintain a backtracking path (dp[i][j] storing previous elements) to reconstruct the subset.",question:"How would you modify this problem if you needed to return the subset itself?"},{answer:"Using a bitset, update possible sums efficiently via dp |= (dp << arr[i]).",question:"How would you solve this problem in O(n \xD7 target / 2) using bit manipulation?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_partitionequalsubsetsum",problem_name:"Partition equal subset sum",problem_slug:"partition-equal-subset-sum",problem_rank:2,misc:{tags:["JPMorgan Chase","Intel","Dropbox","Snowflake","HashiCorp","Unity Technologies","Wayfair","Medtronic","Roblox","Teladoc Health","OYO Rooms","Epic Games","Stripe","Instacart","Texas Instruments","eBay","AMD","Goldman Sachs","Riot Games","Cloudflare","Rakuten","Optum","Databricks","Seagate Technology","Broadcom","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is a classic example of the Subset Sum Problem, a concept used in various real-world applications. One interesting use case is in cloud computing in the field of resource allocation. In cloud systems, resources like CPU, memory, and storage need to be divided among various tasks. The problem of optimally splitting these resources between different tasks, such that the sum usage of all resources is the same for all subsets, is similar to this partitioning problem. Efficient solutions to this problem ensure that all cloud-based applications and services run smoothly without overusing or underusing any resources.",hints:[{hint:'"Define dp[i][j] where: dp[i][j] \u2192 True if there exists a subset of the first i elements whose sum is j. Recurrence Relation: dp[i][j] = dp[i-1][j] OR dp[i-1][j - arr[i]] (if j >= arr[i])"'},{hint:'"Since the DP table only depends on the previous row, we can use a 1D array (dp[target]) updated from right to left:  dp[j] = dp[j] OR dp[j - arr[i]] (processed in reverse order to prevent overwriting)."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If the total sum is odd, it is impossible to split into two equal subsets.",question:"Why do we check sum(arr) % 2 == 0 first?"},{answer:"Use a modified DP approach tracking sums within the [S/2 - d, S/2 + d] range.",question:"What if we wanted to partition into subsets such that their sums differ by at most d?"}],interview_followup_questions:[{answer:"Modify the DP table to store which elements contributed to each subset, then backtrack to reconstruct the subsets.",question:"How would you modify this problem to return the actual partitions instead of just True/False?"},{answer:"Use a bitset DP, where dp |= (dp << arr[i]) efficiently computes all possible subset sums.",question:"How would you solve this problem using bit manipulation?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_partitionasetintotwosubsetswithminimumabsolutesumdifference",problem_name:"Partition a set into two subsets with minimum absolute sum difference",problem_slug:"partition-a-set-into-two-subsets-with-minimum-absolute-sum-difference",problem_rank:3,misc:{tags:["AMD","Teladoc Health","Bloomberg","Chewy","Square","NVIDIA","Seagate Technology","Nutanix","Medtronic","Zoho","Bain & Company","Roblox","Cloudflare","Target","Boston Consulting Group","Epic Systems","Flipkart","IBM","Bungie","Zynga","Unity Technologies","Morgan Stanley","Walmart","HCL Technologies","PwC","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem can be challenging but it's also interesting because it's a form of 'Partitioning Problem', which is a key part of many real-world applications, such as load balancing in distributed systems or databases. Developers often need to partition data among different machines or database tables to balance the load and achieve maximum performance. The minimization of the absolute difference in sums is analogous to minimizing the difference in load between the most and least loaded machines or tables.",hints:[{hint:'"Define DP state: dp[j] = True if there exists a subset with sum j (similar to the subset sum problem). Find the closest sum to S/2. The minimized difference is |S - 2 * j|."'},{hint:'"Since each DP state depends only on the previous row, we can optimize to O(S/2) space:  Use a 1D DP array (dp[target]) updated from right to left to prevent overwriting values."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Partition Equal Subset Sum requires an exact S/2 sum, whereas here we find the closest possible sum \u2264 S/2.",question:"How does this differ from the Partition Equal Subset Sum problem?"},{answer:"If we find a subset sum S1 closest to S/2, then S2 = S - S1, minimizing |S1 - S2|.",question:"Why do we aim for S/2?"}],interview_followup_questions:[{answer:"This becomes Partition into k Subsets, a NP-hard problem requiring backtracking with memoization.",question:"How would this problem change if we wanted to partition into k subsets with minimum sum difference?"},{answer:`The problem can be modeled as a graph, where each subset sum is a node, and edges represent adding elements.
`,question:" How would this problem be solved using graph-based techniques?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_countsubsetswithsumk",problem_name:"Count subsets with sum K",problem_slug:"count-subsets-with-sum-k",problem_rank:4,misc:{tags:["Nutanix","Target","HashiCorp","Alibaba","Epic Games","GE Healthcare","Robinhood","Etsy","OYO Rooms","Instacart","Ernst & Young","Swiggy","Deloitte","Visa","Oracle","Byju's","Lyft","KPMG","Riot Games","Uber","Zynga","Seagate Technology","Activision Blizzard","Databricks","Chewy","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"An interesting real-world application of this problem can be found in the development of algorithms for financial portfolio management systems. These systems must often identify subsets of stocks (from a larger pool) that sum to a specific target value. This allows fund managers to balance their portfolios for risk and return. Counting the number of such subsets can be a part of the process to identify multiple possibilities for optimal portfolio constructions based on different risk-return preferences.",hints:[{hint:'"Define dp[i][j] as the number of ways to form sum j using the first i elements of arr. If we exclude arr[i], then dp[i][j] = dp[i-1][j]. If we include arr[i], then dp[i][j] = dp[i-1][j - arr[i]] (if j \u2265 arr[i])."'},{hint:'"ince dp[i][j] depends only on dp[i-1][j] and dp[i-1][j - arr[i]], we can optimize to O(K) space by using a 1D DP array (dp[K]) updated from right to left: dp[j]=(dp[j]+dp[j\u2212arr[i]])mod(10^9+7)"'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"No, because a greedy approach fails when elements must be selected in a specific order.",question:"Can a greedy approach work instead of DP?"}],interview_followup_questions:[{answer:"Maintain a backtracking path (dp[i][j] storing contributing elements) to reconstruct subsets.",question:"How would you modify this problem to return the actual subsets instead of just counting them?"},{answer:"If elements can be used multiple times, modify DP as: dp[j]=dp[j]+dp[j\u2212arr[i]]",question:"How does this problem relate to subset sum with multiplicity?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_countpartitionswithgivendifference",problem_name:"Count partitions with given difference",problem_slug:"count-partitions-with-given-difference",problem_rank:5,misc:{tags:["Zoho","Teladoc Health","Ernst & Young","Roblox","KPMG","Epic Games","Databricks","Deloitte","Instacart","Intel","Seagate Technology","Micron Technology","Electronic Arts","Docker","Rakuten","Goldman Sachs","Snowflake","Medtronic","Philips Healthcare","JPMorgan Chase","Unity Technologies","Boston Consulting Group","Ubisoft","Walmart","Square","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem and its underlying concept of dynamic programming is a fundamental part of many algorithms used in machine learning and data analysis. For instance, these types of partitioning problems are often used in dividing datasets for testing and training purposes, in a way that a certain condition is met - be it the difference between sums of subsets, or maximizing the similarity of data within each subset. Additionally, it is also common in load balancing problems where tasks are distributed across different servers in a way that the workload difference between any two servers is minimum.",hints:[{hint:'"the problem reduces to finding the number of subsets whose sum is S1.  If S + diff is odd, no valid partition exists \u2192 return 0. Otherwise, find count of subsets that sum to S1 using Subset Sum Count DP."'},{hint:"We use a 1D DP array (dp[j]) where dp[j] represents the number of ways to achieve sum j. We iterate in reverse (j = S1 to arr[i]) to avoid duplicate counting."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"A subset sum S1 must be integer-valued. If S + diff is odd, no valid integer S1 exists.",question:"Why do we check S + diff for evenness?"},{answer:"Yes! We can use a bitset DP, shifting bits left by arr[i] to track possible sums efficiently.",question:"Can we solve this problem using bit manipulation?"}],interview_followup_questions:[{answer:"Maintain a backtracking path (dp[i][j] storing contributing elements) to reconstruct subsets.",question:"How would you modify this problem to return the actual subsets instead of just counting them?"},{answer:"The problem can be modeled as a graph, where each subset sum is a node, and edges represent adding elements.",question:"How would this problem be solved using graph-based techniques?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_0and1knapsack",problem_name:"0 and 1 Knapsack",problem_slug:"0-and-1-knapsack",problem_rank:6,misc:{tags:["Medtronic","Ubisoft","Nutanix","Cerner","Walmart","Bungie","Cloudflare","Western Digital","Qualcomm","HCL Technologies","Etsy","Unity Technologies","Philips Healthcare","Visa","Ernst & Young","Rakuten","Instacart","Morgan Stanley","Shopify","Wayfair","Stripe","Roblox","Siemens Healthineers","Broadcom","Pinterest","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept behind this knapsack problem is practically used in Resource Allocation and Load Balancing in Cloud Computing. In cloud computing, resources (like processing power, storage, etc.) are finite and there's a need to optimize. The knapsack problem revolves around optimizing the value of items that can fit in a limited-size knapsack, making it a perfect model for allocating finite resources. Choices must be made about which virtual machines or jobs to allocate to each server, so that server capacity (weight limit in knapsack) isn't exceeded and efficiency or performance (value in knapsack) is maximized. It's a key aspect in determining how to distribute loads in order to get the maximal utility.",hints:[{hint:'"Define dp[i][w] as the maximum value achievable using the first i items with a knapsack capacity of w. the recurrence relation is: dp[i][w]=max(dp[i\u22121][w],dp[i\u22121][w\u2212wt[i]]+val[i])(if\xA0wt[i]\u2264w) "'},{hint:'"Instead of a full dp[n][W] table, we can use a 1D array (dp[W]) and iterate backward (right to left): dp[w]=max(dp[w],dp[w\u2212wt[i]]+val[i]) We iterate from W down to wt[i] to prevent overwriting values."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"In standard knapsack problems, we assume weights are positive. If weight is 0, an item can be selected infinitely, making it an unbounded knapsack.",question:"What if an item\u2019s weight is 0 but has a positive value?"},{answer:"No, because a greedy approach fails when item values don\u2019t align proportionally with their weights.",question:"Can we use a greedy approach instead of DP?"}],interview_followup_questions:[{answer:"Use a 3D DP table (dp[i][w][c]), where c tracks the count of times an item is used.",question:"What if we had a limit on the number of times each item can be picked (Bounded Knapsack)?"},{answer:"Define knapsack(i,w)=max(knapsack(i\u22121,w),knapsack(i\u22121,w\u2212wt[i])+val[i]). Use top-down memoization (O(N \xD7 W) complexity).",question:"How can this problem be solved using recursion with memoization?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_minimumcoings",problem_name:"Minimum coins",problem_slug:"minimum-coins",problem_rank:7,misc:{tags:["Ubisoft","Wayfair","Instacart","Mastercard","Ernst & Young","DoorDash","Lyft","Texas Instruments","Roche","Activision Blizzard","HCL Technologies","Databricks","Twilio","Rockstar Games","Intel","McKinsey & Company","Dropbox","Siemens Healthineers","Robinhood","Alibaba","Bungie","Byju's","Zynga","Zoho","Etsy","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem concept forms the foundation of many optimization algorithms in software development, especially in fields like logistics and inventory management. A practical example is in Change-Making Machines, common in supermarkets or large businesses. These machines are basically designed to solve this problem: provide change using the fewest number of coins. Another area is in resource or budget allocation in cloud computing and finance. Software tools, such as those used for project management, utilize this kind of algorithm to distribute resources efficiently.",hints:[{hint:'"Define dp[i] as the minimum number of coins needed to make up amount i. the recurrence relation is: dp[i]=min(dp[i],dp[i\u2212coin]+1)for\xA0each\xA0coin"'},{hint:"Since dp[i] only depends on smaller values, we only need a 1D DP array (dp[amount]) instead of O(n \xD7 amount)."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"We start with an impossible state (\u221E) to ensure that min(dp[i], dp[i - coin] + 1) correctly selects the smallest number of coins.",question:"Why do we initialize dp[i] = \u221E?"},{answer:"Iterating over coins first ensures that each amount is updated optimally, allowing each coin to contribute to smaller values before reaching larger ones.",question:"Why do we iterate over coins first instead of amount?"}],interview_followup_questions:[{answer:"Change dp[i] = min(dp[i], dp[i - coin] + 1) to summation: dp[i]+=dp[i\u2212coin]",question:"How would you modify the problem if you needed the total number of ways to make amount instead of the minimum coins?"},{answer:"Yes! Model the problem as a graph where each node is an amount and edges represent valid coin choices. A BFS (shortest path) approach finds the minimum steps.",question:"Can this problem be solved efficiently using graph-based techniques?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_targetsum",problem_name:"Target sum",problem_slug:"target-sum",problem_rank:8,misc:{tags:["Bungie","Bloomberg","Chewy","Epic Systems","Siemens Healthineers","Etsy","Morgan Stanley","DoorDash","Snowflake","Flipkart","IBM","Visa","Unity Technologies","Zomato","Western Digital","Riot Games","Optum","Medtronic","Square","Rakuten","Target","PayPal","Activision Blizzard","ARM","GE Healthcare","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem is fundamentally a problem about dynamic programming and subset sum, both of which have wide applications in real-world scenarios. One practical application of this problem that has been used in the software industry is in the development of financial or budgeting software. For instance, these systems may need to calculate the number of possible ways to achieve a particular financial target, using different combinations of expenses or revenues which are represented by the '+'' or '-' signs. The modulo operation is also frequently used in cryptographic algorithms which are a critical part of secure communication in software applications.",hints:[{hint:'"We define the sum of all elements in nums as S. We need to partition the array into two subsets S1 and S2, where S1\u2212S2=target. the problem reduces to counting the number of subsets whose sum is S1. "'},{hint:"We define dp[j] as the number of ways to achieve sum j. the recurrence relation is:dp[j]=(dp[j]+dp[j\u2212nums[i]])mod(10^9+7)"}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"A subset sum S1 must be integer-valued. If S + target is odd, no valid integer S1 exists.",question:"Why do we check if (S + target) is even?"},{answer:"This is a modified Subset Sum Count, where we count ways to sum to S1 = (S + target) / 2.",question:"How is this problem related to Subset Sum Count?"}],interview_followup_questions:[{answer:"Maintain a backtracking path (dp[i][j] storing contributing elements) to reconstruct expressions.",question:"How would you modify this problem to return the actual expressions instead of just counting them?"},{answer:"This becomes K-Partition Sum, an NP-hard problem requiring backtracking with memoization.",question:"How would you modify this problem for k subsets with a fixed sum difference?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_coinchangeii",problem_name:"Coin change II",problem_slug:"coin-change-ii",problem_rank:9,misc:{tags:["Electronic Arts","Deloitte","Snowflake","Cerner","Instacart","ARM","IBM","Bungie","KPMG","Philips Healthcare","Johnson & Johnson","Salesforce","Morgan Stanley","Zoho","OYO Rooms","Chewy","Wayfair","Airbnb","Docker","Epic Systems","Dropbox","Siemens Healthineers","Texas Instruments","Oracle","Red Hat","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`This type of problem, referred to as a variation of the "coin change" or "knapsack" problem, is commonly used in many popular software systems. One real-world application is in financial technology. For example, this algorithm could be used in ATM software to efficiently determine the smallest number of banknotes and coins to dispense that add up to a given withdrawal amount. Additionally, online shopping platforms could use it to suggest combinations of products that total a given amount. Furthermore, it's used in dynamic programming learning resources and cryptography.`,hints:[{hint:"We define dp[i] as the number of ways to achieve sum i using the given coins. the recurrence relation is: dp[i]=(dp[i]+dp[i\u2212coin])mod(10^9+7)"},{hint:'"We iterate over coins first, ensuring that the order doesn\u2019t affect the number of ways. We process dp[i] from left to right, ensuring each coin is considered an unlimited number of times."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Iterating over coins first ensures that each amount is updated optimally, allowing each coin to contribute to smaller values before reaching larger ones.",question:"Why do we iterate over coins first instead of amount?"},{answer:"Coins with 0 value should be ignored since they can be used infinitely, leading to infinite loops.",question:"What happens if there are coins of 0 value?"}],interview_followup_questions:[{answer:"Use a bitset DP, where dp |= (dp << coin) efficiently tracks possible sums.",question:"How can this problem be solved efficiently using bit manipulation?"},{answer:"Yes! Model the problem as a graph where each node is an amount and edges represent valid coin choices. A BFS (shortest path) approach finds the minimum steps.",question:"Can this problem be solved efficiently using graph-based techniques?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_unboundedknapsack",problem_name:"Unbounded knapsack",problem_slug:"unbounded-knapsack",problem_rank:10,misc:{tags:["IBM","Salesforce","AMD","Byju's","Micron Technology","Unity Technologies","Zynga","Cloudflare","Bungie","Broadcom","American Express","Visa","GE Healthcare","Walmart","Snowflake","Goldman Sachs","Texas Instruments","Wayfair","Optum","DoorDash","Mastercard","NVIDIA","Ubisoft","eBay","Lyft","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The knapsack problem is fundamental in resource allocation tasks and is widely applicable across numerous industries for decision making. A fun, practical example is in the world of video game design. In games where characters have limited carrying capacity, designers use the knapsack problem to create algorithms that help players automatically select the best items to carry for optimal game outcomes. Moreover, this problem is also used in file storage and network data packet transmission to achieve maximum efficiency within certain capacity constraints.",hints:[{hint:"We define dp[w] as the maximum value achievable using items with a knapsack capacity of w. the recurrence relation is: dp[w]=max(dp[w],dp[w\u2212wt[i]]+val[i])"},{hint:"Since dp[w] only depends on smaller values, we only need a 1D DP array (dp[W]) instead of O(N \xD7 W)."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Iterating items first ensures that each item can be used multiple times, allowing optimal selection.",question:"Why do we iterate over items first instead of W?"},{answer:"Since we can pick unlimited items, updating from left to right ensures each item can be used multiple times.",question:"Why do we update dp[w] from left to right instead of right to left?"}],interview_followup_questions:[{answer:"Use a 3D DP table (dp[i][w][c]), where c tracks the count of times an item is used.",question:"What if we had a limit on the number of times each item can be picked (Bounded Knapsack)?"},{answer:`Define knapsack(i,w)=max(knapsack(i,w\u2212wt[i])+val[i],knapsack(i\u22121,w))
Use top-down memoization (O(N \xD7 W) complexity).`,question:"How can this problem be solved using recursion with memoization?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponsubsequences_rodcuttingproblem",problem_name:"Rod cutting problem",problem_slug:"rod-cutting-problem",problem_rank:11,misc:{tags:["Johnson & Johnson","Zynga","Boston Consulting Group","Epic Systems","eBay","Seagate Technology","Oracle","Bungie","Epic Games","Teladoc Health","HashiCorp","Unity Technologies","Morgan Stanley","AMD","Micron Technology","Roblox","DoorDash","Shopify","Red Hat","Snowflake","Deloitte","Instacart","McKinsey & Company","Walmart","Texas Instruments","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This algorithm, also known as Rod Cutting Problem, is a classic example of Dynamic Programming. It's a practical real-world issue utilized in industries like manufacturing and construction, where the efficient use of resources is crucial. For example, it could be used in a steel plant to determine the best way to cut steel rods to minimize waste while maximizing profit. Similarly, in software development, it is used in resource allocation problems, optimizing network routing, or even in managing cloud resources to lower costs by optimizing the way the resources are used.",hints:[{hint:"Define dp[i] as the maximum profit obtainable for a rod of length i. the recurrence relation is:dp[i]=max(dp[i],dp[i\u2212j]+price[j\u22121])"},{hint:"Instead of a full 2D DP table, we use a 1D DP array (dp[N])."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Yes! Define rodCut(n)=max(price[i]+rodCut(n\u2212i))\u2200i\u2264n
Use top-down memoization (O(N\xB2) complexity).`,question:"Can we solve this problem using recursion with memoization?"},{answer:"In 0/1 Knapsack, each item (cut) can be used only once, whereas here, cuts can be repeated.",question:" How does this differ from the 0/1 Knapsack problem?"}],interview_followup_questions:[{answer:"Subtract a fixed cost C from each cut: dp[i]=max(dp[i],dp[i\u2212j]+price[j\u22121]\u2212C)",question:"How would you modify the problem if each cut had a fixed cost?"},{answer:"Modify price[i] \u2192 price[i] * probability[i], optimizing expected value.",question:"How would you solve this problem if the rod segments had different selling probabilities?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"lis",subcategory_name:"LIS",subcategory_slug:"lis-dp",subcategory_rank:6,subcategory_type:"study",problems:[{problem_id:"longest_increasing_subsequence",problem_name:"Longest Increasing Subsequence",problem_slug:"longest-increasing-subsequence",problem_rank:0,misc:{tags:[],facts:"",hints:[{hint:'"Define dp[i] as the length of the longest increasing subsequence ending at index i. the recurrence relation is: dp[i]=max(dp[i],dp[j]+1)for\xA0all\xA0j<i\xA0and\xA0nums[j]<nums[i] "'},{hint:'"Instead of using dp[i], maintain a sorted array (sub) where:  Each element in sub represents the smallest ending element of an increasing subsequence of a certain length. Use Binary Search (lower_bound in sub) to find the position where nums[i] should replace an element in sub."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"It helps efficiently find the position to replace an element in the subsequence.",question:"Why do we use binary search in O(n log n) approach?"},{answer:"Yes, but it leads to O(n\xB2) complexity, which is not optimal for large inputs.",question:"Can this problem be solved using recursion with memoization?"}],interview_followup_questions:[{answer:"Use Fenwick Tree for range maximum queries.",question:"How would you solve this problem in O(n log n) using Fenwick Tree or Segment Tree?"},{answer:"This becomes LIS with at most k removals, requiring graph-based DP.",question:"Can we modify this problem to allow at most k decreases?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"print_longest_increasing_subsequence",problem_name:"Print Longest Increasing Subsequence",problem_slug:"print-longest-increasing-subsequence",problem_rank:1,misc:{tags:[],facts:"",hints:[{hint:'"Define dp[i] as the length of the LIS ending at arr[i]. Define parent[i] to track the previous element in the LIS path. Find the maximum LIS length. Backtrack using parent[i] to reconstruct the sequence. "'},{hint:'"Instead of using dp[i], maintain a sorted array (sub) where:  Each element in sub represents the smallest ending element of an increasing subsequence of a certain length. Use Binary Search (lower_bound) to find the position where arr[i] should replace an element in sub."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"The array sub doesn\u2019t store the actual LIS but ensures its length is correct.",question:"Why does sub store potential LIS elements instead of the actual LIS sequence?"},{answer:"It helps reconstruct the lexicographically smallest sequence after finding LIS.",question:"Why do we track parent[i]?"}],interview_followup_questions:[{answer:"Use non-strict increasing subsequence (<= instead of <).",question:"What if arr contained duplicate elements?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"largest_divisible_subset",problem_name:"Largest Divisible Subset",problem_slug:"largest-divisible-subset",problem_rank:2,misc:{tags:[],facts:"",hints:[{hint:"A Dynamic Programming (DP) approach efficiently solves this problem by Sorting nums in ascending order ensures that if nums[j] divides nums[i], then nums[i] is always greater than nums[j]."},{hint:'"Using DP (dp[i]) to track the size of the largest divisible subset ending at index i. Maintaining a parent[] array to reconstruct the subset efficiently."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Both problems track the longest sequence following specific conditions. LIS requires elements to be strictly increasing, while this problem requires elements to be multiples of each other. Instead of dp[i] representing an increasing subsequence length, here it represents the largest divisible subset ending at nums[i].",question:"Why is the problem similar to LIS?"},{answer:`No, because checking divisibility conditions efficiently requires O(n\xB2) complexity unless we sort nums first. Sorting ensures a greedy-like structure where smaller numbers appear first, reducing unnecessary checks.
`,question:"Can we use a hash set instead of sorting?"}],interview_followup_questions:[{answer:`Instead of checking every pair (j, i), use a HashMap (dp[i]) and TreeSet (binary search) to efficiently track divisibility relations. We can optimize subset construction by only storing the smallest valid previous element.
`,question:"How would you solve this problem in O(n log n) instead of O(n\xB2)?"},{answer:"Yes! Treat nums as nodes and add edges where a % b == 0. The longest path in this directed graph gives the largest subset.",question:"Can this problem be solved using a graph-based approach?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"longest_string_chain",problem_name:"Longest String Chain",problem_slug:"longest-string-chain",problem_rank:3,misc:{tags:[],facts:"",hints:[{hint:"A Dynamic Programming (DP) approach efficiently solves this problem by Sorting words[] by length ensures that every word comes after all potential predecessors."},{hint:'"Using a DP array (dp[word]) to store the longest chain ending at each word. Iterating through each word and checking all possible predecessors by removing one character at a time."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:"Sorting ensures that when processing words[i], all potential shorter predecessors are already considered. This allows bottom-up DP processing to track valid chains efficiently.",question:"Why do we sort words[] by length?"},{answer:"This problem can be modeled as a Directed Acyclic Graph (DAG) where an edge exists from prev \u2192 curr if prev is a valid predecessor. The longest path in this DAG gives the answer.",question:"Why is this similar to DAG longest path?"}],interview_followup_questions:[{answer:"Maintain a parent map where parent[word] = previous_word for the longest chain found. Start from the word with the highest dp[word] and backtrack.",question:" How would you reconstruct the actual longest string chain instead of just its length?"},{answer:"This becomes the Edit Distance Problem instead of a Predecessor Chain Problem, requiring dynamic programming with three operations.",question:"What if insertions, deletions, and replacements were allowed?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"longest_bitonic_subsequence",problem_name:"Longest Bitonic Subsequence",problem_slug:"longest-bitonic-subsequence",problem_rank:4,misc:{tags:[],facts:"",hints:[{hint:"Instead of just tracking the increasing part, we also track the Longest Decreasing Subsequence (LDS) from each point."},{hint:'"Compute LIS[i] for every i \u2192 The length of the longest increasing subsequence ending at i. Compute LDS[i] for every i \u2192 The length of the longest decreasing subsequence starting at i. Find the maximum value of LIS[i] + LDS[i] - 1, since i is counted twice."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`Compute LIS[i] for every i \u2192 The length of the longest increasing subsequence ending at i.
Compute LDS[i] for every i \u2192 The length of the longest decreasing subsequence starting at i.
`,question:"Find the maximum value of LIS[i] + LDS[i] - 1, since i is counted twice."},{answer:"Yes, a purely increasing or purely decreasing sequence is trivially bitonic, with either LIS or LDS contributing fully.",question:"Can a strictly increasing or decreasing sequence be considered bitonic?"}],interview_followup_questions:[{answer:"Yes! Construct a directed acyclic graph (DAG) where edges exist for increasing and decreasing relationships, then compute the longest path.",question:"Can this problem be solved using graph-based techniques?"},{answer:"Instead of maintaining a single peak, track alternating increasing and decreasing segments using DP",question:"How would you modify this problem to allow k fluctuations instead of just one peak?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"number_of_longest_increasing_subsequences",problem_name:"Number of Longest Increasing Subsequences",problem_slug:"number-of-longest-increasing-subsequences",problem_rank:5,misc:{tags:[],facts:"",hints:[{hint:'"We solve this using Dynamic Programming (DP) with two arrays: dp[i] \u2192 The length of the longest increasing subsequence ending at index i. count[i] \u2192 The number of LIS ending at index i."'},{hint:'"For each index i, iterate over all j < i:  If nums[j] < nums[i]: If dp[j] + 1 > dp[i], update dp[i] and reset count[i] = count[j]. If dp[j] + 1 == dp[i], add count[j] to count[i]. Finally, sum up all count[i] where dp[i] equals the maximum LIS length."'}],language:[],difficulty:"Easy",frequently_occuring_doubts:[{answer:`dp[] finds the longest increasing subsequence length.
count[] keeps track of how many ways we can form LIS of that length.`,question:"Why do we need two arrays (dp[] and count[])?"},{answer:"The total number of LIS is the sum of all subsequences that reach the maximum LIS length.",question:"Why do we sum count[i] for all indices where dp[i] == max_length?"}],interview_followup_questions:[{answer:"Use parent tracking to store LIS paths and backtrack to find sequences.",question:"How would you reconstruct the actual LIS sequences instead of just counting them?"},{answer:`Yes! Treat nums[] as nodes, with edges where nums[j] < nums[i], and compute longest paths in a DAG.
`,question:"Can this problem be solved using a graph-based approach?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"dynamicprogramming_dponstrings",subcategory_name:"DP on strings",subcategory_slug:"dp-on-strings",subcategory_rank:7,subcategory_type:"study",problems:[{problem_id:"dynamicprogramming_dynamicprogramming_dponstrings_longestcommonsubsequence",problem_name:"Longest common subsequence",problem_slug:"longest-common-subsequence",problem_rank:1,misc:{tags:["Goldman Sachs","OYO Rooms","Swiggy","IBM","Byju's","Databricks","Instacart","Bain & Company","Dropbox","Walmart","Broadcom","Zomato","KPMG","Square","Rakuten","Pinterest","Zynga","Nutanix","Bungie","JPMorgan Chase","Etsy","Epic Systems","PwC","GE Healthcare","McKinsey & Company","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem, often known as the Longest Common Subsequence (LCS) problem, underlies the logic of many diff utilities and version control systems like Git. The diff tools use this problem to compare different versions of code or text files, and find the minimum number of changes needed to transform one version to another. This allows developers to efficiently track and manage changes in their projects over time.",hints:[{hint:"Define dp[i][j] as the length of the LCS of the first i characters of str1 and the first j characters of str2."},{hint:"If str1[i-1] == str2[j-1], the LCS extends dp[i][j]=1+dp[i\u22121][j\u22121]. Otherwise, we take the maximum LCS found by excluding either character dp[i][j]=max(dp[i\u22121][j],dp[i][j\u22121])"}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Each dp[i][j] depends on both dp[i-1][j] and dp[i][j-1], so we need to store LCS values for every prefix of str1 and str2.",question:"Why do we need a 2D DP table instead of a 1D DP array?"},{answer:"Since dp[i][j] only depends on the previous row, we can use two rolling arrays (prev[] and curr[]), reducing space to O(min(n, m)).",question:"How can we optimize space from O(n \xD7 m) to O(min(n, m))?"}],interview_followup_questions:[{answer:"Use bit masking (compressed DP) to track states efficiently.",question:"What if str1 and str2 were large, but had small alphabets?"},{answer:"Use Binary Search + Patience Sorting if the alphabet is limited.",question:"How can we optimize this problem to O(n log m) instead of O(n \xD7 m)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstrings_longestcommonsubstring",problem_name:"Longest common substring",problem_slug:"longest-common-substring",problem_rank:2,misc:{tags:["Flipkart","Databricks","Cloudflare","Bain & Company","Roche","Instacart","Bloomberg","Zynga","Micron Technology","Optum","Docker","Swiggy","Etsy","Dropbox","Airbnb","Cerner","Johnson & Johnson","Stripe","Rakuten","Alibaba","Oracle","Uber","Activision Blizzard","DoorDash","Robinhood","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem is the core concept behind the functionality of many diff tools, version control systems like Git, or text comparison software, where it's essential to quickly and accurately determine the longest common substring for effective file comparison and tracking changes between different versions of a document or source code. It is also widely used in DNA sequence alignment in bioinformatics.",hints:[{hint:"Define dp[i][j] as the length of the longest common substring ending at str1[i-1] and str2[j-1]."},{hint:'"If str1[i-1] == str2[j-1]: dp[i][j]=dp[i\u22121][j\u22121]+1 Otherwise, reset dp[i][j] = 0 (since a substring must be contiguous). "'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`LCS allows characters to be non-contiguous, whereas Longest Common Substring (LCS) requires contiguous matches.
Example:
str1 = "abcde", str2 = "ace" \u2192 LCS = "ace" (length 3).
str1 = "abcde", str2 = "cde" \u2192 LCS (Substring) = "cde" (length 3).`,question:"How is this different from Longest Common Subsequence (LCS)?"},{answer:"The longest substring can end anywhere in str1 or str2. Thus, we must store the maximum encountered.",question:"Why do we need to track the maximum value separately?"}],interview_followup_questions:[{answer:"Store end_index, then extract the substring using str1[end_index - max_length : end_index].",question:"How would you reconstruct the actual longest common substring instead of just its length?"},{answer:"Yes! Suffix trees can efficiently find the longest common substring in O(n + m) time.",question:"Can this problem be solved using a suffix tree?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstrings_longestpalindromicsubsequence",problem_name:"Longest palindromic subsequence",problem_slug:"longest-palindromic-subsequence",problem_rank:3,misc:{tags:["Bungie","Mastercard","Rakuten","Wayfair","Johnson & Johnson","Siemens Healthineers","Morgan Stanley","Roche","Dropbox","AMD","DoorDash","Unity Technologies","McKinsey & Company","Target","Boston Consulting Group","Pinterest","American Express","OYO Rooms","Square","Etsy","Activision Blizzard","Cerner","ARM","Salesforce","IBM","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem's underlying concept is usually used in data analysis, natural language processing, and data validation. For instance, in DNA or RNA sequence analysis, to ensure the palindromic sequences (which are vital for some biological functions), the concept of minimum insertions to make a palindrome is applied. In Natural Language Processing, text-based user interfaces and chatbots might use it to generate 'palindromic sentences', which could be a fun feature or a useful tool for linguistic studies. Also, it teaches us about dynamic programming, a Method used throughout programming for optimizing problems by breaking them down into simpler subproblems.",hints:[{hint:'"Define dp[i][j] as the length of the longest palindromic subsequence in s[i:j]. Recurrence Relation: If s[i] == s[j]: dp[i][j]=dp[i+1][j\u22121]+2 Otherwise, remove one character and take the maximum LPS found: dp[i][j]=max(dp[i+1][j],dp[i][j\u22121])"'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`If we reverse s and compute LCS between s and reverse(s), the result is the LPS.
This works because a palindrome remains the same when reversed, so the longest common sequence between s and reverse(s) is the longest palindromic subsequence.`,question:"Why does this problem resemble the Longest Common Subsequence (LCS)?"},{answer:`Removing either s[i] or s[j] provides two possible subsequences.
We take the maximum LPS from both choices.`,question:"Why do we take max(dp[i+1][j], dp[i][j-1]) when s[i] \u2260 s[j]?"}],interview_followup_questions:[{answer:"Store parent indices while computing dp[], then backtrack to reconstruct the sequence.",question:"How would you reconstruct the actual longest palindromic subsequence instead of just its length?"},{answer:"Compute LPS(s), then insert missing characters from s to match the palindrome.",question:"What if we wanted the shortest sequence that becomes a palindrome after insertions?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstrings_minimuminsertionstomakestringpalindroms",problem_name:"Minimum insertions to make string palindrome",problem_slug:"minimum-insertions-to-make-string-palindrome",problem_rank:4,misc:{tags:["Boston Consulting Group","Deloitte","Western Digital","Rakuten","Red Hat","Epic Systems","Seagate Technology","Splunk","Oracle","Target","Freshworks","NVIDIA","Square","Rockstar Games","PayPal","Wayfair","Philips Healthcare","Riot Games","Walmart","Morgan Stanley","Swiggy","IBM","Mastercard","Snowflake","Goldman Sachs","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The underlying concept for this problem is extensively used in bioinformatics, especially in the development of various genome sequence alignment algorithms. In the context of the software industry, methods to examine and create palindromes are heavily used in data validation, error checking, and text analysis tools. Additionally, these concepts are used to create all kinds of puzzles and games that enhance mental skills and are found in many educational apps.",hints:[{hint:'"The minimum insertions required to make s a palindrome is the number of characters not already part of the longest palindromic subsequence (LPS). Min\xA0Insertions=Length\xA0of\xA0s\u2212Length\xA0of\xA0LPS(s)"'},{hint:'"Compute LCS(s, reverse(s)) using Dynamic Programming (DP). The LCS of s and reverse(s) gives the LPS of s because a palindrome reads the same forward and backward."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Since a palindrome is symmetric, the extra characters needed to make s symmetric are those not already part of the LPS.",question:"Why does Min Insertions = len(s) - LPS(s)?"},{answer:`The LCS between s and reverse(s) finds the longest sequence of characters that are already in a palindrome order.
This eliminates the need for checking all subsequences manually.`,question:"Why do we compute LPS using LCS instead of a direct DP approach?"}],interview_followup_questions:[{answer:"Compute Longest Palindromic Subsequence (LPS) and use: Min\xA0Deletions=len(s)\u2212LPS(s)",question:"How would you modify this problem to allow k deletions instead of insertions?"},{answer:"The smallest palindrome that contains s as a subsequence is built by inserting missing characters.",question:"How does this relate to the Shortest Palindromic Supersequence?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstrings_minimuminsertionsordeletionstoconvertstringatob",problem_name:"Minimum insertions or deletions to convert string A to B",problem_slug:"minimum-insertions-or-deletions-to-convert-string-a-to-b",problem_rank:5,misc:{tags:["Bloomberg","PwC","Nutanix","Docker","Salesforce","Snowflake","Pinterest","Micron Technology","Databricks","HCL Technologies","Byju's","Lyft","NVIDIA","Rockstar Games","Splunk","KPMG","AMD","Western Digital","Epic Systems","Wayfair","Flipkart","Visa","Deloitte","Unity Technologies","Target","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One practical application of this problem in the software industry is in the realm of Version Control Systems like Git. When making changes to code, Git determines the differences (or 'diff') between two files. This involves determining the minimum number of changes that need to be made to transform one file into another, very similar to this problem. This function allows developers to easier identify, review, and understand changes made to the codebase.",hints:[{hint:'"Instead of transforming str1 into str2 directly, find their Longest Common Subsequence (LCS). The LCS represents the common part that should remain unchanged. The rest of the characters in str1 must be deleted, and the missing characters from str2 must be inserted."'},{hint:'"Min\xA0Deletions=len(str1)\u2212LCS(str1,str2) Min\xA0Insertions=len(str2)\u2212LCS(str1,str2)  Total\xA0Operations=Min\xA0Insertions+Min\xA0Deletions"'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Since LCS represents the common part that should remain unchanged, the remaining characters in str1 must be deleted.",question:"Why does Min Deletions = len(str1) - LCS(str1, str2)?"},{answer:"Yes! Represent str1 and str2 as nodes and find the shortest transformation path.",question:"Can this problem be solved using a graph-based approach?"}],interview_followup_questions:[{answer:"Maintain a parent pointer in dp[] and backtrack to generate edit steps.",question:"How would you reconstruct the actual sequence of insertions and deletions?"},{answer:`Convert the problem to Edit Distance DP, where:
Insert = 1, Delete = 1, Replace = 1.`,question:"How would you modify this problem to allow k substitutions as well?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstrings_shortestcommonsupersequence",problem_name:"Shortest common supersequence",problem_slug:"shortest-common-supersequence",problem_rank:6,misc:{tags:["Stripe","Deloitte","eBay","Byju's","Rockstar Games","Twilio","Dropbox","Freshworks","Boston Consulting Group","Qualcomm","Bloomberg","Zynga","Texas Instruments","Rakuten","Ubisoft","OYO Rooms","Robinhood","Flipkart","Oracle","Airbnb","MongoDB","Bungie","Electronic Arts","Salesforce","HashiCorp","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept of finding the shortest common supersequence, as this problem explores, has applications in the field of bioinformatics. It is used in DNA sequence alignment, which is a way of arranging the sequences of DNA, RNA, or protein to identify regions of similarity. These methods are used to explore functional, structural, or evolutionary relationships between the sequences. In software development, algorithms solving this problem are used in applications that aim to align, compare, and analyze genetic material.",hints:[{hint:'"The Shortest Common Supersequence (SCS) must contain both str1 and str2 as subsequences. The LCS of str1 and str2 represents the common part that appears only once in the SCS. The extra characters in str1 and str2 (not in the LCS) must be included."'},{hint:'"SCS\xA0Length=len(str1)+len(str2)\u2212LCS(str1,str2)  Compute LCS(str1, str2). Use it to construct the SCS string."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Use LCS-based backtracking:
If str1[i-1] == str2[j-1], add it to SCS.
Otherwise, append the character from str1 or str2 that leads to the LCS.`,question:"How do we construct the actual Shortest Common Supersequence?"}],interview_followup_questions:[{answer:"Use Generalized LCS DP to find the common subsequence across k strings, then construct the SCS.",question:"How would you extend this problem for k strings instead of just two?"},{answer:"Track multiple paths in dp[], then backtrack to generate all possible sequences.",question:"How would you modify the problem to allow multiple optimal SCS outputs?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstrings_distinctsubsequences",problem_name:"Distinct subsequences",problem_slug:"distinct-subsequences",problem_rank:7,misc:{tags:["Target","Riot Games","Swiggy","Byju's","AMD","Bungie","Databricks","Johnson & Johnson","PayPal","Siemens Healthineers","McKinsey & Company","Stripe","Bloomberg","ARM","Nutanix","Etsy","Optum","Twilio","Texas Instruments","GE Healthcare","Seagate Technology","Pinterest","Visa","Western Digital","Zomato","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem concept is actually widely used in the field of Natural Language Processing (NLP), a subfield of artificial intelligence. In particular, it can be utilized in applications like text completion, correction, and even autocomplete. When processing user input, the software can compute possible subsequences from a pre-defined dictionary of words and phrases, and provide autocorrect or autocomplete suggestions that match the user's typed string, improving the user's experience by reducing the effort required to type long or complex phrases.",hints:[{hint:"Define dp[i][j] as the number of ways to form t[0:j] using s[0:i]."},{hint:'"If s[i-1] == t[j-1], we can either: Use s[i-1] to match t[j-1] (dp[i-1][j-1]). Ignore s[i-1] and continue matching (dp[i-1][j]) and If s[i-1] \u2260 t[j-1], we must ignore s[i-1]."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"This accounts for cases where we include s[i-1] in forming t.",question:" Why do we add dp[i-1][j-1] when characters match?"},{answer:"If they match, we can either use or skip s[i-1] while forming t.",question:"Why do we need to check s[i-1] == t[j-1]?"}],interview_followup_questions:[{answer:"Maintain a parent pointer in dp[], then backtrack to generate all valid subsequences.",question:"How would you reconstruct the actual subsequences instead of just counting them?"},{answer:"Modify the recurrence relation to allow universal matches when t[j-1] == '?'.",question:"How would this problem change if t contained wildcards (?) that can match any character in s?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstrings_editdistance",problem_name:"Edit distance",problem_slug:"edit-distance",problem_rank:8,misc:{tags:["Freshworks","Databricks","Texas Instruments","Swiggy","American Express","Siemens Healthineers","Etsy","Shopify","Dropbox","Deloitte","PwC","Salesforce","Snowflake","Unity Technologies","Walmart","Nutanix","Optum","Qualcomm","Cloudflare","Johnson & Johnson","Epic Systems","IBM","McKinsey & Company","Bloomberg","PayPal","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"One practical real-world application of this problem is in spell-checking and auto-correction algorithms in text editing software and various applications like Google Docs, MS Word, or even your smartphone's keyboard. The underlying concept is known as Levenshtein distance, which defines the minimum number of single-character edits required to change one word into another. The fewer the changes required, the higher the probability that the words are similar or related, which can be used to suggest corrections or alterations for misspelled words or for predictive text functionality.",hints:[{hint:"Define dp[i][j] as the minimum number of operations required to convert start[0:i] into target[0:j]."},{hint:"If start[i-1] == target[j-1], no operation is needed dp[i][j]=dp[i\u22121][j\u22121]. Otherwise, we can insert, delete and replace."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`If target is empty, we must delete all characters from start.
If start is empty, we must insert all characters from target.`,question:"Why does dp[i][0] = i and dp[0][j] = j?"},{answer:"Because we must choose the least costly operation at each step to reach target efficiently.",question:"Why do we take min(insert, delete, replace)?"}],interview_followup_questions:[{answer:"Store a parent pointer while computing dp[], then backtrack to generate the full transformation sequence.",question:"How would you reconstruct the actual edit operations instead of just the count?"},{answer:`Adjust the cost function:
Insert/Deletion = 1
Substitution = w > 1
`,question:" How would you modify this problem if substitutions were more expensive than insertions and deletions?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_dponstrings_wildcardmatching",problem_name:"Wildcard matching",problem_slug:"wildcard-matching",problem_rank:9,misc:{tags:["Qualcomm","Texas Instruments","PwC","NVIDIA","AMD","Oracle","Rockstar Games","OYO Rooms","Target","Medtronic","Lyft","McKinsey & Company","Docker","Ubisoft","JPMorgan Chase","Uber","ARM","Red Hat","Robinhood","Siemens Healthineers","MongoDB","Stripe","Epic Systems","Zomato","Intel","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This pattern matching problem forms the basis for one of the most essential functions in computer systems: file or text searching. The most basic example is wildcard searches in operating systems. In Windows, for instance, '?' is used to replace any single character and '*' is used to replace a string of character(s). Besides, Regular Expressions (regex), a common tool used in programming for string pattern searching and manipulation, also rely on this concept. Regex is used extensively in programming from simple string manipulation, data validation, data scraping to more complicated natural language processing tasks.",hints:[{hint:"Define dp[i][j] as True if str[0:i] matches pat[0:j], otherwise False."},{hint:`"If pat[j-1] == str[i-1] or pat[j-1] == '?', dp[i][j]=dp[i\u22121][j\u22121] If pat[j-1] == '*', dp[i][j]=dp[i\u22121][j](use\xA0\u2018*\u2018\xA0as\xA0a\xA0sequence) OR dp[i][j\u22121](ignore\xA0\u2018*\u2018) Otherwise, dp[i][j] = False."`}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`dp[i-1][j] \u2192 Considers * as matching one or more characters.
dp[i][j-1] \u2192 Considers * as matching zero characters.`,question:"Why do we check dp[i-1][j] and dp[i][j-1] when pat[j-1] == '*'?"},{answer:"Yes! Since dp[i][j] only depends on the previous row, we use rolling arrays (prev[] and curr[]), reducing space to O(m).",question:" Can we optimize space from O(n \xD7 m) to O(m)?"}],interview_followup_questions:[{answer:"Maintain a parent pointer while computing dp[], then backtrack to extract the matching substrings.",question:"How would you modify this problem to return the actual matched substrings instead of just True/False?"},{answer:"Regular Expression Matching allows . (single character match) and * (previous character match multiple times), while this problem allows ? (single character) and * (any sequence).",question:"How does this relate to the Regular Expression Matching problem?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"dynamicprogramming_mcmdp",subcategory_name:"MCM DP",subcategory_slug:"mcm-dp",subcategory_rank:8,subcategory_type:"study",problems:[{problem_id:"dynamicprogramming_dynamicprogramming_mcmdp_matrixchainmultiplication",problem_name:"Matrix chain multiplication",problem_slug:"matrix-chain-multiplication",problem_rank:1,misc:{tags:["Swiggy","Square","HCL Technologies","Docker","PwC","KPMG","Activision Blizzard","Salesforce","Walmart","Electronic Arts","McKinsey & Company","Bloomberg","Twilio","ARM","OYO Rooms","Target","Seagate Technology","Goldman Sachs","Deloitte","Johnson & Johnson","Boston Consulting Group","Western Digital","American Express","Cerner","Unity Technologies","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"A fun fact about this problem's practical usage can be seen in the field of computer graphics. The stages of a 3D graphics pipeline often involve multiplication of matrices for transformations like scaling, rotation, translation, and shearing. Having an efficient way to multiply these matrices can make the graphics rendering faster and more efficient, significantly improving the performance and speed of video games, simulations, 3D modeling software, and more!",hints:[{hint:'"Define dp[i][j] as the minimum number of scalar multiplications required to multiply matrices from Ai to Aj. The goal is to find optimal parenthesization that minimizes multiplications."'},{hint:'"We try every possible split point k where Ai...Ak is multiplied first, followed by Ak+1...Aj. The cost of multiplying these two subchains, plus the cost of multiplying the resulting matrices, is: dp[i][j]=  i\u2264k<j min (dp[i][k]+dp[k+1][j]+nums[i\u22121]\xD7nums[k]\xD7nums[j])"'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Multiplying matrices A[i-1] x A[k] with A[k] x A[j] results in a matrix of size A[i-1] x A[j].
The cost of multiplication is the product of these dimensions.`,question:"Why do we use nums[i-1] \xD7 nums[k] \xD7 nums[j] in the cost calculation?"}],interview_followup_questions:[{answer:"Maintain a bracket[][] array to store the split points and backtrack to construct the sequence.",question:"How would you reconstruct the actual parenthesization of the optimal order?"},{answer:"Use Dynamic Programming with DAG (Directed Acyclic Graph) representation to track possible sequences.",question:"How would you modify this problem if matrix multiplication order was flexible (associative but not commutative)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_mcmdp_minimumcosttocutthestick",problem_name:"Minimum cost to cut the stick",problem_slug:"minimum-cost-to-cut-the-stick",problem_rank:2,misc:{tags:["Morgan Stanley","McKinsey & Company","Activision Blizzard","Cerner","Target","Swiggy","Airbnb","Pinterest","Reddit","Goldman Sachs","Medtronic","Splunk","Docker","Johnson & Johnson","Instacart","Roblox","Uber","Ubisoft","Flipkart","Databricks","Robinhood","GE Healthcare","KPMG","Wayfair","Mastercard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This problem is a practical example of optimization algorithms used in different sectors of the software industry. One real-world application of this problem is in network routing and bandwidth allocation, where data packets (the equivalent of wooden stick segments in the problem) need to be efficiently distributed across the network. A network needs to be cut/divided (i.e., routes need to be opened/closed) to better distribute the data flow, but each cut (alteration to the network routes) carries a cost (both in system processing and potential slowdown of data transfer), so the development of routing or bandwidth allocation software needs to take into account how to optimize these cuts in order to achieve the best overall efficiency.",hints:[{hint:'"Define dp[i][j] as the minimum cost to cut the stick between cuts[i] and cuts[j]. The goal is to minimize the sum of the stick lengths at each cut."'},{hint:'"Sort cuts and add 0 (start) and n (end) to the array. For each subproblem (i, j), try every possible cut k between them: dp[i][j]= i<k<j min (dp[i][k]+dp[k][j]+(cuts[j]\u2212cuts[i])) The cost of cutting at cuts[k] is the length of the current stick (cuts[j] - cuts[i]). The subproblems dp[i][k] and dp[k][j] are computed first before using them in dp[i][j]."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Sorting ensures that cuts are considered in increasing order, allowing us to divide the stick into valid partitions.",question:"Why do we sort cuts[] before using DP?"},{answer:`The stick of length (cuts[j] - cuts[i]) must be cut at some k, which incurs a cost.
The recursive formula finds the optimal way to make cuts in (i, j).`,question:"Why does dp[i][j] = cuts[j] - cuts[i] + min(dp[i][k] + dp[k][j])?"}],interview_followup_questions:[{answer:"Yes, but without memoization, it becomes exponential.",question:"Can this problem be solved using divide-and-conquer?"},{answer:"Update dp[i][j] to account for extra cost per cut, adding weight-based values.",question:"How would you modify this problem if some cuts had additional costs?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_mcmdp_burstballoons",problem_name:"Burst balloons",problem_slug:"burst-balloons",problem_rank:3,misc:{tags:["Freshworks","HCL Technologies","Pinterest","Roblox","KPMG","Optum","Goldman Sachs","IBM","Seagate Technology","Target","Unity Technologies","Byju's","Databricks","Zynga","Broadcom","Shopify","Cerner","Uber","Salesforce","JPMorgan Chase","Square","Stripe","Robinhood","Mastercard","Red Hat","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:'This problem, dubbed as the "Burst Balloons" problem, embodies the concept of dynamic programming, an essential technique widely used in software industry to solve optimization problems. Its real-world application can be seen in resource allocation tasks where we need to make a sequence of interrelated decisions. For example, in network routing, a form of this problem could be used to determine the optimal path (balloons to burst) that would minimize cost (maximize coins) while transferring data from source to destination. It stands as a classic example showcasing the importance of decision optimization and state transition in programming.',hints:[{hint:"Define dp[i][j] as the maximum coins obtained by bursting balloons in the range [i, j]."},{hint:'"The final burst at k contributes nums[i-1] * nums[k] * nums[j+1] coins. Solve subproblems first, then use them to compute dp[i][j]."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Bursting in order creates dependencies on future states.
If we choose the last balloon to burst in a range, then only adjacent balloons remain, allowing clean DP transitions.`,question:" Why do we solve the problem in reverse (choosing the last balloon to burst)?"},{answer:"The out-of-bounds multipliers act as 1, simplifying boundary calculations.",question:"Why do we add 1 at both ends of nums?"}],interview_followup_questions:[{answer:"Maintain a parent[][] array to store which balloon was burst last in dp[i][j], then backtrack to extract the sequence.",question:"How would you reconstruct the actual order of bursting?"},{answer:"This becomes a greedy scheduling problem, requiring a different strategy to decide the next balloon to burst.",question:"What if the order of bursting mattered (not choosing the last burst dynamically)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_mcmdp_palindromepartitioningii",problem_name:"Palindrome partitioning II",problem_slug:"palindrome-partitioning-ii-",problem_rank:4,misc:{tags:["Teladoc Health","Philips Healthcare","Pinterest","Square","Medtronic","Unity Technologies","Visa","Cerner","AMD","Electronic Arts","Uber","Wayfair","Stripe","Epic Systems","Swiggy","Oracle","Western Digital","Boston Consulting Group","Micron Technology","Johnson & Johnson","Texas Instruments","IBM","Ernst & Young","Shopify","Bain & Company","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This kind of problem or its underlying approach is often used in text processing software and algorithms, such as spell-checkers or text editors. Detecting palindromes or structuring information in a way that allows for efficient checks is crucial in natural language processing tasks. For example, similar strategies are used in auto-correct systems in modern smartphones and word processing software to suggest the smallest number of changes to make in order to turn a misspelled word into a correct one.",hints:[{hint:"Define dp[i] as the minimum number of cuts needed to partition s[0:i] into palindromes. Check all possible palindrome substrings ending at i."},{hint:'"Define isPalindrome[i][j] = True if s[i:j] is a palindrome. Use isPalindrome[i][j] = (s[i] == s[j] && isPalindrome[i+1][j-1]) for efficient checking."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"It ensures that the previous partition s[0:j] had the minimum cuts before the next valid palindrome.",question:"Why does dp[i] = min(dp[j] + 1) work?"},{answer:"A full palindrome requires zero cuts, so no further partitions are needed.",question:"Why does dp[i] = 0 if s[0:i] is already a palindrome?"}],interview_followup_questions:[{answer:"Track k partitions and extend DP to include a k constraint.",question:"How would this problem change if we allowed k non-palindromic partitions?"},{answer:"Use Multi-dimensional DP (dp[i][k]), ensuring exactly k partitions.",question:"What if we needed to partition into exactly k palindromic substrings?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"dynamicprogramming_contest",subcategory_name:"Contest",subcategory_slug:"dp-contest-2",subcategory_rank:9,subcategory_type:"contest",problems:[{problem_id:"dynamicprogramming_dynamicprogramming_contest_mexx",problem_name:"MEXX",problem_slug:"mexx",problem_rank:1,misc:{tags:[],facts:"n = 10, nums = [1, 3, 2, 0, 1, 0, 2, 2, 2, 0]",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"dynamicprogramming_dynamicprogramming_contest_buyflowers",problem_name:"Buy Flowers",problem_slug:"buy-flowers",problem_rank:3,misc:{tags:[],facts:"",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"tries",category_name:"Tries",category_slug:"tries",category_rank:16,subcategories:[{subcategory_id:"tries_triessubc",subcategory_name:"Theory",subcategory_slug:"triessubc",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"tries_tries_triessubc_trieimplementationandoperations",problem_name:"Trie Implementation and Operations",problem_slug:"trie-implementation-and-operations",problem_rank:1,misc:{tags:["Databricks","Dropbox","Uber","Epic Games","Zynga","Goldman Sachs","Seagate Technology","Medtronic","Chewy","Broadcom","Rakuten","Snowflake","Robinhood","McKinsey & Company","American Express","MongoDB","Square","Wayfair","Electronic Arts","Western Digital","Cloudflare","Unity Technologies","Alibaba","ARM","Bloomberg","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun fact: The Trie data structure is a popular data structure used in many applications in the software industry, including autocomplete features on search engines and text editors. Whenever you type in a search query or a piece of code, the system makes use of Tries to suggest potential completions based on the prefix of your input. This ability to make fast prefix queries makes Tries highly efficient for these kinds of functions.",hints:[{hint:"Insertion is performed character by character, ensuring that each character has an associated node. If a character does not exist in the current node\u2019s children, a new node is created. Traversal continues until the entire word is inserted. Searching follows a similar traversal approach, checking if each character exists along the path and verifying if the terminal node is reached."},{hint:"The startsWith function is slightly different, as it only checks if a given prefix exists without requiring it to be a full word. This is useful for autocomplete and dictionary applications. A well-optimized Trie provides fast lookup and insertion, outperforming hash-based methods when handling large dictionaries with shared prefixes."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Unlike hash-based structures, a Trie allows prefix-based operations, making it ideal for problems like autocomplete or dictionary lookups. Additionally, Tries maintain lexicographical order, whereas hash-based structures do not.",question:"Why use a Trie instead of a HashMap or Set?"},{answer:"The structure remains the same, as duplicate words follow the same insertion path. However, the end-of-word marker ensures correct identification when searching.",question:"What happens if we insert duplicate words into a Trie?"}],interview_followup_questions:[{answer:"Wildcard searches require modifying the search operation to handle characters like ? or *. This typically involves using backtracking or DFS to explore multiple paths when encountering a wildcard.",question:"How would you modify a Trie to support wildcard searches?"},{answer:"A Suffix Tree is a compressed Trie storing all suffixes of a given string, making it useful for substring searches and pattern matching. It is more space-efficient for long strings with repeated substrings.",question:"How does a Trie compare to a Suffix Tree?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"tries_tries_triessubc_trieimplementationandadvancedoperations",problem_name:"Trie Implementation and Advanced Operations",problem_slug:"trie-implementation-and-advanced-operations",problem_rank:2,misc:{tags:["Docker","Byju's","Rockstar Games","Instacart","Freshworks","Pinterest","HCL Technologies","Cerner","Alibaba","Riot Games","Robinhood","OYO Rooms","Boston Consulting Group","Databricks","Micron Technology","PwC","Texas Instruments","Activision Blizzard","American Express","Siemens Healthineers","DoorDash","Bloomberg","Splunk","Morgan Stanley","Snowflake","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The Trie data structure, also known as a prefix tree, is incredibly useful in real-world applications, especially in scenarios where we need fast and efficient retrieval of words or data. For instance, it is the underlying data structure powering the auto-complete feature in your smartphone keyboard or search engine. When you start typing, it looks for words in its trie data structure that starts with the prefix you've typed and proposes the most probable completions. Similarly, spell-checking tools or predictive text technology in chatbots and AI-based customer service platforms make extensive use of Tries.",hints:[{hint:"Insertion follows a character-by-character traversal, incrementing both prefix_count for all traversed nodes and word_count at the last character node. Searching for exact words involves checking word_count, while prefix-based searches rely on prefix_count."},{hint:"To efficiently erase a word, the word count is decremented at the last character node, and prefix_count values are reduced along the path. If word_count reaches zero but the prefix is still used by other words, the structure remains intact. However, if no words depend on a node, it can be deleted to free memory."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The word_count ensures that we track multiple occurrences of the same word, while prefix_count helps determine how many words share a given prefix. Without prefix_count, prefix-based queries would require a complete traversal of the subtree.",question:"Why do we need word_count and prefix_count separately?"},{answer:"If a word is removed but is a prefix for other words, only word_count is decremented, and the node is not deleted. Nodes are only removed when no other words depend on them.",question:"How does erasing work when a word is a prefix for other words?"}],interview_followup_questions:[{answer:"Erasing takes O(n) time in the worst case, as it follows the path of the word. Optimizations include lazy deletion (marking words as deleted but keeping nodes until cleanup) to avoid frequent memory reallocations.",question:"How does erasing affect time complexity, and how can we optimize it?"},{answer:"Converting all words to lowercase before insertion and search ensures uniform handling of uppercase and lowercase characters.",question:"How would you modify this Trie to support case-insensitive searches?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"tries_problems",subcategory_name:"Problems",subcategory_slug:"problems",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"tries_tries_problems_longestwordwithallprefixes",problem_name:"Longest word with all prefixes",problem_slug:"longest-word-with-all-prefixes",problem_rank:1,misc:{tags:["Nutanix","AMD","Rakuten","IBM","Chewy","Seagate Technology","Walmart","Qualcomm","Ernst & Young","Etsy","Goldman Sachs","Red Hat","Rockstar Games","Byju's","American Express","Oracle","Optum","Ubisoft","Databricks","Bain & Company","Lyft","NVIDIA","Dropbox","GE Healthcare","Roblox","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This programming problem employs a concept often used in search engine algorithms for keyword searching and for autocompletion features in user interface design. For instance, when typing in a search engine or web address in a browser, the system relies on similar logic to suggest lexicographically sorted completions based on previous input or commonly used phrases. The ability to efficiently solve this type of problem has real-world impacts on enhancing user experience and speeding up input tasks - something we take for granted every day!",hints:[{hint:"Build a Trie from the given array while marking the end of each word. Additionally, store a flag at each node to indicate whether this prefix exists in nums."},{hint:'"Find the longest complete string by iterating through nums and checking whether every prefix of a word exists in the Trie. Maintain a variable to track the longest valid string. If two strings have the same length, return the lexicographically smallest one."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"If multiple strings have the same length, we return the lexicographically smallest one. This can be handled by comparing strings whenever we find a new candidate.",question:"What happens if there are multiple longest complete strings?"},{answer:"No, insertion order does not affect the Trie\u2019s structure. However, when finding the longest complete string, sorting nums lexicographically ensures we naturally select the smallest string when lengths are equal.",question:"Does order of insertion matter in a Trie?"}],interview_followup_questions:[{answer:`Instead of tracking only the longest word, we would collect all words that satisfy the complete string condition and sort them before returning the result.
`,question:"How would the solution change if we had to return all complete strings instead of just the longest one?"},{answer:"Yes, by using a HashSet to store all words, we can iterate through nums, checking for every prefix in the set. However, this would require checking each prefix separately, making it less efficient than a Trie.",question:"Can we solve this problem without a Trie?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"tries_tries_problems_numberofdistinctsubstringsinastring",problem_name:"Number of distinct substrings in a string",problem_slug:"number-of-distinct-substrings-in-a-string",problem_rank:2,misc:{tags:["Databricks","MongoDB","OYO Rooms","IBM","Intel","DoorDash","Cloudflare","McKinsey & Company","Splunk","Seagate Technology","Wayfair","Bloomberg","JPMorgan Chase","Texas Instruments","Instacart","Bain & Company","Morgan Stanley","Ubisoft","Western Digital","Unity Technologies","Byju's","HCL Technologies","Boston Consulting Group","Johnson & Johnson","HashiCorp","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The concept of 'distinct substrings' is a fundamental in many applications across the software industry. For instance, in the fields of bioinformatics and DNA sequencing, this concept is utilized to analyze and identify unique patterns or sequences in the DNA. Moreover, in data mining and machine learning, finding distinct substrings often plays a pivotal role in text analysis, string matching, extraction of unique features and plagiarism detection systems. The efficiency and accuracy of such crucial applications are largely dependent on the implementation of algorithms that swiftly and accurately solve such problems.",hints:[{hint:"A Trie-based approach can be used by inserting all suffixes of s into a Trie and counting the total number of distinct substrings contributed by each suffix. However, this approach may be memory-intensive for long strings."},{hint:'"A more optimized approach is the Suffix Array + LCP (Longest Common Prefix) method: Construct a Suffix Array to sort all suffixes of s in lexicographical order. Compute the LCP array, which stores the longest common prefix between adjacent suffixes. The total number of distinct substrings is given by the sum of lengths of suffixes minus the LCP contributions."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Yes, Rolling Hashing (Rabin-Karp) can be used to check substring uniqueness, but handling hash collisions requires additional techniques.",question:"Can we use hashing to count distinct substrings?"}],interview_followup_questions:[{answer:"A Dynamic Programming (DP) approach is needed, as subsequences allow character deletions from anywhere, unlike substrings.",question:"How can we modify this approach for distinct subsequences instead of substrings?"},{answer:"Instead of counting all substrings, we could maintain a rolling hash (or Suffix Array) and filter only substrings of length k.",question:"How would the solution change if we needed only distinct substrings of length k?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"tries_tries_problems_maximumxoroftwonumbersinanarray",problem_name:"Maximum XOR of two numbers in an array",problem_slug:"maximum-xor-of-two-numbers-in-an-array",problem_rank:3,misc:{tags:["Activision Blizzard","Johnson & Johnson","Etsy","Lyft","Flipkart","Stripe","Wayfair","Splunk","Roche","Shopify","Cerner","Snowflake","Visa","Oracle","PwC","KPMG","Chewy","Rockstar Games","Seagate Technology","HashiCorp","Dropbox","MongoDB","Airbnb","IBM","PayPal","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: XOR operations are commonly used in cryptography, a crucial component of data security in software development. In cryptography, XOR is used for its properties of being able to toggle between states. By using the same key again, you can decrypt the data. Similarly, finding the maximum XOR value can be used to enhance cryptographic algorithms making them more secure and harder to crack. This problem might not directly apply to a specific real-world application, but the concepts and algorithms used to solve it are fundamental to many areas in the software industry.",hints:[{hint:'"Insert all numbers into a binary Trie:  Each number is represented as a 32-bit binary string. Each Trie node represents a bit (0 or 1), storing paths for efficient lookups."'},{hint:'"While checking each number, traverse the Trie to find the best complement that maximizes the XOR value. The best complement for a bit is its opposite (i.e., 0 prefers 1 and vice versa)."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The Trie allows quick prefix matching, helping us choose the optimal bits for maximizing XOR at each step. If a bit is 1, the best complement is 0 (and vice versa).",question:"How does the Trie help in finding the best XOR pair?"},{answer:"Yes, using a HashSet and a greedy approach, we can maintain prefixes and attempt to build the highest XOR value iteratively.",question:"Can we use bitwise tricks without a Trie?"}],interview_followup_questions:[{answer:"Yes, we can modify the Trie traversal to maintain a max-heap tracking the top K values.",question:"Can we extend this approach to find the top K maximum XOR pairs?"},{answer:"While XOR maximization requires a Trie, AND/OR-based problems often use sorting or bitwise filtering for efficiency.",question:'How does this compare to problems like "Maximum AND Pair" or "Maximum OR Pair"?'}]},problem_type:"DSA",hasIDE:!0},{problem_id:"tries_tries_problems_maximumxorwithanelementfromanarray",problem_name:"Maximum Xor with an element from an array",problem_slug:"maximum-xor-with-an-element-from-an-array",problem_rank:4,misc:{tags:["Broadcom","Philips Healthcare","Flipkart","Goldman Sachs","Alibaba","Dropbox","Docker","Boston Consulting Group","KPMG","Rakuten","Qualcomm","Intel","Byju's","Twilio","Texas Instruments","GE Healthcare","Salesforce","Freshworks","Ubisoft","HCL Technologies","Ernst & Young","Wayfair","Micron Technology","JPMorgan Chase","Square","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The concept underlying this problem, which is bitwise operations, has practical applications in many areas of software development. For example, in cryptographic algorithms, bitwise operations like XOR are used for encryption and decryption because of their computational efficiency. Additionally, they provide a simple yet effective method of scrambling data, which is crucial in maintaining the security of data. Therefore, understanding how to use bitwise operations effectively can make you a more effective software engineer in cybersecurity space.",hints:[{hint:'"Sort nums to enable efficient constraint handling (\u2264 mi). Use a Trie to store valid numbers dynamically while processing queries in increasing order of mi."'},{hint:'"For each query [xi, mi], find the best possible XOR using the Trie. Traverse the Trie to maximize the XOR value bit-by-bit, preferring the opposite bits."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"A HashSet allows direct lookup, but does not support efficient bitwise prefix searching, making it less effective for XOR maximization.",question:"Can we use a HashSet instead of a Trie?"},{answer:"Sorting enables efficient filtering of elements within the \u2264 mi range, allowing incremental Trie insertions.",question:"Why do we sort nums before processing queries?"}],interview_followup_questions:[{answer:"The main difference is the constraint mi, requiring an additional range filtering mechanism (sorting + Trie insertions).",question:'How does this differ from the "Maximum XOR of Two Numbers in an Array" problem?'},{answer:"Yes, but it would require a segment tree or sorted data structure (like ordered maps) for efficient multi-constraint filtering.",question:"Can this be extended to multi-dimensional constraints (e.g., another condition on nums[j])?"}]},problem_type:"DSA",hasIDE:!0}]}]},{category_id:"strings(advancedalgo)",category_name:"Strings (Advanced Algo)",category_slug:"strings--advanced-algo",category_rank:17,subcategories:[{subcategory_id:"strings(advancedalgo)_mediumproblems",subcategory_name:"Medium Problems",subcategory_slug:"medium-problems",subcategory_rank:1,subcategory_type:"study",problems:[{problem_id:"strings(advancedalgo)_strings(advancedalgo)_mediumproblems_reverseeverywordinastring",problem_name:"Reverse every word in a string",problem_slug:"reverse-every-word-in-a-string",problem_rank:1,misc:{tags:["McKinsey & Company","Epic Systems","IBM","Bain & Company","Uber","Ernst & Young","Walmart","PayPal","Ubisoft","HashiCorp","Micron Technology","Teladoc Health","Morgan Stanley","Wayfair","ARM","Swiggy","Freshworks","Boston Consulting Group","Activision Blizzard","Nutanix","Zomato","Broadcom","Chewy","Reddit","Target","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: This problem uses a fundamental concept called 'string manipulation', which is essential in developing search engines and web crawling tools. For instance, Google utilizes advanced string manipulation to analyze and index webpages effectively. Similarly, Twitter uses string manipulations for tweet processing and data analytics to figure out trending topics. This simple problem of reversing words in a string can thus be a stepping stone to understanding more complex string operations used in real-world applications.",hints:[{hint:'"Splitting the string into words using split(), which automatically removes extra spaces. Reversing the list of words. Joining them back with a single space."'},{hint:'"Iterating through the string in reverse, extracting words character-by-character, and storing them in a list. Reconstructing the sentence with spaces in between."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Spaces between words can be irregular, and using split() ensures that extra spaces are ignored when reversing.",question:"Why do we need to handle multiple spaces separately?"},{answer:`Yes, but it requires modifying the string by:
Reversing the entire string.
Reversing individual words while maintaining correct spacing.
This approach is useful for low-memory constraints.`,question:"Can we solve this in-place without extra space?"}],interview_followup_questions:[{answer:"Instead of reversing the entire word sequence, iterate and selectively reverse only even-length words before concatenation.",question:"How would you modify this solution to reverse only words of even length?"},{answer:"The problem can be modified to group every k words and reverse within each group, similar to reversing k nodes in a linked list.",question:"What if we need to reverse the words in groups of k instead of completely?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"strings(advancedalgo)_strings(advancedalgo)_mediumproblems_minimumnumberofbracketreversalstomakeanexpressionbalanced",problem_name:"Minimum number of bracket reversals to make an expression balanced",problem_slug:"minimum-number-of-bracket-reversals-to-make-an-expression-balanced",problem_rank:2,misc:{tags:["Red Hat","Target","Swiggy","Docker","OYO Rooms","Rockstar Games","Databricks","Qualcomm","Alibaba","Shopify","American Express","Ubisoft","AMD","Freshworks","Instacart","eBay","PwC","MongoDB","Lyft","Goldman Sachs","Medtronic","GE Healthcare","Zynga","Electronic Arts","Morgan Stanley","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fact: This problem is closely related to the way compilers and interpreters in programming languages such as Python, Java, and C++ check for correct use of parentheses in the source code. These tools use similar algorithms to maintain a stack of opening brackets and match them with closing ones, ensuring balanced usage. Such algorithms also inform how text editors and IDEs spot parenthesis errors and provide developers with suggestions to fix the errors or autofix them. Misuse of parentheses can lead to syntax errors, affecting the proper execution of the code.",hints:[{hint:'"Traverse s, keeping track of opening and closing mismatches. If ( appears without a matching ), it becomes an opening mismatch. If ) appears without a matching (, it becomes a closing mismatch."'},{hint:'"If the total number of unmatched brackets is odd, return -1 (odd-length strings can never be balanced). Otherwise, compute the minimum flips"'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Yes, the order determines whether mismatches exist. The stack-based approach helps count unbalanced parts correctly.",question:"Does the order of brackets affect reversibility?"},{answer:"A balanced string must contain an equal number of ( and ). If the length is odd, one bracket will always remain unmatched.",question:"Why is it impossible to balance an odd-length string?"}],interview_followup_questions:[{answer:"The approach would be extended to track multiple bracket types, ensuring separate counts for {}, [], and ().",question:"How would the solution change if {} and [] brackets were included?"},{answer:"This problem focuses on reversal-based correction, whereas redundant parentheses problems focus on removing excess brackets.",question:"How does this compare to other bracket balancing problems, like finding redundant parentheses?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"strings(advancedalgo)_strings(advancedalgo)_mediumproblems_countandsay",problem_name:"Count and say",problem_slug:"count-and-say",problem_rank:3,misc:{tags:["Qualcomm","Boston Consulting Group","Ubisoft","Docker","McKinsey & Company","HCL Technologies","Snowflake","PwC","Etsy","Cloudflare","NVIDIA","Stripe","Electronic Arts","Cerner","Goldman Sachs","Ernst & Young","Roche","Philips Healthcare","Morgan Stanley","Zoho","Medtronic","Roblox","Oracle","Dropbox","Mastercard","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:`While the count-and-say problem seems abstract, it actually introduces the concept of run-length encoding, a simple form of data compression where sequences of the same data values are stored as a single data value and count. This concept is integral to numerous real-world applications, including computer graphics, where run-length encoding is used to compress image data keeping the file sizes minimal. This is reminiscent of the way the "count-and-say" sequence works, by 'compressing' consecutive elements into count/value pairs.`,hints:[{hint:'"Start with ""1"" as the base case. Iterate from 2 to n, constructing the next sequence by: Scanning the previous sequence character by character. Counting consecutive characters. Appending the count and character to form the new sequence. Repeat this process until reaching n."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"A naive recursive approach leads to redundant recomputation, causing stack overflow for large n. An iterative approach avoids this problem.",question:"Why can\u2019t we use recursion directly?"},{answer:"The problem requires processing consecutive characters, which is best handled with a two-pointer approach instead of splitting.",question:"Why do we process characters one-by-one instead of using regex or string splits?"}],interview_followup_questions:[{answer:"Instead of generating the full sequence, use on-the-fly processing to retrieve only the required k-th character, reducing memory usage.",question:"How would you modify the approach if we needed to generate only the k-th character of countAndSay(n)?"},{answer:`Fibonacci grows linearly in O(n) using DP.
Count-and-say grows exponentially in length but remains O(n * m) due to processing constraints.`,question:"How does this compare to Fibonacci sequence generation?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"strings(advancedalgo)_advancedproblems(lessasked)",subcategory_name:"Advanced Problems (Less asked)",subcategory_slug:"advanced-problems-(less-asked)",subcategory_rank:2,subcategory_type:"study",problems:[{problem_id:"strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_rabinkarpalgorithm",problem_name:"Rabin Karp Algorithm",problem_slug:"rabin-karp-algorithm",problem_rank:1,misc:{tags:["Siemens Healthineers","Bain & Company","Broadcom","Deloitte","Instacart","Swiggy","Databricks","OYO Rooms","Morgan Stanley","Visa","PwC","Reddit","Western Digital","Mastercard","Rockstar Games","Flipkart","Docker","Medtronic","Unity Technologies","Roblox","Uber","AMD","Bloomberg","IBM","Nutanix","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The Rabin-Karp algorithm is largely used in various programming applications like plagiarism detection. In most modern text editors and Integrated Development Environments (IDEs), Rabin-Karp string searching algorithm is used due to its efficiency in searching for duplicate strings or text. Its capability of detecting multiple pattern matches makes it widely used in data analysis and manipulation tools as well.",hints:[{hint:'"Compute the hash of the pattern and the first window (substring of same length) in text. Slide the window across text, updating the hash incrementally (rolling hash). If a hash match occurs, verify the actual substring (to avoid false positives due to hash collisions). Store the starting index if pattern matches."'},{hint:'"The hash function is computed as: H=(i=0 \u2211m\u22121 ord(s[i])\xD7base (m\u2212i\u22121))modprime, where base (e.g., 31 or 101) and prime (e.g., large prime like 1e9+7) are chosen for minimizing hash collisions. The rolling hash update (for next window) is: H new =(H old\u2212ord(s[i])\xD7base (m\u22121))\xD7base+ord(s[i+m])."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Brute-force runs in O(nm) for worst case (e.g., repeated characters), while Rabin-Karp reduces comparisons via hashing.",question:"Why use Rabin-Karp instead of brute-force string matching?"},{answer:"Yes! Using hash sets, it can match multiple patterns simultaneously, useful in search engines and NLP.",question:"Can Rabin-Karp be used for multiple pattern matching?"}],interview_followup_questions:[{answer:"By allowing a Levenshtein Distance (edit distance) threshold, we can match near-patterns.",question:"How would you modify Rabin-Karp to find approximate matches?"},{answer:"Use a larger base (e.g., 131 or 257) to accommodate extended character ranges.",question:"How does Rabin-Karp handle Unicode or large character sets?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_zfunction",problem_name:"Z function",problem_slug:"z-function",problem_rank:2,misc:{tags:["Johnson & Johnson","IBM","Bloomberg","Cloudflare","Zomato","Cerner","JPMorgan Chase","Bain & Company","Walmart","AMD","PayPal","Docker","OYO Rooms","Chewy","Micron Technology","Unity Technologies","Intel","Snowflake","Twilio","Teladoc Health","Freshworks","Nutanix","Texas Instruments","Wayfair","Rockstar Games","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: The underlying concept of this problem, finding the occurrences of a pattern in a text string, is commonly used in search engines and text editors. For example, the 'Find' or 'Search' function in text editors like Notepad or Word, uses similar algorithms to highlight or navigate to the occurrences of a search term within the open document. Similarly, search engines like Google also use more complex variations of this algorithm to find and display relevant web pages containing the user's search terms.",hints:[{hint:'"Concatenate pattern, a separator ($), and text: S = \\text{pattern} + ""$"" + \\text{text} This ensures that if pattern exists in text, the Z-array will contain prefix matches at corresponding indices."'},{hint:"The Z-array at index i gives the longest prefix of S starting at i that matches the prefix of S. If Z[i] == len(pattern), it means pattern appears in text at index i - (len(pattern) + 1). If Z[i] matches pattern length, compute the starting index in text using offset correction."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`The Z-function preprocesses the entire string in O(n) and does not require a separate prefix function computation like KMP.
It is easier to implement and works well for single pattern searching.`,question:"Why use the Z-function instead of other algorithms like KMP?"},{answer:`The Z-array computes the longest matching prefix starting at each position.
If Z[i] == len(pattern), the pattern occurs at i - (len(pattern) + 1) in text.`,question:"How does the Z-function ensure pattern matching?"}],interview_followup_questions:[{answer:"Z-function is deterministic (O(n)), while Rabin-Karp relies on hashing and can degrade to O(nm) in worst cases.",question:"How does the Z-function compare to Rabin-Karp for multiple pattern searches?"},{answer:"Yes, instead of exact matches, allow a threshold edit distance using dynamic programming techniques.",question:"Can we modify the Z-function for approximate string matching?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_kmpalgorithm",problem_name:"KMP Algorithm or LPS array",problem_slug:"kmp-algorithm-or-lps-array",problem_rank:3,misc:{tags:["Square","Wayfair","OYO Rooms","Goldman Sachs","Flipkart","Rockstar Games","Activision Blizzard","Target","MongoDB","Databricks","Chewy","AMD","Uber","Snowflake","Morgan Stanley","Airbnb","Zomato","Western Digital","Reddit","Lyft","Teladoc Health","Optum","Cerner","American Express","Seagate Technology","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"The Knuth-Morris-Pratt (KMP) algorithm, the underlying concept for solving this problem, is exceptionally useful and widely applied in the real world. For instance, search functions in word processors, text editors, and browsers use pattern matching algorithms similar to KMP. It enables them to quickly find and highlight all occurrences of a user's input within the loaded document or webpage \u2014 important for productivity and usability. Particularly, KMP is known for its efficiency as it avoids backtracking, thus providing quicker search results.",hints:[{hint:'"Use two pointers: one for text, one for pattern. If characters match, move both forward. If a mismatch occurs, use LPS to avoid unnecessary comparisons."'},{hint:"When the pattern completely matches, store its starting index in a result list."}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Instead of restarting after a mismatch, LPS shifts the pattern intelligently to align with previous matches.",question:"How does the LPS array optimize the search?"},{answer:"The LPS table efficiently skips redundant character comparisons, making KMP well-suited for such cases.",question:"What happens when a pattern contains repeated characters?"}],interview_followup_questions:[{answer:"KMP already supports overlapping matches without modification.",question:"What happens if we need to find overlapping occurrences?"},{answer:"Yes, by allowing tolerances for mismatches using dynamic programming.",question:"Can KMP be modified for approximate pattern matching?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_shortestpalindrome",problem_name:"Shortest Palindrome",problem_slug:"shortest-palindrome",problem_rank:4,misc:{tags:["Wayfair","Qualcomm","eBay","Roche","Walmart","Zomato","Rockstar Games","Philips Healthcare","AMD","Roblox","GE Healthcare","Oracle","Deloitte","IBM","Square","American Express","Bungie","Electronic Arts","Johnson & Johnson","Cloudflare","Chewy","Snowflake","Airbnb","Freshworks","Optum","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"Fun Fact: While the exact problem may not be directly applicable in real-life, the underlying concepts behind this problem are quite important. They involve working with strings, understanding palindromes and an essential grip on algorithm optimization. For instance, within Bioinformatics, algorithms with similar concepts are used in DNA sequence alignment. Furthermore, palindrome detection has its significance in error detection and correction in data transmission. A simple use could also be seen in developing certain types of games or in palindrome date detection used in some calendar related applications!",hints:[{hint:'"The $ separator prevents false matches across original and reversed portions. Compute the LPS (Longest Prefix Suffix) array for this new concatenated string. The LPS value at the last index gives the longest palindromic prefix of s."'},{hint:'"Take the remaining suffix (i.e., rev_s[:suffix_length]). Append it in front of s to form the shortest palindrome."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"The separator ($) prevents unwanted overlapping between s and rev_s.",question:'Why use s + "$" + rev_s instead of just s + rev_s?'},{answer:"We extend s by adding characters only to the beginning instead of searching within.",question:"How does this differ from finding the longest palindromic substring?"}],interview_followup_questions:[{answer:"Use Manacher\u2019s algorithm to find the longest palindromic substring, then determine the shortest extension.",question:"How would you modify the approach to allow adding characters anywhere (not just at the start)?"},{answer:`Yes, a DP table can store minimum insertions needed, but it runs in O(n^2) instead of O(n).
`,question:"Can we solve this using dynamic programming (DP)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_longesthappyprefix",problem_name:"Longest happy prefix",problem_slug:"longest-happy-prefix",problem_rank:5,misc:{tags:["Wayfair","Intel","American Express","Databricks","Epic Games","Western Digital","Mastercard","Etsy","PayPal","McKinsey & Company","Dropbox","Shopify","Texas Instruments","KPMG","JPMorgan Chase","Target","ARM","Red Hat","Electronic Arts","Philips Healthcare","Rockstar Games","Cloudflare","Docker","Square","Reddit","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"This type of problem is prevalent in the development of algorithms used in data compression, pattern recognition, and string matching. In the software industry, particularly in building search engines or plagiarism detectors, a common task is to find repeated strings or patterns. A real-world example is the KMP (Knuth-Morris-Pratt) algorithm, often used in the UNIX grep command, that searches for occurrences of a word within a main text string. This algorithm leverages the idea of happy prefixes to avoid backtracking - thus speeding up the search process.",hints:[{hint:'"Compute the LPS Array:  The LPS array for s stores the length of the longest prefix that is also a suffix for each prefix of s. The last value in LPS gives the length of the longest happy prefix."'},{hint:'Extract the happy prefix:  If lps[-1] > 0, return s[:lps[-1]]. Otherwise, return """".'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:"Yes! We can track all non-zero LPS values leading to multiple valid prefixes.",question:"Can we extend this approach to find multiple happy prefixes?"}],interview_followup_questions:[{answer:"LPS (KMP) is best for prefix-suffix problems, while Z-algorithm is better for substring matching.",question:"How does this compare to Z-algorithm for pattern matching?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"strings(advancedalgo)_contest",subcategory_name:"Contest",subcategory_slug:"strings-contest",subcategory_rank:3,subcategory_type:"contest",problems:[{problem_id:"count_prefix_appearances",problem_name:"Count Prefix Appearances",problem_slug:"count-prefix-appearances",problem_rank:0,misc:"{}",problem_type:"DSA",hasIDE:!0},{problem_id:"distinct_substrings",problem_name:"Distinct Substrings",problem_slug:"distinct-substrings",problem_rank:1,misc:"{}",problem_type:"DSA",hasIDE:!0},{problem_id:"minimum_repetations",problem_name:"Minimum Repetations",problem_slug:"minimum-repetations",problem_rank:2,misc:"{}",problem_type:"DSA",hasIDE:!0}]}]},{category_id:"maths",category_name:"Maths",category_slug:"maths",category_rank:18,subcategories:[{subcategory_id:"maths_sieveoferatosthenes",subcategory_name:"Sieve of Eratosthenes",subcategory_slug:"sieve-of-eratosthenes",subcategory_rank:0,subcategory_type:"study",problems:[{problem_id:"maths_maths_sieveoferatosthenes_printallprimestilln",problem_name:"Print all primes till N",problem_slug:"print-all-primes-till-n",problem_rank:1,misc:{tags:["Roblox","Twilio","Rockstar Games","Reddit","Roche","Optum","Pinterest","Bain & Company","Medtronic","HCL Technologies","Alibaba","Deloitte","Epic Systems","Ubisoft","Wayfair","Bloomberg","Instacart","Mastercard","Robinhood","Philips Healthcare","ARM","GE Healthcare","McKinsey & Company","Rakuten","eBay","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"A brute-force approach would check each number from 2 to n and determine if it is prime by checking divisibility from 2 to sqrt(n). However, this results in O(n\u221An) complexity, which is inefficient for large n."},{hint:'"A more efficient approach is the Sieve of Eratosthenes, which:  Assumes all numbers are prime initially. Iteratively marks multiples of known primes as non-prime. Outputs the remaining numbers as prime."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Instead of checking divisibility for each number, it eliminates non-primes in bulk by marking multiples.
It avoids redundant computations, making it significantly faster for large numbers.`,question:"Why is Sieve of Eratosthenes more efficient than brute force?"},{answer:`Segmented Sieve: Breaks n into smaller chunks, reducing memory usage.
Miller-Rabin Test: Probabilistic prime-checking used for huge numbers.`,question:"Can we generate primes more efficiently for very large numbers (n > 10^9)?"}],interview_followup_questions:[{answer:"Use the Miller-Rabin Primality Test for fast probabilistic prime checking.",question:"How can we efficiently check if a single number is prime?"},{answer:"Use the prime-counting function with binary search on the sieve output.",question:"What if we needed only the k-th prime number instead of all primes?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"maths_maths_sieveoferatosthenes_primefactorisationofanumber",problem_name:"Prime factorisation of a Number",problem_slug:"prime-factorisation-of-a-number",problem_rank:2,misc:{tags:["eBay","Splunk","Salesforce","Medtronic","Walmart","AMD","KPMG","Etsy","Activision Blizzard","Riot Games","Western Digital","Siemens Healthineers","Epic Games","Visa","Alibaba","Pinterest","Rakuten","Flipkart","Texas Instruments","HashiCorp","Seagate Technology","Swiggy","Boston Consulting Group","Morgan Stanley","Lyft","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"A brute-force approach iterates through each number in queries and finds prime factors by checking divisibility from 2 to sqrt(num). This runs in O(n\u221Am) (where m is the largest number in queries), which is inefficient for large numbers."},{hint:'"A better approach is the Modified Sieve of Eratosthenes, which:  Precomputes the smallest prime factor (SPF) for all numbers up to the max(queries). Uses SPF to quickly factorize numbers in O(log m) time per number instead of checking divisibility repeatedly."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`The Smallest Prime Factor (SPF) array allows factorization in O(log m) per number by iteratively dividing by precomputed smallest primes.
Brute-force checking requires O(\u221Am) per number, which is slower.`,question:"Why use SPF instead of brute-force division?"},{answer:"Standard Sieve finds primes, but Modified Sieve precomputes SPF, allowing faster factorization.",question:"Can we use the Sieve of Eratosthenes directly for factorization?"}],interview_followup_questions:[{answer:"Pollard\u2019s Rho is used for extremely large numbers (e.g., 10\xB9\u2078+), whereas SPF is best for numbers \u2264 10\u2076.",question:"How does this compare to Pollard\u2019s Rho algorithm for factorization?"},{answer:"Instead of storing factors in a list, use a dictionary to count occurrences.",question:"How would you modify this approach to return factors with their exponents (e.g., {2:3, 5:1} for 40)?"}]},problem_type:"DSA",hasIDE:!0},{problem_id:"maths_maths_sieveoferatosthenes_countprimesinrangeltor",problem_name:"Count primes in range L to R",problem_slug:"count-primes-in-range-l-to-r",problem_rank:3,misc:{tags:["Reddit","Zomato","Salesforce","Zynga","Target","American Express","Lyft","Docker","Walmart","Unity Technologies","eBay","Mastercard","JPMorgan Chase","Bain & Company","Twilio","Byju's","Optum","Freshworks","Siemens Healthineers","PwC","Broadcom","Ubisoft","Robinhood","Texas Instruments","Wayfair","Google","Microsoft","Amazon","Meta","Apple","Netflix","Adobe"],facts:"",hints:[{hint:"A brute-force approach would check each number in the range [L, R] for primality using trial division, resulting in O(n\u221Am) complexity (where m is the largest number in queries). This is inefficient for large R."},{hint:'"A better approach is the Prefix Sum of Primes using the Sieve of Eratosthenes:  Precompute all primes up to max(R) using the Sieve of Eratosthenes (O(m log log m)). Build a prefix sum array where prime_count[i] stores the count of primes from 1 to i (O(m))."'}],language:[],difficulty:"Hard",frequently_occuring_doubts:[{answer:`Without a prefix sum, each query takes O(\u221AR) (checking primality individually).
Prefix sum allows O(1) query lookups after an O(m log log m) preprocessing step.`,question:"Why use a prefix sum array instead of checking each range individually?"},{answer:"Directly return 1 if L is prime, otherwise return 0.",question:"What happens if L = R (query is a single number)?"}],interview_followup_questions:[{answer:"Modify prime_count[] to track primes at even indices (is_prime[i] && i % 2 == 0).",question:"How would you modify this to count only even-indexed primes?"},{answer:"Yes! Build a twin prime prefix sum array, then query similar to prime counts.",question:"Can we extend this to count twin primes (pairs (p, p+2)) in a range?"}]},problem_type:"DSA",hasIDE:!0}]},{subcategory_id:"maths_contest",subcategory_name:"Contest",subcategory_slug:"contest",subcategory_rank:1,subcategory_type:"contest",problems:[{problem_id:"win_or_lose",problem_name:"Win or Lose",problem_slug:"win-or-lose",problem_rank:0,misc:{tags:[],facts:"xyz",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0},{problem_id:"longest_factor_chain",problem_name:"Longest Factor Chain",problem_slug:"longest-factor-chain",problem_rank:1,misc:{tags:[],facts:"xyz",hints:[],difficulty:"Easy",frequently_occuring_doubts:[],interview_followup_questions:[]},problem_type:"DSA",hasIDE:!0}]}]}],isCoreSubject:0}};var Bu={success:!0,result:{"pascal's_triangle_ii":1744596355175,"pascal's_triangle_iii":1744594797509,"arrays_arrays_faqs(medium)_3sum":1744695117814,"arrays_arrays_faqs(medium)_4sum":1744697423422,extras_extras_patterns_pattern1:1727058733053,extras_extras_patterns_pattern2:1727058827679,extras_extras_patterns_pattern3:1727058893416,extras_extras_patterns_pattern4:1727058926559,extras_extras_patterns_pattern5:1727059152437,extras_extras_patterns_pattern6:1727059340707,extras_extras_patterns_pattern7:1727060209019,extras_extras_patterns_pattern8:1727060830622,extras_extras_patterns_pattern9:1727144798277,extras_extras_patterns_pattern10:1727146592941,extras_extras_patterns_pattern11:1727147035917,extras_extras_patterns_pattern12:1727148307575,extras_extras_patterns_pattern13:1727148532464,extras_extras_patterns_pattern14:1727149015137,extras_extras_patterns_pattern15:1727229857773,extras_extras_patterns_pattern16:1727230102509,extras_extras_patterns_pattern17:1727231492338,extras_extras_patterns_pattern18:1727234214892,extras_extras_patterns_pattern19:1727233615848,extras_extras_patterns_pattern20:1727233777547,extras_extras_patterns_pattern21:1727234198710,extras_extras_patterns_pattern22:1727235566690,"arrays_arrays_faqs(medium)_twosum":1744643538016,extras_fundamentals_basics_ifelseif:1726730078271,"arrays_arrays_faqs(hard)_reversepairs":1745382790165,sorting_sorting_algorithms_bubblesort:1737075490416,extras_fundamentals_basics_inputoutput:1726729681317,arrays_arrays_fundamentals_linearsearch:1745465058489,extras_extras_basicmaths_reverseanumber:1727263644181,extras_extras_basicstrings_rotatestring:1727450009586,extras_extras_basicstrings_validanagram:1727450375407,sorting_sorting_algorithms_mergesorting:1738724732440,sorting_sorting_algorithms_quicksorting:1738900302484,"arrays_arrays_faqs(hard)_countinversions":1745210959410,extras_extras_basicarrays_reverseanarray:1727281010557,extras_extras_basicmaths_gcdoftwonumbers:1727277659541,extras_extras_basicmaths_lcmoftwonumbers:1727278129721,sorting_sorting_algorithms_selectionsort:1737074389925,arrays_arrays_fundamentals_largestelement:1745465132767,extras_extras_basicmaths_palindromenumber:1727263982274,extras_extras_basicstrings_reverseastring:1727419924509,"arrays_arrays_faqs(hard)_majorityelement-i":1744862040020,arrays_arrays_fundamentals_leftrotatearray:1745474501275,arrays_arrays_logicbuilding_movezerostoend:1745476195128,extras_extras_basicmaths_divisorsofanumber:1727278683594,extras_extras_basicstrings_palindromecheck:1727420264390,"arrays_arrays_faqs(hard)_majorityelement-ii":1744953014384,"arrays_arrays_faqs(medium)_leadersinanarray":1744513111773,"arrays_arrays_faqs(medium)_pascal'striangle":1744596901479,extras_extras_basicrecursion_reverseanarray:1727495422436,extras_extras_basicrecursion_reverseastring:1727493006835,extras_extras_basicstrings_isomorphicstring:1727448909398,"recursion_recursion_implementation_pow(x,n)":1728981305862,recursion_recursion_implementation_powerset:1729992327687,sorting_sorting_algorithms_insertionsorting:1737077316638,"arrays_arrays_faqs(medium)_kadane'salgorithm":1744822633647,extras_extras_basicarrays_sumofarrayelements:1727280321740,extras_extras_basicmaths_checkforprimenumber:1727275835615,extras_extras_basicrecursion_fibonaccinumber:1727497185059,arrays_arrays_logicbuilding_findmissingnumber:1745477425213,extras_extras_basicmaths_checkforperfectnumber:1727268562989,extras_extras_basicstrings_longestcommonprefix:1727422162276,arrays_arrays_fundamentals_leftrotatearraybyone:1742044857019,arrays_arrays_fundamentals_secondlargestelement:1745465487130,extras_extras_basicrecursion_sumofarrayelements:1727492547839,extras_extras_basicrecursion_sumoffirstnnumbers:1727491808991,extras_extras_basicmaths_countalldigitsofanumber:1727263065143,extras_extras_basicmaths_factorialofagivennumber:1727264735571,extras_fundamentals_basics_printxnnumbersoftimes:1726730797074,"hashing_hashing_faqs_longestsubarraywithsumk-dup":1729925688048,arrays_arrays_fundamentals_maximumconsecutiveones:1745465654197,binarysearch_binarysearch_fundamentals_lowerbound:1728980616714,binarysearch_binarysearch_fundamentals_upperbound:1728980878175,extras_extras_basicarrays_checkifthearrayissorted:1727281125608,extras_extras_basicmaths_countofprimenumberstilln:1727276199210,extras_fundamentals_basics_ifelseadultteenproblem:1726729757836,"arrays_arrays_faqs(medium)_rotatematrixby90degrees":1744598059066,arrays_arrays_logicbuilding_unionoftwosortedarrays:1745553989839,extras_extras_basicarrays_countofoddnumbersinarray:1727280440626,extras_extras_basicstacks_implementqueueusingstack:1729154988884,extras_extras_basicstacks_implementstackusingqueue:1729150642464,extras_extras_basiclinkedlist_deletionoftheheadofll:1729079359712,extras_extras_basiclinkedlist_deletionofthetailofll:1729079809013,extras_extras_basicstacks_implementqueueusingarrays:1729149647209,extras_extras_basicstacks_implementstackusingarrays:1729145243407,"hashing_hashing_faqs_countsubarrayswithgivensum-dup":1729921166469,"arrays_arrays_faqs(medium)_sortanarrayof0's1'sand2's":1744820221618,extras_extras_basiclinkedlist_insertionattheheadofll:1729083629019,extras_extras_basiclinkedlist_insertionatthetailofll:1729083765328,extras_extras_basicmaths_checkifthenumberifarmstrong:1727265461924,extras_extras_basicrecursion_checkifthearrayissorted:1727496256021,extras_extras_basicrecursion_factorialofagivennumber:1727491699386,extras_extras_basicstrings_largestoddnumberinastring:1727421112797,extras_extras_basicstrings_sortcharactersbyfrequency:1727454061290,"hashing_hashing_faqs_countsubarrayswithgivenxork-dup":1729920074717,extras_fundamentals_basics_printlastcharacterofstring:1726731039210,graphs_graphs_theoryandtraversals_connectedcomponents:1729732564645,extras_extras_basiclinkedlist_insertionbeforethevaluex:1729085669957,extras_extras_basicrecursion_sumofdigitsinagivennumber:1727496604932,recursion_recursion_implementation_generateparanthesis:1729941578572,"arrays_arrays_faqs(medium)_printthematrixinspiralmanner":1744557219528,"arrays_arrays_faqs(medium)_rearrangearrayelementsbysign":1744543790674,extras_extras_basiclinkedlist_insertionatthekthposition:1729085169715,extras_extras_basicmaths_returnthelargestdigitinanumber:1727264082762,extras_extras_basicrecursion_checkifanumberisprimeornot:1727495139178,extras_extras_basicstacks_implementqueueusinglinkedlist:1729158588018,extras_extras_basicstacks_implementstackusinglinkedlist:1729157698457,extras_fundamentals_basics_sumoffirstlastelementinarray:1726730204216,"arrays_arrays_faqs(hard)_maximumproductsubarrayinanarray":1745379317613,extras_extras_basichashing_secondhighestoccurringelement:1727405112743,extras_extras_basiclinkedlist_deletetheelementwithvaluex:1729083231876,extras_extras_basicmaths_countnumberofodddigitsinanumber:1727263303311,"greedyalgorithms_greedyalgorithms_easy/medium_jumpgame-i":1730702128773,"arrays_arrays_faqs(hard)_findtherepeatingandmissingnumber":1745200206344,arrays_arrays_logicbuilding_intersectionoftwosortedarrays:1745555071914,extras_extras_basichashing_sumofhighestandlowestfrequency:1727406490151,extras_extras_basiclinkedlist_deletionofthekthelementofll:1729082400750,"binarytrees_binarytrees_theory/traversals_inordertraversal":1729215083388,arrays_arrays_logicbuilding_removeduplicatesfromsortedarray:1745476933241,binarysearch_binarysearch_fundamentals_searchxinsortedarray:1728979838560,"binarytrees_binarytrees_theory/traversals_preordertraversal":1729214936102,extras_extras_basicrecursion_checkifstringispalindromeornot:1727494568376,"greedyalgorithms_greedyalgorithms_easy/medium_assigncookies":1730518417237,"binarytrees_binarytrees_theory/traversals_postordertraversal":1729215261256,"greedyalgorithms_greedyalgorithms_easy/medium_lemonadechange":1730519679030,"hashing_hashing_faqs_longestconsecutivesequenceinanarray-dup":1728431131461,"stack/queues_stack/queues_implementation_balancedparanthesis":1729159710257,"binarytrees_binarytrees_theory/traversals_levelordertraversal":1729216682650,"arrays_arrays_faqs(hard)_mergetwosortedarrayswithoutextraspace":1745296525190,binarysearchtrees_binarysearchtrees_theoryandbasics_floorinabst:1729649860024,binarysearchtrees_binarysearchtrees_theoryandbasics_searchinbst:1729238052853,"linked-list_linked-list_fundamentals(singlell)_traversalinlinkedlist":1729067914327,"binarytrees_binarytrees_theory/traversals_pre,post,inorderinonetraversal":1729237045975}};var xi=class{static getUniqueDifficulties(n){return[...new Set(n.map(e=>e.difficulty))].sort((e,t)=>e.localeCompare(t))}static getUniqueCategoryNames(n){let e=new Set;return n.forEach(t=>{e.add(t.category_name)}),Array.from(e)}static getUniqueCategoryPairs(n){let e=new Map;return n.forEach(t=>{e.set(t.category_slug,{slug:t.category_slug,name:t.category_name})}),Array.from(e.values())}static getUniqueSubCategoryNames(n){let e=new Set;return n.forEach(t=>{e.add(t.subcategory_name)}),Array.from(e)}static getUniqueSubcategoryPairs(n){let e=new Map;return n.forEach(t=>{e.set(t.subcategory_slug,{slug:t.subcategory_slug,name:t.subcategory_name})}),Array.from(e.values())}static getUniqueTags(n){return[...new Set(n.flatMap(e=>e.tags))].sort((e,t)=>e.localeCompare(t))}};var q_=["difficultyChipInput"],O_=["CategoryChipInput"],F_=["subCategoryChipInput"],P_=["tagsChipInput"];function B_(i,n){if(i&1&&(m(0,"mat-option",47),te(1),f()),i&2){let e=n.$implicit;F("value",e.key),g(),Pe(" ",e.value," ")}}function N_(i,n){if(i&1){let e=Ie();m(0,"mat-chip-row",48),H("removed",function(){let o=J(e).$implicit,a=ie();return Q(a.removeDifficultyChip(o))}),te(1),m(2,"button",49)(3,"mat-icon"),te(4,"cancel"),f()()()}if(i&2){let e=n.$implicit;F("removable",!0),g(),Pe(" ",e," ")}}function H_(i,n){if(i&1&&(m(0,"mat-option",47),te(1),f()),i&2){let e=n.$implicit;F("value",e),g(),Pe(" ",e," ")}}function L_(i,n){if(i&1){let e=Ie();m(0,"mat-chip-row",48),H("removed",function(){let o=J(e).$implicit,a=ie();return Q(a.removeCategoryChip(o))}),te(1),m(2,"button",49)(3,"mat-icon"),te(4,"cancel"),f()()()}if(i&2){let e=n.$implicit;F("removable",!0),g(),Pe(" ",e," ")}}function z_(i,n){if(i&1&&(m(0,"mat-option",47),te(1),f()),i&2){let e=n.$implicit;F("value",e),g(),Pe(" ",e," ")}}function j_(i,n){if(i&1){let e=Ie();m(0,"mat-chip-row",48),H("removed",function(){let o=J(e).$implicit,a=ie();return Q(a.removeSubcategoryChip(o))}),te(1),m(2,"button",49)(3,"mat-icon"),te(4,"cancel"),f()()()}if(i&2){let e=n.$implicit;F("removable",!0),g(),Pe(" ",e," ")}}function W_(i,n){if(i&1&&(m(0,"mat-option",47),te(1),f()),i&2){let e=n.$implicit;F("value",e),g(),Pe(" ",e," ")}}function U_(i,n){if(i&1){let e=Ie();m(0,"mat-chip-row",48),H("removed",function(){let o=J(e).$implicit,a=ie();return Q(a.removeTagsChip(o))}),te(1),m(2,"button",49)(3,"mat-icon"),te(4,"cancel"),f()()()}if(i&2){let e=n.$implicit;F("removable",!0),g(),Pe(" ",e," ")}}function V_(i,n){if(i&1&&(m(0,"mat-option",47),te(1),f()),i&2){let e=n.$implicit;F("value",e),g(),Pe(" ",e," ")}}function G_(i,n){i&1&&(m(0,"th",50),te(1,"Status"),f())}function Y_(i,n){if(i&1&&(m(0,"td",51),ae(1,"mat-checkbox",52),f()),i&2){let e=n.$implicit;g(),F("checked",e.isDone)}}function K_(i,n){i&1&&(m(0,"th",50),te(1,"Difficulty"),f())}function Z_(i,n){if(i&1&&(m(0,"td",51)(1,"span",53),te(2),f()()),i&2){let e=n.$implicit;g(),F("ngClass",e.difficulty),g(),Qe(e.difficulty)}}function $_(i,n){i&1&&(m(0,"th",50),te(1,"Category"),f())}function J_(i,n){if(i&1&&(m(0,"td",51),te(1),f()),i&2){let e=n.$implicit;g(),Qe(e.category_name)}}function Q_(i,n){i&1&&(m(0,"th",50),te(1,"Subcategory"),f())}function X_(i,n){if(i&1&&(m(0,"td",51),te(1),f()),i&2){let e=n.$implicit;g(),Qe(e.subcategory_name)}}function ev(i,n){i&1&&(m(0,"th",50),te(1,"tuf+"),f())}function tv(i,n){if(i&1&&(m(0,"td",51)(1,"a",54),ae(2,"img",55),f()()),i&2){let e=n.$implicit;g(),Bl("href","https://takeuforward.org/plus/dsa/",e.category_slug,"/",e.subcategory_slug,"/",e.problem_slug,"?tab=editorial",Il)}}function iv(i,n){i&1&&(m(0,"th",50),te(1,"Problem"),f())}function nv(i,n){if(i&1&&(m(0,"td",51),te(1),f()),i&2){let e=n.$implicit;g(),Pe(" ",e.problem_name," ")}}function ov(i,n){i&1&&ae(0,"tr",56)}function av(i,n){i&1&&ae(0,"tr",57)}var Ha=class i{isDarkMode=!0;totalProblems=0;allSyllabus=Pu;progressData=Bu;progress=[];flatProblems=[];sortByOptions=[{key:"difficulty",value:"Difficulty"},{key:"category_id",value:"Category"},{key:"subcategory_id",value:"Subcategory"},{key:"problem_id",value:"Problem"}];selectedsortBy=this.sortByOptions[0].key;searchTerm="";sortDirection="asc";separatorKeysCodes=[13,188];difficultyChipCtrl=new yi("");selectedDifficultyChips=[];difficultiesList=[];filteredDifficultyOptions;difficultyChipInput;categoryChipCtrl=new yi("");selectedCategorychips=[];categoriesList=[];filteredCategoryOptions;CategoryChipInput;subCatgoryChipCtrl=new yi("");selectedSubCatgoryChips=[];subcategoriesList=[];filteredSubCatgoryOptions;subCategoryChipInput;tagsChipCtrl=new yi("");selectedTagsChips=[];tagsList=[];filteredTagsOptions;tagsChipInput;constructor(){this.filteredDifficultyOptions=this.difficultyChipCtrl.valueChanges.pipe(_e(null),E(n=>this._chipsDropDownfilter(n,this.difficultiesList,this.selectedDifficultyChips))),this.filteredCategoryOptions=this.categoryChipCtrl.valueChanges.pipe(_e(null),E(n=>this._chipsDropDownfilter(n,this.categoriesList,this.selectedCategorychips))),this.filteredSubCatgoryOptions=this.subCatgoryChipCtrl.valueChanges.pipe(_e(null),E(n=>this._chipsDropDownfilter(n,this.subcategoriesList,this.selectedSubCatgoryChips))),this.filteredTagsOptions=this.tagsChipCtrl.valueChanges.pipe(_e(null),E(n=>this._chipsDropDownfilter(n,this.tagsList,this.selectedTagsChips)))}ngOnInit(){this.progress=Object.keys(this.progressData.result),this.flatProblems=uo.flatten(this.allSyllabus,this.progress),this.totalProblems=this.flatProblems.length,this.difficultiesList=xi.getUniqueDifficulties(this.flatProblems),this.categoriesList=xi.getUniqueCategoryNames(this.flatProblems),this.subcategoriesList=xi.getUniqueSubCategoryNames(this.flatProblems),this.tagsList=xi.getUniqueTags(this.flatProblems);let n=localStorage.getItem("strivers-dsa-quest");if(n){let e=JSON.parse(n);this.searchTerm=e.searchTerm,this.allSyllabus=e.allSyllabus,this.progress=e.progress,this.selectedDifficultyChips=e.selectedDifficultyChips,this.selectedCategorychips=e.selectedCategorychips,this.selectedSubCatgoryChips=e.selectedSubCatgoryChips,this.selectedTagsChips=e.selectedTagsChips,this.selectedsortBy=e.selectedsortBy,this.sortDirection=e.sortDirection,this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)}}updateLocalStorage(){let n={searchTerm:this.searchTerm,allSyllabus:this.allSyllabus,progress:this.progress,selectedDifficultyChips:this.selectedDifficultyChips,selectedCategorychips:this.selectedCategorychips,selectedSubCatgoryChips:this.selectedSubCatgoryChips,selectedTagsChips:this.selectedTagsChips,selectedsortBy:this.selectedsortBy,sortDirection:this.sortDirection};localStorage.setItem("strivers-dsa-quest",JSON.stringify(n))}get doneCount(){return this.flatProblems.filter(n=>n.isDone).length}get notDoneCount(){return this.flatProblems.filter(n=>!n.isDone).length}filterProblems(n,e,t,o,a,r){this.flatProblems=uo.flattenAndFilter(this.searchTerm,this.allSyllabus,this.progress,n,e,t,o,a,r),this.updateLocalStorage()}_chipsDropDownfilter(n,e,t){let o=(n||"").toLowerCase();return e.filter(a=>a.toLowerCase().includes(o)&&!t.includes(a))}onSearch(){this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection),this.flatProblems=[...this.flatProblems]}onSortChange(n){this.selectedsortBy=n,this.sortFlatProblems(),this.updateLocalStorage()}toggleSortDirection(){this.sortDirection=this.sortDirection==="asc"?"desc":"asc",this.sortFlatProblems(),this.updateLocalStorage()}resetFilter(){this.searchTerm="",this.selectedDifficultyChips=[],this.selectedCategorychips=[],this.selectedSubCatgoryChips=[],this.selectedTagsChips=[],this.selectedsortBy=this.sortByOptions[0].key,this.sortDirection="asc",this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)}sortFlatProblems(){let n=this.flatProblems.filter(e=>{let t=this.searchTerm.trim().toLowerCase();return e.problem_id.toLowerCase().includes(t)||e.problem_name.toLowerCase().includes(t)||e.problem_slug.toLowerCase().includes(t)});this.flatProblems.sort((e,t)=>{let o=this.selectedsortBy,a=e[o],r=t[o];return typeof a=="string"&&typeof r=="string"&&(a=a.toLowerCase(),r=r.toLowerCase()),a<r?this.sortDirection==="asc"?-1:1:a>r?this.sortDirection==="asc"?1:-1:0}),this.flatProblems=[...this.flatProblems]}addDifficultyChip(n){let e=(n.value||"").trim();e&&!this.selectedDifficultyChips.includes(e)&&this.selectedDifficultyChips.push(e),n.chipInput&&n.chipInput.clear(),this.difficultyChipCtrl.setValue(null)}removeDifficultyChip(n){let e=this.selectedDifficultyChips.indexOf(n);e>=0&&(this.selectedDifficultyChips.splice(e,1),this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)),this.difficultyChipCtrl.setValue(null)}selectedDifficultyChip(n){let e=n.option.viewValue;this.selectedDifficultyChips.includes(e)||(this.selectedDifficultyChips.push(e),this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)),this.difficultyChipInput.nativeElement.value="",this.difficultyChipCtrl.setValue(null)}addCategoryChip(n){let e=(n.value||"").trim();e&&!this.selectedCategorychips.includes(e)&&this.selectedCategorychips.push(e),n.chipInput&&n.chipInput.clear(),this.categoryChipCtrl.setValue(null)}removeCategoryChip(n){let e=this.selectedCategorychips.indexOf(n);e>=0&&(this.selectedCategorychips.splice(e,1),this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)),this.categoryChipCtrl.setValue(null)}selectedCategoryChip(n){let e=n.option.viewValue;this.selectedCategorychips.includes(e)||(this.selectedCategorychips.push(e),this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)),this.CategoryChipInput.nativeElement.value="",this.categoryChipCtrl.setValue(null)}addSubcategoryChip(n){let e=(n.value||"").trim();e&&!this.selectedSubCatgoryChips.includes(e)&&this.selectedSubCatgoryChips.push(e),n.chipInput&&n.chipInput.clear(),this.subCatgoryChipCtrl.setValue(null)}removeSubcategoryChip(n){let e=this.selectedSubCatgoryChips.indexOf(n);e>=0&&(this.selectedSubCatgoryChips.splice(e,1),this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)),this.subCatgoryChipCtrl.setValue(null)}selectedSubcategoryChip(n){let e=n.option.viewValue;this.selectedSubCatgoryChips.includes(e)||(this.selectedSubCatgoryChips.push(e),this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)),this.subCategoryChipInput.nativeElement.value="",this.subCatgoryChipCtrl.setValue(null)}addTagsChip(n){let e=(n.value||"").trim();e&&!this.selectedTagsChips.includes(e)&&this.selectedTagsChips.push(e),n.chipInput&&n.chipInput.clear(),this.tagsChipCtrl.setValue(null)}removeTagsChip(n){let e=this.selectedTagsChips.indexOf(n);e>=0&&(this.selectedTagsChips.splice(e,1),this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)),this.tagsChipCtrl.setValue(null)}selectedChip4(n){let e=n.option.viewValue;this.selectedTagsChips.includes(e)||(this.selectedTagsChips.push(e),this.filterProblems(this.selectedDifficultyChips,this.selectedCategorychips,this.selectedSubCatgoryChips,this.selectedTagsChips,this.selectedsortBy,this.sortDirection)),this.tagsChipInput.nativeElement.value="",this.tagsChipCtrl.setValue(null)}displayedColumns=["id","difficulty","category_name","subcategory_name","tuf_link","problem_name"];static \u0275fac=function(e){return new(e||i)};static \u0275cmp=V({type:i,selectors:[["app-root"]],viewQuery:function(e,t){if(e&1&&(oe(q_,5),oe(O_,5),oe(F_,5),oe(P_,5)),e&2){let o;x(o=C())&&(t.difficultyChipInput=o.first),x(o=C())&&(t.CategoryChipInput=o.first),x(o=C())&&(t.subCategoryChipInput=o.first),x(o=C())&&(t.tagsChipInput=o.first)}},standalone:!0,features:[G],decls:85,vars:46,consts:[["sidenav",""],["chipGrid1",""],["difficultyChipInput",""],["auto1","matAutocomplete"],["chipGrid2",""],["CategoryChipInput",""],["auto2","matAutocomplete"],["chipGrid3",""],["subCategoryChipInput",""],["auto3","matAutocomplete"],["chipGrid4",""],["tagsChipInput",""],["auto4","matAutocomplete"],[3,"ngClass"],[1,"app-container"],["mode","side","opened",""],[1,"sidebar-form"],[1,"main-content"],["placeholder","Sort By","name","selectedsortBy",3,"ngModelChange","selectionChange","ngModel"],[3,"value",4,"ngFor","ngForOf"],["mat-icon-button","","matSuffix","",3,"click"],["matInput","","name","searchTerm","placeholder","",3,"ngModelChange","keyup","ngModel"],["appearance","outline",2,"width","100%"],["aria-label","Difficulty"],[3,"removable","removed",4,"ngFor","ngForOf"],["placeholder","Difficulty",3,"matChipInputTokenEnd","formControl","matChipInputFor","matChipInputSeparatorKeyCodes","matAutocomplete"],[3,"optionSelected"],["aria-label","Category"],["placeholder","Category",3,"matChipInputTokenEnd","formControl","matChipInputFor","matChipInputSeparatorKeyCodes","matAutocomplete"],["aria-label","Sub-Category"],["placeholder","Sub-Category",3,"matChipInputTokenEnd","formControl","matChipInputFor","matChipInputSeparatorKeyCodes","matAutocomplete"],["aria-label","Tags"],["placeholder","Tags",3,"matChipInputTokenEnd","formControl","matChipInputFor","matChipInputSeparatorKeyCodes","matAutocomplete"],[1,"problems-content"],[2,"margin-bottom","16px"],[2,"color","orangered"],["mat-table","",1,"mat-elevation-z8",3,"dataSource"],["matColumnDef","id"],["mat-header-cell","",4,"matHeaderCellDef"],["mat-cell","",4,"matCellDef"],["matColumnDef","difficulty"],["matColumnDef","category_name"],["matColumnDef","subcategory_name"],["matColumnDef","tuf_link"],["matColumnDef","problem_name"],["mat-header-row","",4,"matHeaderRowDef"],["mat-row","",4,"matRowDef","matRowDefColumns"],[3,"value"],[3,"removed","removable"],["matChipRemove",""],["mat-header-cell",""],["mat-cell",""],[3,"checked"],[1,"badge",3,"ngClass"],["target","_blank",3,"href"],["src","./assets/img/tufplus.svg"],["mat-header-row",""],["mat-row",""]],template:function(e,t){if(e&1){let o=Ie();m(0,"div",13)(1,"mat-sidenav-container",14)(2,"mat-sidenav",15,0)(4,"form",16)(5,"div",17)(6,"mat-form-field")(7,"mat-select",18),$a("ngModelChange",function(r){return J(o),Za(t.selectedsortBy,r)||(t.selectedsortBy=r),Q(r)}),H("selectionChange",function(r){return J(o),Q(t.onSortChange(r.value))}),R(8,B_,2,2,"mat-option",19),f()(),m(9,"button",20),H("click",function(){return J(o),Q(t.toggleSortDirection())}),m(10,"mat-icon"),te(11),f()()(),m(12,"mat-form-field")(13,"mat-label"),te(14,"Search ..."),f(),m(15,"input",21),$a("ngModelChange",function(r){return J(o),Za(t.searchTerm,r)||(t.searchTerm=r),Q(r)}),H("keyup",function(){return J(o),Q(t.onSearch())}),f()(),m(16,"mat-form-field",22)(17,"mat-chip-grid",23,1),R(19,N_,5,2,"mat-chip-row",24),m(20,"input",25,2),H("matChipInputTokenEnd",function(r){return J(o),Q(t.addDifficultyChip(r))}),f()(),m(22,"mat-autocomplete",26,3),H("optionSelected",function(r){return J(o),Q(t.selectedDifficultyChip(r))}),R(24,H_,2,2,"mat-option",19),gn(25,"async"),f()(),m(26,"mat-form-field",22)(27,"mat-chip-grid",27,4),R(29,L_,5,2,"mat-chip-row",24),m(30,"input",28,5),H("matChipInputTokenEnd",function(r){return J(o),Q(t.addCategoryChip(r))}),f()(),m(32,"mat-autocomplete",26,6),H("optionSelected",function(r){return J(o),Q(t.selectedCategoryChip(r))}),R(34,z_,2,2,"mat-option",19),gn(35,"async"),f()(),m(36,"mat-form-field",22)(37,"mat-chip-grid",29,7),R(39,j_,5,2,"mat-chip-row",24),m(40,"input",30,8),H("matChipInputTokenEnd",function(r){return J(o),Q(t.addSubcategoryChip(r))}),f()(),m(42,"mat-autocomplete",26,9),H("optionSelected",function(r){return J(o),Q(t.selectedSubcategoryChip(r))}),R(44,W_,2,2,"mat-option",19),gn(45,"async"),f()(),m(46,"mat-form-field",22)(47,"mat-chip-grid",31,10),R(49,U_,5,2,"mat-chip-row",24),m(50,"input",32,11),H("matChipInputTokenEnd",function(r){return J(o),Q(t.addTagsChip(r))}),f()(),m(52,"mat-autocomplete",26,12),H("optionSelected",function(r){return J(o),Q(t.selectedChip4(r))}),R(54,V_,2,2,"mat-option",19),gn(55,"async"),f()(),m(56,"button",20),H("click",function(){return J(o),Q(t.resetFilter())}),m(57,"mat-icon"),te(58,"refresh"),f()()()(),m(59,"mat-sidenav-content")(60,"div",33)(61,"div",34)(62,"b",35),te(63),f()(),m(64,"table",36),yt(65,37),R(66,G_,2,0,"th",38)(67,Y_,2,1,"td",39),_t(),yt(68,40),R(69,K_,2,0,"th",38)(70,Z_,3,2,"td",39),_t(),yt(71,41),R(72,$_,2,0,"th",38)(73,J_,2,1,"td",39),_t(),yt(74,42),R(75,Q_,2,0,"th",38)(76,X_,2,1,"td",39),_t(),yt(77,43),R(78,ev,2,0,"th",38)(79,tv,3,4,"td",39),_t(),yt(80,44),R(81,iv,2,0,"th",38)(82,nv,2,1,"td",39),_t(),R(83,ov,1,0,"tr",45)(84,av,1,0,"tr",46),f()()()()()}if(e&2){let o=Re(18),a=Re(23),r=Re(28),s=Re(33),l=Re(38),d=Re(43),h=Re(48),u=Re(53);F("ngClass",t.isDarkMode?"darkMode mat-app-background":"lightMode mat-app-background"),g(7),Ka("ngModel",t.selectedsortBy),g(),F("ngForOf",t.sortByOptions),g(),X("aria-label","Toggle sort direction"),g(2),Qe(t.sortDirection==="asc"?"arrow_upward":"arrow_downward"),g(4),Ka("ngModel",t.searchTerm),g(4),F("ngForOf",t.selectedDifficultyChips),g(),F("formControl",t.difficultyChipCtrl)("matChipInputFor",o)("matChipInputSeparatorKeyCodes",t.separatorKeysCodes)("matAutocomplete",a),g(4),F("ngForOf",bn(25,38,t.filteredDifficultyOptions)),g(5),F("ngForOf",t.selectedCategorychips),g(),F("formControl",t.categoryChipCtrl)("matChipInputFor",r)("matChipInputSeparatorKeyCodes",t.separatorKeysCodes)("matAutocomplete",s),g(4),F("ngForOf",bn(35,40,t.filteredCategoryOptions)),g(5),F("ngForOf",t.selectedSubCatgoryChips),g(),F("formControl",t.subCatgoryChipCtrl)("matChipInputFor",l)("matChipInputSeparatorKeyCodes",t.separatorKeysCodes)("matAutocomplete",d),g(4),F("ngForOf",bn(45,42,t.filteredSubCatgoryOptions)),g(5),F("ngForOf",t.selectedTagsChips),g(),F("formControl",t.tagsChipCtrl)("matChipInputFor",h)("matChipInputSeparatorKeyCodes",t.separatorKeysCodes)("matAutocomplete",u),g(4),F("ngForOf",bn(55,44,t.filteredTagsOptions)),g(2),X("aria-label","Toggle sort direction"),g(7),Ll(" Filtered Problems ( ",t.flatProblems.length," / ",t.totalProblems," ) : ",t.doneCount," Solved - ",t.notDoneCount," remaining "),g(),F("dataSource",t.flatProblems),g(19),F("matHeaderRowDef",t.displayedColumns),g(),F("matRowDefColumns",t.displayedColumns)}},dependencies:[kt,ko,Zl,Jl,Od,bs,ys,aa,Fd,jd,zd,bi,th,da,Xd,Nh,Bh,Lh,Hh,Qh,$h,Jh,Zh,Os,Fh,Rh,wa,xh,Ch,Ds,Tt,Ph,Is,mu,hu,$i,Ks,bu,gu,Fu,Su,Iu,Eu,Au,Du,Ru,Mu,Tu,qu,Ou,Wh,Da],styles:[".app-container[_ngcontent-%COMP%]{height:100vh}.main-content[_ngcontent-%COMP%]{padding:10px}.full-width[_ngcontent-%COMP%]{width:100%}.sidebar-form[_ngcontent-%COMP%]{padding:16px;display:flex;flex-direction:column;gap:16px}mat-form-field[_ngcontent-%COMP%]{width:100%}.main-content[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center;padding:0}.pd-16[_ngcontent-%COMP%]{padding:16px}.mg-16[_ngcontent-%COMP%], .problems-content[_ngcontent-%COMP%]{margin:16px}mat-sidenav[_ngcontent-%COMP%], mat-sidenav-content[_ngcontent-%COMP%]{background-color:#212529}table[_ngcontent-%COMP%]{width:100%;background:#32383e;color:#fff}th.mat-header-cell[_ngcontent-%COMP%]{background:#32383e;color:#fff}td.mat-cell[_ngcontent-%COMP%]{color:#fff}.badge[_ngcontent-%COMP%]{display:inline-block;padding:4px 8px;font-size:.75rem;font-weight:600;color:#fff;text-align:center;border-radius:12px;-webkit-user-select:none;user-select:none}.Easy[_ngcontent-%COMP%]{background-color:#006400}.Medium[_ngcontent-%COMP%]{background-color:#b8860b}.Hard[_ngcontent-%COMP%]{background-color:#8b0000}.Unknown[_ngcontent-%COMP%]{background-color:#2f4f4f}  .mat-mdc-checkbox .mdc-checkbox{width:25px!important;min-width:25px!important;position:relative}  .mat-mdc-checkbox .mdc-checkbox__background{border-radius:50%!important;border:2px dotted #999!important;width:25px!important;height:25px!important;background:transparent!important;box-sizing:border-box;transition:background .2s;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}  .mdc-checkbox__ripple{width:25px!important;height:25px!important;border-radius:50%!important;left:50%!important;top:50%!important;transform:translate(-50%,-50%)!important}  .mat-mdc-checkbox.mat-mdc-checkbox-checked .mdc-checkbox__background{background-color:#4caf50!important;border:none!important}  .mat-mdc-checkbox .mdc-checkbox__checkmark-path{display:none!important}  .mat-mdc-checkbox.mat-mdc-checkbox-checked .mdc-checkbox__checkmark{left:8px!important;top:3px!important;width:6px!important;height:13px!important;border:solid white!important;border-width:0 3px 3px 0!important;transform:rotate(45deg) scale(1.1)!important;background:none!important;opacity:1!important}"]})};bc(Ha,ad).catch(i=>console.error(i));
